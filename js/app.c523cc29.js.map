{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/images/Binguo1.jpg","webpack:///./src/assets/images/Binguo2.jpg","webpack:///./src/assets/images/mobile/NGNL1.jpg","webpack:///./src/assets/images/STM2.jpg","webpack:///./src/assets/images/mobile/OnePunch1.jpg","webpack:///./src/index.vue?129e","webpack:///./src/js/Utils.js","webpack:///./src/webgl/sections/common/shaders/ppMaterial.vs","webpack:///./src/webgl/sections/common/shaders/scetionPPMaterial.fs","webpack:///./src/webgl/sections/common/ScetionPPMaterial.js","webpack:///./src/webgl/sections/common/Section.js","webpack:///./src/webgl/sections/common/AnimeNameTitle.js","webpack:///./src/webgl/sections/home/const/config.js","webpack:///./src/webgl/modules/BGMaterial/shaders/bgMaterial.vs","webpack:///./src/webgl/modules/BGMaterial/shaders/bgMaterial.fs","webpack:///./src/webgl/modules/BGMaterial/BGMaterial.js","webpack:///./src/webgl/modules/PBRMaterial/const/defaultParams.js","webpack:///./src/webgl/modules/PBRMaterial/PBRMaterial.js","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/function/computeDiffuseSPH.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/function/integrateBRDFMobile.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/function/panoramaSampler.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/function/precomputeLight.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/function/isotropyLightCompute.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/function/anisotropyLightCompute.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/math.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/shadow.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/light.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/brdf.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/ibl.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/clearCoat.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/chunk/advance.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/ShaderChunk.js","webpack:///./src/webgl/modules/PBRMaterial/shaders/pbrVS.glsl","webpack:///./src/webgl/modules/PBRMaterial/shaders/pbrFS.glsl","webpack:///./src/webgl/modules/PBRMaterial/PBRProgram.js","webpack:///./src/webgl/modules/ParticleTexture/shaders/particle.vs","webpack:///./src/webgl/modules/ParticleTexture/shaders/particle.fs","webpack:///./src/webgl/modules/Particle/ParticleInstance.js","webpack:///./src/webgl/modules/ParticleTexture/TouchTexture.js","webpack:///./src/webgl/modules/ParticleTexture/ParticleTexture.js","webpack:///./src/webgl/modules/Particle/Particle.js","webpack:///./src/webgl/modules/ParticleSnow/shaders/snow.vs","webpack:///./src/webgl/modules/ParticleSnow/shaders/snow.fs","webpack:///./src/webgl/modules/ParticleSnow/ParticleSnow.js","webpack:///./src/webgl/modules/PostProcessing/materials/shaders/copy/shader.fs","webpack:///./src/webgl/modules/PostProcessing/materials/shaders/common/shader.vs","webpack:///./src/webgl/modules/PostProcessing/materials/shaders/fxaa/shader.fs","webpack:///./src/webgl/modules/PostProcessing/materials/CopyMaterial.js","webpack:///./src/webgl/modules/PostProcessing/materials/FXAAMaterial.js","webpack:///./src/webgl/modules/PostProcessing/materials/shaders/glitch/shader.fs","webpack:///./src/webgl/modules/PostProcessing/materials/shaders/vignette/shader.fs","webpack:///./src/webgl/modules/PostProcessing/materials/GlitchMaterial.js","webpack:///./src/webgl/modules/PostProcessing/materials/VignetteMaterial.js","webpack:///./src/webgl/modules/PostProcessing/materials/shaders/blur/shader.fs","webpack:///./src/webgl/modules/PostProcessing/materials/BlurMaterial.js","webpack:///./src/libs/threejs/controls/OrbitControls.js","webpack:///./src/webgl/sections/common/InitGUI.js","webpack:///./src/webgl/sections/home/HomeSection.js","webpack:///./src/webgl/sections/anime/const/config.js","webpack:///./src/webgl/modules/GalleryTexture/shaders/noiseMask.vs","webpack:///./src/webgl/modules/GalleryTexture/shaders/noiseMask.fs","webpack:///./src/webgl/modules/GalleryTexture/GalleryTexture.js","webpack:///./src/webgl/modules/ParticlePolygon/shaders/particle.vs","webpack:///./src/webgl/modules/ParticlePolygon/shaders/particle.fs","webpack:///./src/webgl/modules/ParticlePolygon/ParticlePolygon.js","webpack:///./src/webgl/modules/Button/shaders/button.vs","webpack:///./src/webgl/modules/Button/shaders/arrowButton.fs","webpack:///./src/webgl/modules/Button/ArrowButton.js","webpack:///./src/webgl/modules/Button/shaders/closeButton.fs","webpack:///./src/webgl/modules/Button/CloseButton.js","webpack:///./src/webgl/modules/Button/shaders/ringButton.fs","webpack:///./src/webgl/modules/Button/RingButton.js","webpack:///./src/webgl/modules/Button/shaders/rectangleButton.fs","webpack:///./src/webgl/modules/Button/RectangleButton.js","webpack:///./src/webgl/sections/anime/AnimeSection.js","webpack:///./src/webgl/sections/work/const/config.js","webpack:///./src/webgl/sections/work/const/defaultParams.js","webpack:///./src/webgl/modules/TextureBG/shaders/image.vs","webpack:///./src/webgl/modules/TextureBG/shaders/image.fs","webpack:///./src/webgl/modules/TextureBG/TextureBG.js","webpack:///./src/webgl/modules/CubeBG/shaders/backgroundVS.glsl","webpack:///./src/webgl/modules/CubeBG/shaders/backgroundFS.glsl","webpack:///./src/webgl/modules/CubeBG/BackgroundMaterial.js","webpack:///./src/webgl/modules/CubeBG/Background.js","webpack:///./src/webgl/sections/work/WorkSection.js","webpack:///./src/webgl/sections/about/const/config.js","webpack:///./src/webgl/modules/ParticleChip/shaders/particle.vs","webpack:///./src/webgl/modules/ParticleChip/shaders/particle.fs","webpack:///./src/webgl/modules/ParticleChip/ParticleChip.js","webpack:///./src/webgl/sections/about/AboutSection.js","webpack:///./src/js/Signal.js","webpack:///./src/js/EventHandler.js","webpack:///./src/webgl/modules/FontShaders/vertex/fontType1.glsl","webpack:///./src/webgl/modules/FontShaders/vertex/fontType2.glsl","webpack:///./src/webgl/modules/FontShaders/vertex/fontType3.glsl","webpack:///./src/webgl/modules/FontShaders/fragment/fontType1.glsl","webpack:///./src/webgl/modules/FontShaders/fragment/fontType2.glsl","webpack:///./src/webgl/modules/FontShaders/fragment/fontType3.glsl","webpack:///./src/webgl/modules/FontShaders/index.js","webpack:///./src/webgl/sections/common/FontGenerator.js","webpack:///./src/webgl/ScenesViewer.js","webpack:///./src/libs/threejs/loaders/GLTFLoader.js","webpack:///./src/webgl/modules/Environment/zlib.js","webpack:///./src/webgl/modules/Environment/EnvironmentCubeMap.js","webpack:///./src/webgl/modules/Environment/EnvironmentPanorama.js","webpack:///./src/webgl/modules/Environment/IntegrateBRDFMap.js","webpack:///./src/webgl/modules/Environment/EnvironmentSphericalHarmonics.js","webpack:///./src/webgl/modules/Environment/requestFile.js","webpack:///./src/webgl/modules/Environment/fileHelper.js","webpack:///./src/webgl/modules/Environment/Environment.js","webpack:///./src/webgl/loader/AssetLibrary.js","webpack:///./src/const/assetsPreloadConfig.js","webpack:///./src/libs/threejs/libs/stats.module.js","webpack:///./src/webgl/MainScene.js","webpack:///./src/components/PreLoader.vue?e827","webpack:///src/components/PreLoader.vue","webpack:///./src/components/PreLoader.vue?3f98","webpack:///./src/components/PreLoader.vue","webpack:///./src/components/ConactPanel.vue?a075","webpack:///src/components/ConactPanel.vue","webpack:///./src/components/ConactPanel.vue?1642","webpack:///./src/components/ConactPanel.vue","webpack:///src/index.vue","webpack:///./src/index.vue?d6be","webpack:///./src/index.vue","webpack:///./src/main.js","webpack:///./src/components/ConactPanel.vue?3a39","webpack:///./src/assets/images/STM1.jpg","webpack:///./src/assets/images/Aerith.png","webpack:///./src/assets/images/Cloud.png","webpack:///./src/index.vue?420c","webpack:///./src/assets/images/NGNL1.jpg","webpack:///./src/assets/images/Diamond2.jpg","webpack:///./src/assets/images/Diamond1.jpg","webpack:///./src/components/PreLoader.vue?21da","webpack:///./src/assets/images/OnePunch1.jpg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","isMobile","isOpenConactPanel","isLoaded","loadingPercent","staticRenderFns","getEleWidth","element","res","currentStyle","width","getComputedStyle","indexOf","Number","getEleHeight","height","e","test","navigator","userAgent","debounce","callback","duration","timer","event","clearTimeout","setTimeout","checkLODSupport","ctx","document","createElement","getContext","getExtension","computeMeshBoundingBox","mesh","box","THREE","geometry","computeBoundingBox","copy","boundingBox","min","max","subVectors","Math","PI","randomFloat","low","high","random","easeOutSine","b","sin","symmetryRandom","clamp","ScetionPPMaterial","uniforms","map","progress","edgeProgress","isNext","resolution","innerWidth","innerHeight","vertexShader","ppMaterialVS","fragmentShader","ppMaterialFS","depthTest","transparent","x","y","texture","val","Section","viewer","visible","debug","postProcessingMaterial","renderer","state","eventHandler","assetLibrary","layers","SCENE_LAYER","BG_LAYER","TEX_LAYER","UI_LAYER","scene","camera","position","z","add","uiScene","uiCamera","fontGenerator","compile","aspect","updateProjectionMatrix","order","text","material","container","createFontMesh","set","rotation","AnimeNameTitle","section","animeName","createFontMaterial","time","initTextMesh","keys","clone","resizeForMobile","resizeForPC","animeNameMesh","animeNameScale","animeNameBBox","multiplyScalar","titleMeshLength","offset","animeNamePosX","animeNamePosY","scale","setScalar","BGUniformsConfig","baseColor","area1Color","area2Color","area1Position","area2Position","TextUniformConfig","color1","color2","color3","color4","TextConfig","mainTitle","subTitle","AnimeName","AnimeTitleUniforms","topColor","bottomColor","BGMaterial","strengthFactor","area1Radius","area2Radius","noiseStrength","opacity","depthWrite","bgVS","bgFS","syncMapArr","syncUniformArr","pbrDefaultUniforms","roughness","metalness","color","emissive","uEnvironmentTransform","uEnvBrightness","uSpecularAAVariance","uSpecularAAThreshold","uAnisotropyRotation","uAnisotropyFactor","uClearCoatRoughness","uClearCoat","pbrDefaultDefines","ENABLE_IBL","ENABLE_LIGHT","ENERGY_COMPENSATION","DIFFUSE_LAMBERT","NDF_GGX","F_SCHLICK","V_SMITHJOINTAPPROX","PBRMaterial","environment","shaderData","sourceMaterial","defines","assign","vertexTangents","normalMapType","UniformsLib","merge","common","normalmap","lightmap","bumpmap","roughnessmap","metalnessmap","aomap","emissivemap","displacementmap","envmap","fog","lights","syncEnvSetting","syncParam","pbrVS","pbrFS","isGLTFSpecularGlossinessMaterial","initSGWorkflow","extensions","derivatives","shaderTextureLOD","needsUpdate","mapEnv","uEnvironmentSphericalHarmonics","uEnvironmentLodRange","uEnvironmentSize","textureLODSupport","envMap","uIntegrateBRDF","forEach","undefined","diffuse","_extraUniforms","specular","glossiness","specularMap","glossinessMap","computeDiffuseSPH","integrateBRDFMobile","panoramaSampler","precomputeLight","isotropyLightCompute","anisotropyLightCompute","math","shadow","light","brdf","ibl","clearCoat","advance","PBRProgram","includePattern","vs","preParseShader","fs","string","includeReplacer","match","include","ShaderChunk","Error","replace","ParticleInstance","initParticle","positions","Float32Array","setXYZ","setAttribute","uvs","setIndex","Uint16Array","TouchTexture","parent","size","maxAge","radius","trail","initTexture","canvas","fillStyle","fillRect","id","style","delta","clear","point","age","drawTouch","force","last","dx","dy","dd","pos","intensity","grd","createRadialGradient","addColorStop","beginPath","arc","fill","ParticleTexture","areaBounding","layer","touch","mouse","raycaster","intersectsArr","init","minFilter","magFilter","format","image","initPoints","initHitArea","initTouch","initEvent","numPoints","originalColors","numVisible","threshold","img","drawImage","imgData","getImageData","from","uTime","uRandom","uDepth","uSize","uTextureSize","uTexture","uTouch","particleVS","particleFS","instanceMesh","indices","offsets","angles","floor","wireframe","hitArea","onMouseMoveEvent","onMouseMove","preloadFinished","clientX","clientY","setFromCamera","intersects","intersectObjects","uv","addTouch","update","Particle","velocity","Array","euler","alpha","zkey","vx","vy","vz","rx","ry","rz","nx","ny","nz","a","dt","ParticleSnow","deltaTime","particleControl","particleNum","area","sizes","alphas","particles","tempVec3","tempVelocity","particle","normalize","setVelocity","setPosition","setSize","setAlpha","far","type","innerColor","outerColor","points","blending","index","limit","abs","repeatPos","attributes","renderParticle","ShaderMaterial","FXAAMaterial","inputBuffer","Uniform","Vector2","VignetteMaterial","darkness","eskil","BlurMaterial","direction","OrbitControls","domElement","console","warn","error","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","position0","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","reset","dispatchEvent","changeEvent","STATE","NONE","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","makeSafe","addScaledVector","panOffset","setFromSpherical","lookAt","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseUp","onKeyDown","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","keyCode","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","handleTouchEnd","focus","button","ctrlKey","metaKey","shiftKey","addEventListener","stopPropagation","DOLLY_ROTATE","tabIndex","EventDispatcher","constructor","MapControls","initBGGUI","gui","bgMaterial","bgMaterialUniforms","params","bgBaseColor","getStyle","bgArea1Color","bgArea2Color","bgArea1PosX","bgArea1PosY","bgArea2PosX","bgArea2PosY","bgStrengthFactor","bgArea1Radius","bgArea2Radius","bgNoiseStrength","bgOpacity","bgFolder","addFolder","addColor","onChange","setStyle","step","open","initAnimeTitleGUI","animeTitleFolder","HomeSection","scrollSpeed","pbrProgram","envRotationMat","cameraRotationMatrix","sceneRotateXLimit","cameraInitPos","cameraLookAtPos","cameraTargetY","particleTextureArr","swordModel","swordModelInitPos","swordModelInitRotate","initBackground","sunlightInfo","loadSunLight","initCamera","gltfScene","getPBRShader","traverse","child","isMesh","initParticleTexture","initParticleSnow","initText","initPostprocessing","initGUI","callBack","gsap","to","delay","ease","vignetteMaterial","onUpdate","delayedCall","particleTexture","textMaterial","animeNameTitle","postScene","postCamera","postRenderTarget","postScreenMesh","screenGeometry","frustumCulled","fxaaMaterial","pixelRatio","dpr","renderTarget","inputTexture","overrideMaterial","setRenderTarget","render","particleSnow","cloudTexture","cloudParticleTexture","cloudParticleMesh","aerithTexture","aerithParticleTexture","aerithParticleMesh","enableParticleTexture","resizeParticleTexture","offsetWidth","offsetHeight","titleMesh","subTitleMesh","resizeText","resizeTextForMobile","resizeTextForPC","resize","titleScale","subTitleScale","subBBox","dat","textMaterialUniforms","textColor1","textColor2","textColor3","textColor4","textFolder","sunLight","bgMesh","makeRotationFromQuaternion","setFromMatrix4","onTouchMoveEvent","positionNormX","pointer","positionNorm","sceneRoationTarget","textureRoationTarget","killTweensOf","cameraPos","fromTo","scrollAnimeDuration","pixelWidth","pixelHeight","orthoCamera","updateEnvironmentRotation","renderPost","ParticleUniformsConfig","TextUniformConfigList","AnimeTitleUniformsList","GalleryConfig","galleryTexture1","galleryTexture2","AnimeNameList","GalleryTexture","textures","opts","texWidth","texHeight","texAspect","uProgress","uTextures","temp","ParticlePolygon","number","areaWidth","areaHeight","areaDepth","numberPoints","randoms","ArrowButton","initRing","CloseButton","RingButton","ringMaterial","ringMesh","textMesh","textScale","RectangleButton","initRectangle","rectangleMaterial","rectangleMesh","AnimeSection","rotateGroup","curAnimeIndex","animeProgress","animeDuration","isAnimeChanging","clickNDCPos","initParticles","initGalleryTextures","initUIPanel","arrowBtn","arrowContainer","arrowBtnScale","arrowBtnBox","resizeUIPanel","topOffset","leftOffset","initTextUniforms","animeNameTitleList","ele","galleryTextures","textureArray1","textureArray2","resizeGalleryTextures","particleColor","particleSize","textTopColor","textBottomColor","particleFolder","nextAnimeIndex","tempCurAnimeIndex","galleryTexture","config","setNextTexture","onComplete","swapTextures","nextBGUniforms","nextParticleUniforms","nextTextUniforms","curAnimeTitle","nextAnimeTitle","textOpacity","onClickEvent","onClick","log","intersectsRes","swapAnime","ndcPosition","body","removeAttribute","content","diffuseEquation","specularFresnelEquation","specularNDFEquation","specularVisEquation","specularAOList","panelDefinesRegs","SPECULAR_AO_SEBLAGARDE","MS_SPECULAR_AO","MS_DIFFUSE_AO","TextureBG","ppMaterial","imageWidth","imageHeight","imageResolution","uvTransformSpeed","vignetteDarkness","vignetteOffset","BackgroundMaterial","options","uBGEnvironmentSize","backgroundVS","backgroundFS","side","Background","sphere","WorkSection","isModelViewing","envRotation","envRotationFromPanel","makeRotationY","envRotationMat4","envRotationMatBG","envBrightness","sunLightPanelRotateMat","modelInitScale","modelInitPosY","modelInitRotationZ","modelViewingScale","modelViewingPosY","modelViewingRotateZ","backgroundEnv","sunLightStartPos","loadCubeBackground","close","guiParams","enableIBL","enableLight","enableAnisotropy","ENABLE_ANISOTROPY","anisotropyFactor","anisotropyRotation","enableClearCoat","ENABLE_CLEARCOAT","clearCoatRoughness","enableCompensation","enableSpecularAA","GEOMETRIC_SPECULAR_AA","specularAAVariance","specularAAThreshold","specularAO","enableMSSpecularAO","enableMSDiffuseAO","pbrFolder","reCompileShader","equationsFolder","anisotropyFolader","clearCoatFolader","advanceFolder","reg","toUpperCase","setDefinesFromGUI","ringBtn","closeBtn","closeContainer","closeBtnScale","closeBtnBox","initPanelGUI","cubeBackground","control","contentMesh","contentScale","contentBBox","multiplyMatrices","resultSunlight","getInverse","applyMatrix4","querySelector","modelRotation","openModelViewer","closeModelViewer","ParticleChip","AboutSection","isOpenContactPanel","blurIterations","start","initParticleChip","blurVerticalMaterial","blurHorizontalMaterial","setY","setX","contactBtn","particleChip","closeContactPanel","toggleConactPanle","openContactPanel","Signal","_listeners","_lookUp","Map","self","resFun","len","EventHandler","Date","lastTime","touchStartPos","touchMovePos","onScrollEvent","passive","onScroll","dispatch","normalEvent","normalizeWheel","offsetX","offsetY","fontShaders","vertex","vertex1","fragment","fragment1","vertex2","fragment2","vertex3","fragment3","FontGenerator","fontTexture","font","fontShadersKey","MSDFShader","negate","createGeometry","ScenesViewer","mainScene","clock","scrollMultiplier","isSectionChanging","scissors","visibleSections","currentScetionIndex","nextSectionIndex","scrollDirection","scroll","posVertices","uvVertices","initSection","targets","quad","encoding","outputEncoding","generateMipmaps","sections","precompile","stencilBuffer","depthBuffer","entryAnime","status","toggleConactCallback","setPointerPos","swapSection","pixelY","isUpScroll","currentSection","nextSection","whileNoVisible","whileVisible","curScissors","nextScissors","getPixelRatio","getDelta","item","scissor","scissorY","scissorHeight","scissorTest","GLTFLoader","manager","Loader","dracoLoader","ddsLoader","GLTFRegistry","objects","remove","removeAll","load","url","onLoad","onProgress","onError","resourcePath","path","LoaderUtils","extractUrlBase","itemStart","_onError","itemError","itemEnd","loader","FileLoader","setPath","setResponseType","crossOrigin","setWithCredentials","parse","gltf","setDRACOLoader","setDDSLoader","magic","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","parser","GLTFParser","extension","lightDefs","loadLight","lightIndex","lightNode","lightDef","Color","fromArray","range","DirectionalLight","PointLight","SpotLight","spot","innerConeAngle","outerConeAngle","penumbra","decay","Promise","resolve","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","pending","metallicRoughness","pbrMetallicRoughness","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","headerView","DataView","header","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","MeshStandardMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","setHex","onBeforeCompile","shader","uniformName","defineProperties","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","attribute","extendTexture","transform","repeat","texCoord","source","copySampleValue_","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t1","stride","stride2","stride3","td","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","5120","Int8Array","5121","5122","Int16Array","5123","5125","Uint32Array","5126","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","OPAQUE","MASK","BLEND","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","createDefaultMaterial","cache","FrontSide","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","addMorphTargets","hasMorphPosition","hasMorphNormal","il","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","updateMorphTargets","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createPrimitiveKey","primitiveDef","geometryKey","dracoExtension","createAttributesKey","attributesKey","sort","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","computeBounds","Box3","accessor","vector","setZ","expandByVector","Sphere","getCenter","center","distanceTo","boundingSphere","addPrimitiveAttributes","assignAttributeAccessor","accessorIndex","gltfAttributeName","toTrianglesDrawMode","drawMode","getIndex","getAttribute","count","numberOfTriangles","newIndices","TriangleFanDrawMode","getX","newGeometry","markDefs","getDependencies","dependencies","scenes","animations","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","webkitURL","textureDef","textureExtensions","images","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","samplers","sampler","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","LineBasicMaterial","cachedMaterial","skinning","vertexColors","VertexColors","flatShading","morphTargets","uv2","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","geometryPromise","cached","promise","BufferGeometry","meshIndex","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","LineSegments","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","PerspectiveCamera","MathUtils","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","matrixAutoUpdate","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","outputArray","scaled","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","Bone","Object3D","PropertyBinding","sanitizeNodeName","Matrix4","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","Skeleton","matrixWorld","children","sceneIndex","sceneDef","Scene","nodeIds","zlib","Zlib","isGunzipBuffer","arrayBuffer","typedArray","gunzip","zdec","Gunzip","decompress","CubeMapEnv","_options","_size","_data","src","dst","npixel","npixel2","npixel3","idx","readInputArray","inputArray","maxLevel","LN2","byteSize","face","imageData","deinterleave","deinterleaveImage4","_packedImages","createRGBA8Packed","cubeTextures","packedImages","numMips","textureEncoding","mip","cubeTexture","dataTexture","mipmaps","PanoramaEnv","_texture","IntegrateBRDF","EnvironmentSphericalHarmonics","file","_file","initSHCoef","sphCoef","_sphCoef","coef0","coef1","coef2","coef3","coef4","coef5","coef6","coef7","coef8","coef","_uniformSpherical","requestFileFromURL","req","XMLHttpRequest","responseType","response","responseText","send","requestFileFromReader","reader","FileReader","onload","readAsArrayBuffer","readAsText","readAsDataURL","requestFile","urlOrFile","mimeTypes","isString","str","String","isBlobURL","substr","isHttpURL","isURL","createImageFromURL","Image","onerror","createImageFromBlob","privateURL","createArrayBufferFromBlob","fr","createArrayBufferFromURL","createJSONFromURL","createJSONFromString","obj","fileHelper","requestURI","requestResource","mimetype","getMimeType","resolveData","createData","resolveFilesMap","filesMap","promises","filename","fname","dataResolved","lastIndexOf","addMimeTypeForExtension","has","brdfLUTPath","Environment","_config","_files","needBG","configSrc","getTextures","limitSize","filter","envMapFormat","textureData","getImage","mapFile","mapSize","mapData","EnvironmentCubeMap","EnvironmentPanorama","loadPacked","minTextureSize","nbLod","maxLod","lutTextureData","lutSize","lutData","_integrateBRDF","IntegrateBRDFMap","bgTextureData","bgFile","bgSize","bgData","_spherical","diffuseSPH","Lights","sunlight","luminosity","AssetLibrary","loadedNumber","loadQueue","assets","onCompleteEvent","onProgressEvent","filePath","loadModel","loadEnvMap","loadFontAsset","onAssetLoaded","model","loadPackage","env","loadFont","err","commonAssetList","require","PCPreloadConfigList","concat","MobilePreloadConfigList","Stats","addPanel","panel","appendChild","dom","showPanel","display","cssText","beginTime","performance","now","prevTime","frames","fpsPanel","Panel","msPanel","memory","memPanel","REVISION","begin","end","usedJSHeapSize","jsHeapSizeLimit","setMode","fg","bg","round","PR","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","context","textBaseline","fillText","globalAlpha","maxValue","MainScene","preloadConfigList","antialias","setPixelRatio","gammaFactor","toneMapping","setClearColor","autoClear","stats","addLoadQueue","scenesViewer","initEvents","onWindowResize","requestAnimationFrame","loadingAnimeFinished","_e","class","_v","_s","loadingPercentNum","loadingText","_m","component","Vue","h","App","$mount"],"mappings":"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","file":"js/app.c523cc29.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"img/Binguo1.15d3085e.jpg\";","module.exports = __webpack_public_path__ + \"img/Binguo2.9369ab74.jpg\";","module.exports = __webpack_public_path__ + \"img/NGNL1.caf30f09.jpg\";","module.exports = __webpack_public_path__ + \"img/STM2.5050719c.jpg\";","module.exports = __webpack_public_path__ + \"img/OnePunch1.e3458b76.jpg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{attrs:{\"id\":\"canvasContainer\"}}),_c('div',{staticClass:\"uiContainer\"},[_c('ConactPanel',{attrs:{\"isMobile\":_vm.isMobile,\"isOpenConactPanel\":_vm.isOpenConactPanel}})],1),_c('PreLoader',{attrs:{\"isMobile\":_vm.isMobile,\"isLoaded\":_vm.isLoaded,\"loadingPercent\":_vm.loadingPercent}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as THREE from 'three';\n\nfunction getEleWidth(element) {\n\tlet res;\n\tif (element.currentStyle) {\n\t\tres = element.currentStyle.width; // For IE\n\t} else {\n\t\tres = getComputedStyle(element, false).width;\n\t}\n\t// Get number\n\tif (~res.indexOf('px')) res = res.slice(0, -2);\n\treturn Number(res);\n}\n\nfunction getEleHeight(element) {\n\tlet res;\n\tif (element.currentStyle) {\n\t\tres = element.currentStyle.height;\n\t} else {\n\t\tres = getComputedStyle(element, false).height;\n\t}\n\tif (~res.indexOf('px')) res = res.slice(0, -2);\n\treturn Number(res);\n}\n\nfunction isMobile() {\n\tlet e = /AppleWebKit/.test(navigator.userAgent) && /Mobile\\/\\w+/.test(navigator.userAgent);\n\treturn e || /Android|webOS|BlackBerry|Opera Mini|Opera Mobi|IEMobile/i.test(navigator.userAgent);\n}\n\nfunction debounce(callback, duration) {\n\tlet timer;\n\treturn function (event) {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\tcallback(event);\n\t\t}, duration);\n\t};\n}\n\nfunction throttle(callback, duration) {\n\tlet _lastTime = null;\n\treturn function (event) {\n\t\tlet _nowTime = +new Date();\n\t\tif (_nowTime - _lastTime > duration || !_lastTime) {\n\t\t\tcallback(event);\n\t\t\t_lastTime = _nowTime;\n\t\t}\n\t};\n}\n\nfunction checkLODSupport() {\n\tlet ctx = document.createElement('canvas').getContext('webgl');\n\treturn ctx.getExtension('EXT_shader_texture_lod');\n}\n\nfunction computeMeshBoundingBox(mesh) {\n\tlet box = new THREE.Box3();\n\tmesh.geometry.computeBoundingBox();\n\tbox.copy(mesh.geometry.boundingBox);\n\treturn {\n\t\tmin: box.min,\n\t\tmax: box.max,\n\t\tlength: new THREE.Vector3().subVectors(box.max, box.min)\n\t};\n}\n\n// Math\nconst PI2 = Math.PI * 2.0;\n\nfunction randomInRange(min, max) {\n\treturn min + Math.random() * (max - min);\n}\n\nfunction randomInt(low, high) {\n\treturn low + Math.floor(Math.random() * (high - low + 1));\n}\n\nfunction randomFloat(low, high) {\n\treturn low + Math.random() * (high - low);\n}\n\nfunction easeOutSine(t, b, c, d) {\n\treturn c * Math.sin((t / d) * (Math.PI / 2)) + b;\n}\n\nfunction symmetryRandom() {\n\treturn Math.random() * 2.0 - 1.0;\n}\n\nfunction clamp(value, min, max) {\n\treturn Math.min(Math.max(value, min), max);\n}\n\nexport {\n\tgetEleWidth,\n\tgetEleHeight,\n\tisMobile,\n\tdebounce,\n\tthrottle,\n\tcheckLODSupport,\n\tcomputeMeshBoundingBox,\n\tPI2,\n\trandomInRange,\n\trandomInt,\n\trandomFloat,\n\teaseOutSine,\n\tsymmetryRandom,\n\tclamp\n};\n","export default \"precision highp float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\nattribute vec2 uv;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = vec4(position, 1.0, 1.0);\\n}\";","export default \"precision highp float;\\n#define GLSLIFY 1\\nuniform sampler2D map;\\nvarying vec2 vUv;\\nuniform float progress;\\nuniform vec2 resolution;\\nuniform bool isNext;\\n\\nvoid main() {\\n    vec2 uv = vUv;\\n    vec4 color = texture2D(map, uv);\\n    \\n    float y = gl_FragCoord.y / resolution.y; // [0, 1]\\n\\n    // float x = gl_FragCoord.x / resolution.x; // [-0.5, 0.5]\\n    // float edge = x * edgeProgress + progress;\\n    \\n    float opacity = step(progress, y);\\n    if(isNext){\\n        opacity = 1. - opacity;\\n    }\\n    gl_FragColor = vec4(\\n        vec3( ( color.rgb ) / color.a ),\\n        opacity\\n    );\\n    // Todo: Test scissor\\n    // progress与sccisor那里的百分比要保持一致，都已现有全屏高度为分母\\n    // gl_FragColor = vec4(color);\\n}\\n\";","import * as THREE from 'three';\nimport ppMaterialVS from './shaders/ppMaterial.vs';\nimport ppMaterialFS from './shaders/scetionPPMaterial.fs';\n\nexport class ScetionPPMaterial extends THREE.RawShaderMaterial {\n\tconstructor() {\n\t\tsuper({\n\t\t\tuniforms: {\n\t\t\t\tmap: { value: null },\n\t\t\t\tprogress: { value: 0 },\n\t\t\t\tedgeProgress: { value: 0 },\n\t\t\t\tisNext: { value: false },\n\t\t\t\tresolution: { value: new THREE.Vector2(window.innerWidth, window.innerHeight) }\n\t\t\t},\n\t\t\tvertexShader: ppMaterialVS,\n\t\t\tfragmentShader: ppMaterialFS,\n\t\t\tdepthTest: false,\n\t\t\ttransparent: true\n\t\t});\n\t}\n\n\tget map() {\n\t\treturn this.uniforms.map.value;\n\t}\n\n\tset map(texture) {\n\t\tthis.uniforms.map.value = texture;\n\t}\n\n\tget progress() {\n\t\treturn this.uniforms.progress.value;\n\t}\n\n\tset progress(val) {\n\t\tthis.uniforms.progress.value = val;\n\t}\n\n\tget edgeProgress() {\n\t\treturn this.uniforms.edgeProgress.value;\n\t}\n\n\tset edgeProgress(val) {\n\t\tthis.uniforms.edgeProgress.value = val;\n\t}\n\n\tget isNext() {\n\t\treturn this.uniforms.isNext.value;\n\t}\n\n\tset isNext(val) {\n\t\tthis.uniforms.isNext.value = val;\n\t}\n\n\tresize(width, height) {\n\t\tthis.uniforms.resolution.value.x = width;\n\t\tthis.uniforms.resolution.value.y = height;\n\t}\n}\n","import * as THREE from 'three';\nimport { ScetionPPMaterial } from './ScetionPPMaterial';\n\nexport class Section {\n\tconstructor(viewer) {\n\t\tthis.name = 'section';\n\t\tthis.visible = false;\n\t\tthis.debug = false;\n\t\tthis.postProcessingMaterial = new ScetionPPMaterial();\n\n\t\tthis.viewer = viewer;\n\t\tthis.isMobile = viewer.isMobile;\n\t\tthis.renderer = viewer.renderer;\n\t\tthis.state = viewer.state;\n\t\tthis.eventHandler = viewer.eventHandler;\n\t\tthis.assetLibrary = viewer.assetLibrary;\n\n\t\tthis.width = this.viewer.width;\n\t\tthis.height = this.viewer.height;\n\n\t\tthis.layers = {\n\t\t\tSCENE_LAYER: 0,\n\t\t\tBG_LAYER: 1,\n\t\t\tTEX_LAYER: 2,\n\t\t\tUI_LAYER: 3\n\t\t};\n\n\t\tthis.scene = new THREE.Scene();\n\t\tthis.camera = new THREE.PerspectiveCamera(45, this.width / this.height, 0.1, 700);\n\t\tthis.camera.position.z = 10;\n\t\tthis.scene.add(this.camera);\n\n\t\tthis.uiScene = new THREE.Scene();\n\t\tthis.uiCamera = new THREE.OrthographicCamera(-this.width, this.width, -this.height, this.height, 1, 100);\n\t\tthis.uiCamera.position.z = 10;\n\n\t\tthis.fontGenerator = this.viewer.fontGenerator;\n\t}\n\n\tentryAnime() {}\n\n\tprecompile() {\n\t\tthis.renderer.compile(this.scene, this.camera);\n\t\tthis.renderer.compile(this.uiScene, this.uiCamera);\n\t}\n\n\tresize(width, height) {\n\t\tthis.camera.aspect = width / height;\n\t\tthis.camera.updateProjectionMatrix();\n\t}\n\n\twhileVisible(order) {\n\t\t// console.log(\"whileVisible: \", order);\n\t}\n\n\twhileNoVisible(order) {\n\t\t// console.log(\"whileNoVisible: \", order);\n\t}\n\n\tinitTextMesh(text, material, container) {\n\t\tconst mesh = this.fontGenerator.createFontMesh(text, material);\n\t\tmesh.layers.set(this.layers.UI_LAYER);\n\t\tmesh.rotation.set(-Math.PI, 0, 0); // Spin to face correctly\n\t\tcontainer = container || this.uiScene;\n\t\tcontainer.add(mesh);\n\t\treturn mesh;\n\t}\n}\n","import { computeMeshBoundingBox, clamp } from 'JS/Utils';\n\nexport class AnimeNameTitle {\n\tconstructor(section, animeName, uniforms) {\n\t\tthis.section = section;\n\t\tthis.isMobile = section.isMobile;\n\t\tthis.fontGenerator = section.fontGenerator;\n\t\tthis.material = this.fontGenerator.createFontMaterial(1);\n\t\tthis.material.uniforms.time = { value: 0.0 };\n\t\tthis.mesh = section.initTextMesh(animeName, this.material);\n\t\t// Apply text uniforms\n\t\tObject.keys(uniforms).map(key => {\n\t\t\tthis.material.uniforms[`${key}`] = { value: uniforms[key].clone() };\n\t\t});\n\t}\n\n\tresize(width, height) {\n\t\tif(!this.isMobile){\n\t\t\tthis.resizeForPC(width, height);\n\t\t}else{\n\t\t\tthis.resizeForMobile(width, height);\n\t\t}\n\t}\n\n\tresizeForPC(width, height) {\n\t\tlet animeNameMesh = this.mesh;\n\t\tconst animeNameScale = clamp(width / 2000, 0.25, 0.35);\n\t\tlet animeNameBBox = computeMeshBoundingBox(animeNameMesh).length.multiplyScalar(animeNameScale);\n\t\tlet titleMeshLength = animeNameBBox.x;\n\t\t// Right coner\n\t\tconst offset = 10;\n\t\tconst animeNamePosX = width / 2 - titleMeshLength - offset;\n\t\tconst animeNamePosY = -height / 2 + offset;\n\t\tanimeNameMesh.scale.setScalar(animeNameScale);\n\t\tanimeNameMesh.position.set(animeNamePosX, animeNamePosY, 0);\n\t}\n\n\tresizeForMobile(width, height) {\n\t\tlet animeNameMesh = this.mesh;\n\t\tconst animeNameScale = clamp(width / 1500, 0.25, 0.35);\n\t\tlet animeNameBBox = computeMeshBoundingBox(animeNameMesh).length.multiplyScalar(animeNameScale);\n\t\tlet titleMeshLength = animeNameBBox.x;\n\t\t// Right coner\n\t\tconst offset = 20;\n\t\tconst animeNamePosX = width / 2 - titleMeshLength - offset;\n\t\tconst animeNamePosY = -height / 2 + offset;\n\t\tanimeNameMesh.scale.setScalar(animeNameScale);\n\t\tanimeNameMesh.position.set(animeNamePosX, animeNamePosY, 0);\n\t}\n\n\trender(time) {\n\t\tthis.material.uniforms.time.value += time;\n\t}\n}\n","import * as THREE from 'three';\n\nconst Layers = {\n\tSCENE_LAYER: 0,\n\tBG_LAYER: 1,\n\tUI_LAYER: 2\n};\n\nconst BGUniformsConfig = {\n\tbaseColor: new THREE.Color('#646666'),\n\tarea1Color: new THREE.Color('#4A4F54'),\n\tarea2Color: new THREE.Color('#FFFFFF'),\n\tarea1Position: new THREE.Vector2(0.2, 0.2),\n\tarea2Position: new THREE.Vector2(0.9, 0.9)\n};\n\nconst TextUniformConfig = {\n\tcolor1: new THREE.Uniform(new THREE.Color(0.85, 0.85, 0.85)),\n\tcolor2: new THREE.Uniform(new THREE.Color(1, 1, 0.85)),\n\tcolor3: new THREE.Uniform(new THREE.Color(0.35, 0.35, 0.35)),\n\tcolor4: new THREE.Uniform(new THREE.Color(0.0, 0.0, 0.0))\n};\n\nconst TextConfig = {\n\tmainTitle: `TODAYLG    LUGANG`,\n\tsubTitle: `FRONT-END & WEB3D & ANIME`\n};\n\nconst AnimeName = '[ Final Fantasy VII ]';\n\nconst AnimeTitleUniforms = {\n\ttopColor: new THREE.Color('rgb(225,225,225)'),\n\tbottomColor: new THREE.Color('rgb(89,89,89)')\n};\n\nexport { BGUniformsConfig, TextUniformConfig, TextConfig, Layers, AnimeName, AnimeTitleUniforms };\n","export default \"precision highp float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\nattribute vec2 uv;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = vec4(position, 1.0, 1.0);\\n}\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform vec3 baseColor;\\nuniform vec3 area1Color;\\nuniform vec3 area2Color;\\nuniform vec2 area1Position;\\nuniform vec2 area2Position;\\nuniform float strengthFactor;\\nuniform float area1Radius;\\nuniform float area2Radius;\\nuniform float noiseStrength;\\nuniform float opacity;\\nvarying vec2 vUv;\\n\\n// https://www.shadertoy.com/view/4djSRW\\nfloat random (vec2 st) {\\n\\treturn fract(sin(dot(st, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main() {\\n    vec3 color = baseColor;\\n    color += strengthFactor * area1Color * (1.0 - smoothstep(0.0, area1Radius, distance(vUv + random(vUv) * noiseStrength, area1Position)));\\n    color += strengthFactor * area2Color * (1.0 - smoothstep(0.0, area2Radius, distance(vUv + random(vUv) * noiseStrength, area2Position)));\\n    gl_FragColor = vec4(color, opacity);\\n}\";","import * as THREE from 'three';\nimport bgVS from './shaders/bgMaterial.vs';\nimport bgFS from './shaders/bgMaterial.fs';\n\nexport class BGMaterial extends THREE.RawShaderMaterial {\n\tconstructor({\n\t\tbaseColor = new THREE.Color('#000000'),\n\t\tarea1Color = new THREE.Color('#000000'),\n\t\tarea2Color = new THREE.Color('#FFFFFF'),\n\t\tarea1Position = new THREE.Vector2(0, 0),\n\t\tarea2Position = new THREE.Vector2(1, 1),\n\t\tstrengthFactor = 0.4,\n\t\tarea1Radius = 0.6,\n\t\tarea2Radius = 0.6,\n\t\tnoiseStrength = 0.05,\n\t\topacity = 1\n\t} = {}) {\n\t\tsuper({\n\t\t\tuniforms: {\n\t\t\t\tbaseColor: { value: baseColor.clone() },\n\t\t\t\tarea1Color: { value: area1Color.clone() },\n\t\t\t\tarea2Color: { value: area2Color.clone() },\n\t\t\t\tarea1Position: { value: area1Position.clone() },\n\t\t\t\tarea2Position: { value: area2Position.clone() },\n\t\t\t\tstrengthFactor: { value: strengthFactor },\n\t\t\t\tarea1Radius: { value: area1Radius },\n\t\t\t\tarea2Radius: { value: area2Radius },\n\t\t\t\tnoiseStrength: { value: noiseStrength },\n\t\t\t\topacity: { value: opacity }\n\t\t\t},\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t\ttransparent: true,\n\t\t\tvertexShader: bgVS,\n\t\t\tfragmentShader: bgFS\n\t\t});\n\t}\n}\n","import * as THREE from 'three';\n\nconst syncMapArr = [\n\t'map',\n\t'normalMap',\n\t'lightMap',\n\t'bumpMap',\n\t'roughnessMap',\n\t'metalnessMap',\n\t'aoMap',\n\t'emissiveMap',\n\t'displacementmap'\n];\n\nconst syncUniformArr = ['color', 'roughness', 'metalness', 'emissive'];\n\nconst bgDefaultUniforms = {\n\tuEnvBrightness: {\n\t\tvalue: 1.0\n\t},\n\tuEnvironmentTransform: {\n\t\tvalue: new THREE.Matrix3()\n\t}\n};\n\nconst pbrDefaultUniforms = {\n\troughness: {\n\t\tvalue: 0.5\n\t},\n\tmetalness: {\n\t\tvalue: 0\n\t},\n\tcolor: {\n\t\tvalue: new THREE.Color(0xffffff)\n\t},\n\temissive: {\n\t\tvalue: new THREE.Color(0x000000)\n\t},\n\tuEnvironmentTransform: {\n\t\tvalue: new THREE.Matrix3()\n\t},\n\tuEnvBrightness: {\n\t\tvalue: 1.0\n\t},\n\tuSpecularAAVariance: {\n\t\tvalue: 0.1\n\t},\n\tuSpecularAAThreshold: {\n\t\tvalue: 1.0\n\t},\n\t// Anisotropy\n\tuAnisotropyRotation: {\n\t\tvalue: 0\n\t},\n\tuAnisotropyFactor: {\n\t\tvalue: 0.5\n\t},\n\t// ClearCoat\n\tuClearCoatRoughness: {\n\t\tvalue: 0.5\n\t},\n\tuClearCoat: {\n\t\tvalue: 0.5\n\t}\n};\n\nconst pbrDefaultDefines = {\n\tENABLE_IBL: 1,\n\tENABLE_LIGHT: 1,\n\tENERGY_COMPENSATION: 1,\n\tDIFFUSE_LAMBERT: 1,\n\tNDF_GGX: 1,\n\tF_SCHLICK: 1,\n\tV_SMITHJOINTAPPROX: 1\n\t// ENABLE_ANISOTROPY: 1,\n\t// ENABLE_CLEARCOAT: 1,\n\t// GEOMETRIC_SPECULAR_AA: 1\n\t// SPECULAR_AO_SEBLAGARDE: 1,\n\t// MS_SPECULAR_AO: 1,\n\t// MS_DIFFUSE_AO: 1\n};\n\nexport { syncMapArr, syncUniformArr, pbrDefaultUniforms, bgDefaultUniforms, pbrDefaultDefines };\n","import * as THREE from 'three';\nimport { syncMapArr, syncUniformArr, pbrDefaultUniforms, pbrDefaultDefines } from './const/defaultParams';\n\nexport class PBRMaterial extends THREE.ShaderMaterial {\n\tconstructor(mesh, environment, shaderData) {\n\t\tlet sourceMaterial = mesh.material;\n\t\tsuper();\n\t\tthis.copy(sourceMaterial);\n\n\t\tthis.defines = Object.assign({}, pbrDefaultDefines);\n\t\t// Tips: USE_TANGENT rely on (vertexTangents && normalMap) in threejs. But gltf spec only rely vertexTangents\n\t\t// if(this.vertexTangents) this.defines.USE_TANGENT = 1;\n\t\t// Copy method no include normalMapType、vertexTangents\n\t\tthis.vertexTangents = sourceMaterial.vertexTangents;\n\t\tthis.normalMapType = sourceMaterial.normalMapType;\n\n\t\t// Uniforms\n\t\tlet UniformsLib = THREE.UniformsLib;\n\t\tthis.uniforms = THREE.UniformsUtils.merge([\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\tpbrDefaultUniforms\n\t\t]);\n\t\tthis.syncEnvSetting(environment);\n\n\t\t// PBR param sync\n\t\tthis.syncParam(sourceMaterial);\n\n\t\tthis.vertexShader = shaderData.pbrVS;\n\t\tthis.fragmentShader = shaderData.pbrFS;\n\t\tthis.lights = true;\n\n\t\t// Other\n\t\tif (sourceMaterial.isGLTFSpecularGlossinessMaterial === true) this.initSGWorkflow(sourceMaterial);\n\n\t\t// Extensions\n\t\tthis.extensions = {\n\t\t\tderivatives: true,\n\t\t\tshaderTextureLOD: true\n\t\t};\n\t\tthis.needsUpdate = true;\n\t}\n\n\tsyncEnvSetting(environment) {\n\t\tlet {\n\t\t\tmapEnv,\n\t\t\tuEnvironmentSphericalHarmonics,\n\t\t\tuEnvironmentLodRange,\n\t\t\tuEnvironmentSize,\n\t\t\ttextureLODSupport\n\t\t} = environment;\n\t\tif (textureLODSupport) {\n\t\t\t// CubeMap\n\t\t\tthis.defines[`CUBEMAP_LOD`] = 1;\n\t\t} else {\n\t\t\t// Panorama\n\t\t\tthis.defines[`PANORAMA`] = 1;\n\t\t}\n\t\t// Common\n\t\tthis.envMap = mapEnv.texture;\n\t\tthis.uniforms['envMap'] = { value: mapEnv.texture };\n\t\tthis.uniforms['uEnvironmentSphericalHarmonics'] = { value: uEnvironmentSphericalHarmonics };\n\t\tthis.uniforms['uEnvironmentLodRange'] = { value: uEnvironmentLodRange };\n\t\tthis.uniforms['uEnvironmentSize'] = { value: uEnvironmentSize };\n\t\tthis.uniforms['uIntegrateBRDF'] = { value: environment.uIntegrateBRDF };\n\t\t// Mobile\n\t\tif (environment.isMobile) this.defines[`MOBILE`] = 1;\n\t}\n\n\tsyncParam(sourceMaterial) {\n\t\t// Map sync\n\t\tsyncMapArr.forEach(key => {\n\t\t\tif (sourceMaterial[key] != undefined) {\n\t\t\t\tthis[key] = sourceMaterial[key];\n\t\t\t\tthis.uniforms[key].value = sourceMaterial[key];\n\t\t\t}\n\t\t});\n\t\t// Uniform sync\n\t\tsyncUniformArr.forEach(key => {\n\t\t\tif (sourceMaterial[key] != undefined) {\n\t\t\t\tthis.uniforms[key].value = sourceMaterial[key];\n\t\t\t}\n\t\t});\n\t\t// Special key\n\t\tthis.uniforms.diffuse.value = sourceMaterial.color || new THREE.Color(0xffffff);\n\t}\n\n\tinitSGWorkflow(sourceMaterial) {\n\t\tthis.defines[`SPECULAR_GLOSSINESS`] = 1;\n\t\tlet { specular, glossiness, specularMap, glossinessMap } = sourceMaterial._extraUniforms;\n\t\tif (specularMap.value) {\n\t\t\tthis.defines[`USE_SPECULARMAP`] = 1;\n\t\t\tthis.uniforms[`specularMap`] = specularMap;\n\t\t}\n\t\tif (glossinessMap.value) {\n\t\t\tthis.defines[`USE_GLOSSINESSMAP`] = 1;\n\t\t\tthis.uniforms[`glossinessMap`] = glossinessMap;\n\t\t}\n\t\tthis.uniforms[`specularFactor`] = specular;\n\t\tthis.uniforms[`glossinessFactor`] = glossiness;\n\t}\n}\n","export default \"#define GLSLIFY 1\\nvec3 computeDiffuseSPH(vec3 normal, vec3 sphericalHarmonics[9]){\\n    float x = normal.x;\\n    float y = normal.y;\\n    float z = normal.z;\\n    vec3 result = (\\n        sphericalHarmonics[0] +\\n        sphericalHarmonics[1] * y +\\n        sphericalHarmonics[2] * z +\\n        sphericalHarmonics[3] * x +\\n        sphericalHarmonics[4] * y * x +\\n        sphericalHarmonics[5] * y * z +\\n        sphericalHarmonics[6] * (3.0 * z * z - 1.0) +\\n        sphericalHarmonics[7] * (z * x) +\\n        sphericalHarmonics[8] * (x*x - y*y)\\n    );\\n    return max(result, vec3(0.0));\\n}\";","export default \"#define GLSLIFY 1\\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\\nvec3 integrateBRDF(vec3 specular, float roughness, float NoV) {\\n    const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\\n    const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\\n    vec4 r = roughness * c0 + c1;\\n    float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\\n    vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\\n    return specular * AB.x + AB.y * 1.0;\\n}\";","export default \"#define GLSLIFY 1\\n// For y up\\nvec2 normalToPanoramaUV(vec3 dir){\\n    float n = length(dir.xz);\\n\\n    // to avoid bleeding the max(-1.0,dir.x / n) is needed\\n    vec2 pos = vec2( (n>0.0000001) ? max(-1.0,dir.x / n) : 0.0, dir.y);\\n\\n    // fix edge bleeding\\n    if ( pos.x > 0.0 ) pos.x = min( 0.999999, pos.x );\\n\\n    pos = acos(pos)*0.31830988618; // RECIPROCAL_PI\\n\\n    pos.x = (dir.z > 0.0) ? pos.x*0.5 : 1.0-(pos.x*0.5);\\n\\n    // shift u to center the panorama to -z\\n    pos.x = mod(pos.x-0.25+1.0, 1.0 );\\n    pos.y = 1.0-pos.y;\\n    return pos;\\n}\\n\\nvec2 computeUVForMipmap(float level, vec2 uv, float size, float maxLOD){\\n    // width for level\\n    float widthForLevel = exp2( maxLOD-level);\\n\\n    // the height locally for the level in pixel\\n    // to opimitize a bit we scale down the v by two in the inputs uv\\n    float heightForLevel = widthForLevel * 0.5;\\n\\n    // compact version\\n    float texelSize = 1.0/size;\\n    vec2 uvSpaceLocal =  vec2(1.0) + uv * vec2(widthForLevel - 2.0, heightForLevel - 2.0);\\n    uvSpaceLocal.y += size - widthForLevel;\\n    return uvSpaceLocal * texelSize;\\n}\\n\\nvec4 texturePanoramaLod(sampler2D tex, vec2 size , vec3 direction, float lod, float maxLOD){\\n    vec2 uvBase = normalToPanoramaUV(direction);\\n    // we scale down v here because it avoid to do twice in sub functions\\n    // uvBase.y *= 0.5;\\n    float lod0 = floor(lod);\\n    vec2 uv0 = computeUVForMipmap(lod0, uvBase, size.x, maxLOD);\\n    vec4 texel0 = texture2D(tex, uv0.xy);\\n\\n    float lod1 = ceil(lod);\\n    vec2 uv1 = computeUVForMipmap(lod1, uvBase, size.x, maxLOD);\\n    vec4 texel1 = texture2D(tex, uv0.xy);\\n\\n    return mix(texel0, texel1, fract(lod));\\n}\";","export default \"#define GLSLIFY 1\\nvec3 precomputeLight(vec3 normal, vec3 viewDir, float perceptualRoughness){\\n    // perceptually linear roughness to roughness\\n    float roughness = perceptualRoughness * perceptualRoughness;\\n    float NoV =  saturate(dot(normal, viewDir));\\n    return vec3(roughness, roughness * roughness, NoV);\\n}\";","export default \"#define GLSLIFY 1\\n// Refer: UE4\\n\\n// ************************ Normal Distribution Functions(NDF) **************************\\n\\n// [Blinn 1977, \\\"Models of light reflection for computer synthesized pictures\\\"]\\nfloat D_Blinn(vec3 precomputeLight, float NoH){\\n    float a2 = precomputeLight.y;\\n    float n = 2.0 / a2 - 2.0;\\n    return (n+2.0) / (2.0* PI) * pow(NoH, n);   // 1 mad, 1 exp, 1 mul, 1 log\\n}\\n\\n// [Beckmann 1963, \\\"The scattering of electromagnetic waves from rough surfaces\\\"]\\nfloat D_Beckmann(vec3 precomputeLight, float NoH){\\n    float a2 = precomputeLight.y;\\n    float NoH2 = NoH * NoH;\\n    return exp( (NoH2 - 1.0) / (a2 * NoH2) ) / ( PI * a2 * NoH2 * NoH2 );\\n}\\n\\n// GGX / Trowbridge-Reitz\\n// [Walter et al. 2007, \\\"Microfacet models for refraction through rough surfaces\\\"]\\nfloat D_GGX(vec3 precomputeLight, float NoH){\\n    float a2 = precomputeLight.y;\\n    float d = (NoH * a2 - NoH) * NoH + 1.0;\\t// 2 mad\\n    return a2 / (PI * d * d);\\t// 4 mul, 1 rcp\\n}\\n\\nfloat D_GGX(float rougness, float NoH){\\n    float a2 = rougness * rougness;\\n    float d = (NoH * a2 - NoH) * NoH + 1.0;\\t// 2 mad\\n    return a2 / (PI * d * d);\\t// 4 mul, 1 rcp\\n}\\n\\nfloat Specular_D(vec3 precomputeLight, float NoH){\\n#if defined(NDF_BLINNPHONG)\\n    return D_Blinn(precomputeLight, NoH);\\n#elif defined(NDF_BECKMANN)\\n    return D_Beckmann(precomputeLight, NoH);\\n#elif defined(NDF_GGX)\\n    return D_GGX(precomputeLight, NoH);\\n#else\\n    return D_GGX(precomputeLight, NoH);\\n#endif\\n}\\n\\n// ************************************ Fresnel ************************************\\n\\n// [Schlick 1994, \\\"An Inexpensive BRDF Model for Physically-Based Rendering\\\"]\\nvec3 F_Schlick(float VoH, vec3 f0, float f90){\\n    return f0 + (vec3(f90) - f0) * pow5(1.0 - VoH);\\n}\\n\\nfloat F_Schlick(float VoH, float f0, float f90) {\\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\\n}\\n\\n// [Cook-Torrance 1982]\\nvec3 F_CookTorrance(float VoH, vec3 f0, float f90){\\n    vec3 sqrtSpec = sqrt(f0);\\n    vec3 n = (1.0 + sqrtSpec) / (1.0 - sqrtSpec);\\n    float c = saturate(VoH);\\n    vec3 g = sqrt(n * n + c * c - 1.0);\\n\\n    vec3 part1 = (g - c)/(g + c);\\n    vec3 part2 = ((g + c) * c - 1.0)/((g - c) * c + 1.0);\\n\\n    return max(vec3(0.0), 0.5 * part1 * part1 * (1.0 + part2 * part2));\\n}\\n\\nvec3 F_None(vec3 f0){\\n    return f0;\\n}\\n\\nvec3 Specular_F(float VoH, vec3 f0, float f90) {\\n#if defined(F_SCHLICK)\\n    return F_Schlick(VoH, f0, f90);\\n#elif defined(F_COOKTORRANCE)\\n    return F_CookTorrance(VoH, f0, f90);\\n#else // FRESNSEL_NONE\\n    return F_None(f0);\\n#endif\\n}\\n\\n// ******************************** Visibility Term *********************************\\nfloat Vis_Implicit(){\\n\\treturn 0.25;\\n}\\n\\n// [Neumann et al. 1999, \\\"Compact metallic reflectance models\\\"]\\nfloat Vis_Neumann(vec3 precomputeLight, float NoL){\\n\\tfloat NoV = precomputeLight.z;\\n\\treturn 1. / (4. * max(NoL, NoV));\\n}\\n\\n// [Kelemen 2001, \\\"A microfacet based coupled specular-matte brdf model with importance sampling\\\"]\\nfloat Vis_Kelemen(float VoH){\\n\\t// constant to prevent NaN\\n\\treturn 1./(4. * VoH * VoH + 1e-5);\\n}\\n\\n// Tuned to match behavior of Vis_Smith\\n// [Schlick 1994, \\\"An Inexpensive BRDF Model for Physically-Based Rendering\\\"]\\nfloat Vis_Schlick(vec3 precomputeLight, float NoL){\\n\\tfloat a2 = precomputeLight.y;\\n\\tfloat NoV = precomputeLight.z;\\n\\tfloat k = sqrt(a2) * 0.5;\\n\\tfloat Vis_SchlickV = NoV * (1. - k) + k;\\n\\tfloat Vis_SchlickL = NoL * (1. - k) + k;\\n\\treturn 0.25 / (Vis_SchlickV * Vis_SchlickL);\\n}\\n\\n// Smith term for GGX\\n// [Smith 1967, \\\"Geometrical shadowing of a random rough surface\\\"]\\nfloat Vis_Smith(vec3 precomputeLight, float NoL){\\n\\tfloat a2 = precomputeLight.y;\\n\\tfloat NoV = precomputeLight.z;\\n\\tfloat Vis_SmithV = NoV + sqrt(NoV * (NoV - NoV * a2) + a2);\\n\\tfloat Vis_SmithL = NoL + sqrt(NoL * (NoL - NoL * a2) + a2);\\n\\treturn 1./(Vis_SmithV * Vis_SmithL);\\n}\\n\\n// Appoximation of joint Smith term for GGX\\n// [Heitz 2014, \\\"Understanding the Masking-Shadowing Function in Microfacet-Based BRDFs\\\"]\\nfloat Vis_SmithJointApprox(vec3 precomputeLight, float NoL){\\n    float roughness = precomputeLight.x;\\n    float NoV = precomputeLight.z;\\n    float Vis_SmithV = NoL * (NoV * (1.0 - roughness) + roughness);\\n    float Vis_SmithL = NoV * (NoL * (1.0 - roughness) + roughness);\\n    return 0.5 / (Vis_SmithV + Vis_SmithL);\\n}\\n\\n// Hammon 2017, \\\"PBR Diffuse Lighting for GGX+Smith Microsurfaces\\\"\\nfloat Vis_SmithJointApprox_Hammon(vec3 precomputeLight, float NoL) {\\n    float roughness = precomputeLight.x;\\n    float NoV = precomputeLight.z;\\n\\n    float v = 0.5 / mix(2.0 * NoL * NoV, NoL + NoV, roughness);\\n    return v;\\n}\\n\\nfloat Specular_V(vec3 precomputeLight, float NoL, float VoH){\\n#if defined(V_IMPLICIT)\\n    return Vis_Implicit();\\n#elif defined(V_NEUMANN)\\n    return Vis_Neumann(precomputeLight, NoL);\\n#elif defined(V_KELEMEN)\\n    return Vis_Kelemen(VoH);\\n#elif defined(V_SCHLICK)\\n    return Vis_Schlick(precomputeLight, NoL);\\n#elif defined(V_SMITH)\\n    return Vis_Smith(precomputeLight, NoL);\\n#elif defined(V_SMITHJOINTAPPROX)\\n    return Vis_SmithJointApprox(precomputeLight, NoL);\\n#elif defined(V_HAMMONAPPROX)\\n    return Vis_SmithJointApprox_Hammon(precomputeLight, NoL);\\n#else\\n\\treturn 0.25;\\n#endif\\n}\\n\\nvec3 specularLobe(vec3 precomputeLight, vec3 specular, float NoL, float NoH, float VoH, float f90) {\\n    float D = Specular_D(precomputeLight, NoH);\\n    vec3 F = Specular_F(VoH, specular, f90);\\n    float V = Specular_V(precomputeLight, NoL, VoH);\\n\\t\\n    return (D * V) * F;\\n}\\n\\n// ************************************ Diffuse ************************************\\nvec3 Diffuse_Lambert(vec3 diffuse){\\n\\treturn diffuse / PI;\\n}\\n\\n// [Burley 2012, \\\"Physically-Based Shading at Disney\\\"]\\nvec3 Diffuse_Burley(vec3 precomputeLight, vec3 diffuse, float NoL, float VoH){\\n    float Roughness = precomputeLight.x;\\n    float NoV =  precomputeLight.z;\\n\\n\\tfloat FD90 = 0.5 + 2. * VoH * VoH * Roughness;\\n\\tfloat FdV = 1. + (FD90 - 1.) * pow5(1. - NoV);\\n\\tfloat FdL = 1. + (FD90 - 1.) * pow5(1. - NoL);\\n\\treturn diffuse * ((1. / PI) * FdV * FdL);\\n}\\n\\n// [Gotanda 2012, \\\"Beyond a Simple Physically Based Blinn-Phong Model in Real-Time\\\"]\\nvec3 Diffuse_OrenNayar(vec3 precomputeLight, vec3 diffuse, float NoL, float VoH){\\n    float Roughness = precomputeLight.x;\\n\\tfloat a = precomputeLight.y;\\n    float NoV = precomputeLight.z;\\n\\tfloat s = a; // / ( 1.29 + 0.5 * a );\\n\\tfloat s2 = s * s;\\n\\tfloat VoL = 2. * VoH * VoH - 1.;  // double angle identity\\n\\tfloat Cosri = VoL - NoV * NoL;\\n\\tfloat C1 = 1. - 0.5 * s2 / (s2 + 0.33);\\n\\tfloat C2 = 0.45 * s2 / (s2 + 0.09) * Cosri * (Cosri >= 0. ? 1./(max(NoL, NoV)) : 1.);\\n\\treturn diffuse / PI * (C1 + C2) * (1. + Roughness * 0.5);\\n}\\n\\n// [Gotanda 2014, \\\"Designing Reflectance Models for New Consoles\\\"]\\nvec3 Diffuse_Gotanda(vec3 precomputeLight, vec3 diffuse, float NoL, float VoH){\\n    float Roughness = precomputeLight.x;\\n\\tfloat a = precomputeLight.y;\\n    float NoV = precomputeLight.z;\\n\\tfloat a2 = a * a;\\n\\tfloat F0 = 0.04;\\n\\tfloat VoL = 2. * VoH * VoH - 1.;    // double angle identity\\n\\tfloat Cosri = VoL - NoV * NoL;\\n\\n\\tfloat a2_13 = a2 + 1.36053;\\n\\tfloat Fr = ( 1. - ( 0.542026*a2 + 0.303573*a ) / a2_13 ) * ( 1. - pow( 1. - NoV, 5. - 4.*a2 ) / a2_13 ) * ( ( -0.733996*a2*a + 1.50912*a2 - 1.16402*a ) * pow( 1. - NoV, 1. + 1./(39.*a2*a2+1.) ) + 1. );\\n\\tfloat Lm = ( max( 1. - 2.*a, 0. ) * ( 1. - pow5( 1. - NoL ) ) + min( 2.*a, 1. ) ) * ( 1. - 0.5*a * (NoL - 1.) ) * NoL;\\n\\tfloat Vd = ( a2 / ( (a2 + 0.09) * (1.31072 + 0.995584 * NoV) ) ) * ( 1. - pow( 1. - NoL, ( 1. - 0.3726732 * NoV * NoV ) / ( 0.188566 + 0.38841 * NoV ) ) );\\n\\tfloat Bp = Cosri < 0. ? 1.4 * NoV * NoL * Cosri : Cosri;\\n\\tfloat Lr = (21.0 / 20.0) * (1. - F0) * ( Fr * Lm + Vd + Bp );\\n\\treturn diffuse / PI * Lr;\\n}\\n\\nvec3 diffuseLobe(vec3 precomputeLight, vec3 diffuse, float NoL, float VoH){\\n#if defined(DIFFUSE_LAMBERT)\\n    return Diffuse_Lambert(diffuse);\\n#elif defined(DIFFUSE_BURLEY)\\n    return Diffuse_Burley(precomputeLight, diffuse, NoL, VoH);\\n#elif defined(DIFFUSE_ORENNAYAR)\\n    return Diffuse_OrenNayar(precomputeLight, diffuse, NoL, VoH);\\n#elif defined(DIFFUSE_GOTANDA)\\n    return Diffuse_Gotanda(precomputeLight, diffuse, NoL, VoH);\\n#else // DIFFUSE_NONE\\n    return vec3(0.0);\\n#endif\\n}\\n\\nvoid surfaceShading(in vec3 normal, in vec3 viewDir, in float NoL, in vec3 precomputeLight, in vec3 diffuse, in vec3 specular, in float attenuation, in vec3 lightColor, in vec3 lightDir, in float f90, out vec3 diffuseOut, out vec3 specularOut, out bool lighted) {\\n    lighted = NoL > 0.0;\\n    if (!lighted) {\\n        specularOut = diffuseOut = vec3(0.0);\\n        return;\\n    }\\n    vec3 H = normalize(viewDir + lightDir);\\n    float NoH =  saturate(dot(normal, H));\\n    float VoH =  saturate(dot(viewDir, H));\\n\\t\\n    vec3 colorAttenuate = attenuation * NoL * lightColor;\\n    diffuseOut = colorAttenuate * diffuseLobe(precomputeLight, diffuse, NoL, VoH);\\n    specularOut = colorAttenuate * specularLobe(precomputeLight, specular, NoL, NoH, VoH, f90);\\n}\";","export default \"#define GLSLIFY 1\\n// Refer: Filament\\n// Anisotropy(GGX)\\n#if defined(USE_TANGENT) && defined(ENABLE_ANISOTROPY)\\nfloat D_GGX_Anisotropic(float at, float ab, float ToH, float BoH, float NoH) {\\n    // Burley 2012, \\\"Physically-Based Shading at Disney\\\"\\n\\n    // The values at and ab are perceptualRoughness^2, a2 is therefore perceptualRoughness^4\\n    // The dot product below computes perceptualRoughness^8. We cannot fit in fp16 without clamping\\n    // the roughness to too high values so we perform the dot product and the division in fp32\\n    float a2 = at * ab;\\n    vec3 v = vec3(ab * ToH, at * BoH, a2 * NoH);\\n    float v2 = dot(v, v);\\n    float w2 = a2 / v2;\\n    return a2 * w2 * w2 * (1.0 / PI);\\n}\\n\\nfloat V_SmithGGXCorrelated_Anisotropic(float at, float ab, float ToV, float BoV, float ToL, float BoL, float NoV, float NoL) {\\n    // Heitz 2014, \\\"Understanding the Masking-Shadowing Function in Microfacet-Based BRDFs\\\"\\n    // TODO: lambdaV can be pre-computed for all the lights, it should be moved out of this function\\n    float lambdaV = NoL * length(vec3(at * ToV, ab * BoV, NoV));\\n    float lambdaL = NoV * length(vec3(at * ToL, ab * BoL, NoL));\\n    float v = 0.5 / (lambdaV + lambdaL);\\n    return v;\\n}\\n\\nvec3 anisotropicLobe(vec3 precomputeGGX, vec3 H, vec3 viewDir, vec3 lightDir, float NoH, float VoH, float NoL, vec3 specular, float f90, in vec3 anisotropicT, in vec3 anisotropicB, in float anisotropy) {\\n    float roughness = precomputeGGX.x;\\n    float NoV =  precomputeGGX.z;\\n\\n    float ToV = dot(anisotropicT, viewDir);\\n    float BoV = dot(anisotropicB, viewDir);\\n    float ToL = dot(anisotropicT, lightDir);\\n    float BoL = dot(anisotropicB, lightDir);\\n    float ToH = dot(anisotropicT, H);\\n    float BoH = dot(anisotropicB, H);\\n\\n    // Anisotropic parameters: at and ab are the roughness along the tangent and bitangent\\n    // to simplify materials, we derive them from a single roughness parameter\\n    // Kulla 2017, \\\"Revisiting Physically Based Shading at Imageworks\\\"\\n    float at = max(roughness * (1.0 + anisotropy), MIN_ROUGHNESS);\\n    float ab = max(roughness * (1.0 - anisotropy), MIN_ROUGHNESS);\\n\\n    // Specular anisotropic BRDF\\n    float D = D_GGX_Anisotropic(at, ab, ToH, BoH, NoH);\\n    float V = V_SmithGGXCorrelated_Anisotropic(at, ab, ToV, BoV, ToL, BoL, NoV, NoL);\\n    vec3 F = Specular_F(VoH, specular, f90);\\n\\n    return (D * V) * F;\\n}\\n\\nvoid anisotropicSurfaceShading(vec3 normal, vec3 viewDir, float NoL, vec3 precomputeLight, vec3 diffuse, vec3 specular, float attenuation, vec3 lightColor, vec3 lightDir, float f90, vec3 anisotropicT, vec3 anisotropicB, float anisotropy, out vec3 diffuseOut, out vec3 specularOut, out bool lighted) {\\n    lighted = NoL > 0.0;\\n    if (!lighted) {\\n        specularOut = diffuseOut = vec3(0.0);\\n        return;\\n    }\\n    vec3 H = normalize(viewDir + lightDir);\\n    float NoH =  saturate(dot(normal, H));\\n    float VoH =  saturate(dot(viewDir, H));\\n\\n    vec3 colorAttenuate = attenuation * NoL * lightColor;\\n    diffuseOut = colorAttenuate * diffuseLobe(precomputeLight, diffuse, NoL, VoH);\\n    specularOut = colorAttenuate * anisotropicLobe(precomputeLight, H, viewDir, lightDir, NoH, VoH, NoL, specular, f90, anisotropicT, anisotropicB, anisotropy);\\n}\\n#endif\";","export default \"#define GLSLIFY 1\\nfloat pow5(float x) {\\n\\tfloat xx = x * x;\\n\\treturn xx * xx * x;\\n}\\n\\n// http://www.neilmendoza.com/glsl-rotation-about-an-arbitrary-axis/\\nmat3 rotationMatrix3(vec3 axis, float angle) {\\n\\taxis = normalize(axis);\\n\\tfloat s = sin(angle);\\n\\tfloat c = cos(angle);\\n\\tfloat oc = 1.0 - c;\\n\\treturn mat3(oc * axis.x * axis.x + c,\\n                oc * axis.x * axis.y - axis.z * s,\\n                oc * axis.z * axis.x + axis.y * s,\\n\\t\\t\\t\\toc * axis.x * axis.y + axis.z * s,\\n                oc * axis.y * axis.y + c,\\n                oc * axis.y * axis.z - axis.x * s,\\n                oc * axis.z * axis.x - axis.y * s,\\n                oc * axis.y * axis.z + axis.x * s,\\n                oc * axis.z * axis.z + c);\\n}\";","export default \"#define GLSLIFY 1\\n// Shadow\\nuniform bool receiveShadow;\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n        struct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n        uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n        \\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare, float shadowDistance) {\\n        vec2 centroidCoord = uv / size;\\n        centroidCoord = centroidCoord + 0.5;\\n        vec2 f = fract(centroidCoord);\\n\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\\n\\n        vec4 fetches;\\n        const vec2 offset = vec2( 0.0, 1.0 );\\n        fetches.x = compare - unpackRGBAToDepth( texture2D( depths, centroidUV + texelSize * offset.xx ));\\n        fetches.y = compare - unpackRGBAToDepth( texture2D( depths, centroidUV + texelSize * offset.xy ));\\n        fetches.z = compare - unpackRGBAToDepth( texture2D( depths, centroidUV + texelSize * offset.yx ));\\n        fetches.w = compare - unpackRGBAToDepth( texture2D( depths, centroidUV + texelSize * offset.yy ));\\n\\n        // Shadow distance\\n        float _a = mix(fetches.x, fetches.y, f.y);\\n        float _b = mix(fetches.z, fetches.w, f.y);\\n        shadowDistance = mix(_a, _b, f.x);\\n\\n\\t\\tvec4 st = step(fetches, vec4(0.0));\\n\\n        float a = mix(st.x, st.y, f.y);\\n        float b = mix(st.z, st.w, f.y);\\n        return mix(a, b, f.x);\\n\\t}\\n\\n\\tfloat getShadow(bool lighted, sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, out float shadowDistance ) {\\n        bool earlyOut = false;\\n        float shadow = 1.0;\\n\\n        if (!lighted){\\n            shadow = 0.0;\\n            earlyOut = true;\\n        }\\n\\n        if(uShadowDepthRange.x == uShadowDepthRange.y){\\n            earlyOut = true;\\n        }\\n\\n        if (!earlyOut) {\\n            shadowCoord.xyz /= shadowCoord.w;\\n            shadowCoord.z += shadowBias;\\n            // if ( something && something ) breaks ATI OpenGL shader compiler\\n            // if ( all( something, something ) ) using this instead\\n            bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n            bool inFrustum = all( inFrustumVec );\\n            bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n            bool frustumTest = all( frustumTestVec );\\n            if ( frustumTest ) {\\n                vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n                // TODO: Shadow jitter\\n                float res = texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z, shadowDistance);\\n                shadow = res;\\n            }\\n        }\\n\\t\\treturn shadow;\\n\\t}\\n#endif\";","export default \"#define GLSLIFY 1\\n// Light\\n// DirectionalLight\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tbool visible;\\n\\t};\\n\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\n    void precomputeDirect(vec3 normal, vec3 viewDir, inout DirectionalLight directionalLight, out float attenuation, out vec3 lightDir, out float NoL) {\\n        attenuation = 1.0;\\n        lightDir = directionalLight.direction;\\n        NoL = dot(normal, lightDir);\\n\\t\\tdirectionalLight.visible = true;\\n    }\\n#endif\\n// Todo: Spot/Point Light\";","export default \"#define GLSLIFY 1\\n#preImport <isotropyLightCompute>\\n#preImport <anisotropyLightCompute>\";","export default \"#define GLSLIFY 1\\n// IBL\\n#preImport <precomputeLight>\\n#preImport <computeDiffuseSPH>\\n\\n#ifdef PANORAMA\\n    #preImport <panoramaSampler>\\n#endif\\n\\nvec3 integrateBRDF(vec3 materialSpecular, float roughness, float NoV) {\\n    vec4 rgba = texture2D(uIntegrateBRDF, vec2(NoV, roughness));\\n    float a = (rgba[1] * 65280.0 + rgba[0] * 255.0) / 65535.0;\\n    float b = (rgba[3] * 65280.0 + rgba[2] * 255.0) / 65535.0;\\n    return (1.-materialSpecular) * a + materialSpecular * b;\\n}\\n\\n// frostbite, lagarde paper p67\\n// http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\nfloat linRoughnessToMipmap(float roughnessLinear){\\n    return sqrt(roughnessLinear);\\n}\\n\\nvec3 prefilterEnvMap(float rLinear, vec3 R) {\\n    vec3 dir = R;\\n    float lod = linRoughnessToMipmap(rLinear) * uEnvironmentLodRange[1]; //(uEnvironmentMaxLod - 1.0);\\n    lod = min(uEnvironmentLodRange[0], lod);\\n#ifdef CUBEMAP_LOD\\n    // http://seblagarde.wordpress.com/2012/06/10/amd-cubemapgen-for-physically-based-rendering/\\n    float scale = 1.0 - exp2(lod) / uEnvironmentSize[0];\\n    vec3 absDir = abs(dir);\\n    float M = max(max(absDir.x, absDir.y), absDir.z);\\n    // cubemapSeamlessFixDirection\\n    if (absDir.x != M) dir.x *= scale;\\n    if (absDir.y != M) dir.y *= scale;\\n    if (absDir.z != M) dir.z *= scale;\\n\\treturn LogLuvToLinear(textureCubeLodEXT(envMap, dir, lod)).rgb;\\n#else\\n    return LogLuvToLinear(panoramaSampler(envMap, uEnvironmentSize, R, lod, uEnvironmentLodRange[0])).rgb;\\n\\t#endif\\n}\\n\\n// Anisotropic\\n#if defined(USE_TANGENT) && defined(ENABLE_ANISOTROPY)\\nvec3 computeAnisotropicBentNormal(vec3 normal, vec3 viewDir, float roughness, vec3 anisotropicT, vec3 anisotropicB, float anisotropy) {\\n    vec3 anisotropyDirection = anisotropy >= 0.0 ? anisotropicB : anisotropicT;\\n    vec3 anisotropicTangent = cross(anisotropyDirection, viewDir);\\n    vec3 anisotropicNormal = cross(anisotropicTangent, anisotropyDirection);\\n    float bendFactor = abs(anisotropy) * clamp(5.0 * roughness, 0.0, 1.0);\\n    vec3  bentNormal = normalize(mix(normal, anisotropicNormal, bendFactor));\\n    return bentNormal;\\n}\\n#endif\\n\\n// From Sebastien Lagarde Moving Frostbite to PBR page 69\\n// We have a better approximation of the off specular peak\\n// but due to the other approximations we found this one performs better.\\n// N is the normal direction\\n// R is the mirror vector\\n// This approximation works fine for G smith correlated and uncorrelated\\nvec3 getSpecularDominantDir(vec3 N, vec3 R, float realRoughness) {\\n    float smoothness = 1.0 - realRoughness;\\n    float lerpFactor = smoothness * (sqrt(smoothness) + realRoughness);\\n    return mix(N, R, lerpFactor);\\n}\\n\\nvec3 getPrefilteredEnvMapColor(vec3 normal, vec3 viewDir, float roughness) {\\n    vec3 R = reflect(-viewDir, normal);\\n    // From Sebastien Lagarde Moving Frostbite to PBR page 69\\n    vec3 dominantR = getSpecularDominantDir(normal, R, roughness * roughness);\\n    vec3 dir = uEnvironmentTransform * dominantR;\\n    vec3 prefilteredColor = prefilterEnvMap(roughness, dir);\\n\\n    return prefilteredColor;\\n}\\n\\nvec3 computeIBLSpecularUE4(vec3 specularDFG, vec3 normal, vec3 viewDir, float roughness) {\\n    return getPrefilteredEnvMapColor(normal, viewDir, roughness) * specularDFG;\\n}\";","export default \"#define GLSLIFY 1\\n // ClearCoat\\n#ifdef ENABLE_CLEARCOAT\\nvoid computeClearCoatIBL(float clearCoatNoV, vec3 clearCoatNormal, float clearCoatPerceptualRoughness, vec3 viewDir, float specularAO, inout vec3 Fd, inout vec3 Fr){\\n    // The clear coat layer assumes an IOR of 1.5 (4% reflectance)\\n    vec3 materialSpecular = vec3(0.04);\\n    float materialF90 = 1.0;\\n    float Fc = F_Schlick(clearCoatNoV, materialSpecular.x, materialF90) * uClearCoat;\\n    float attenuation = 1.0 - Fc;\\n    Fd *= attenuation;\\n    Fr *= attenuation;\\n\\n    vec3 specularDFG = integrateBRDF(materialSpecular, clearCoatPerceptualRoughness, clearCoatNoV);\\n    vec3 clearCoatLobe = computeIBLSpecularUE4(specularDFG, clearCoatNormal, viewDir, clearCoatPerceptualRoughness);\\n    Fr += clearCoatLobe * (specularAO * uClearCoat);\\n}\\n\\nfloat distributionClearCoat(float roughness, float NoH, const vec3 h) {\\n    return D_GGX(roughness, NoH);\\n}\\n\\nfloat visibilityClearCoat(float LoH) {\\n    return Vis_Kelemen(LoH);\\n}\\n\\nfloat clearCoatLobe(vec3 h, float clearCoatNoH, float clearCoatLoH, float clearCoatRoughness, out float Fcc){\\n    // clear coat specular lobe\\n    float D = distributionClearCoat(clearCoatRoughness, clearCoatNoH, h);\\n    float V = visibilityClearCoat(clearCoatLoH);\\n    float F = F_Schlick(clearCoatLoH, 0.04, 1.0) * uClearCoat; // fix IOR to 1.5\\n\\n    Fcc = F;\\n    return D * V * F;\\n}\\n#endif\";","export default \"#define GLSLIFY 1\\n#ifdef ENERGY_COMPENSATION\\nfloat getEnergyCompensation(vec3 dfg, float f0) {\\n   return 1.0 + f0 * (1.0 / dfg.y - 1.0);\\n}\\n#endif\\n\\n#ifdef SPECULAR_AO_MARMOSETCO\\n// http://marmosetco.tumblr.com/post/81245981087\\nfloat occlusionHorizon(float ao, vec3 normal, vec3 viewDir) {\\n    float d = dot(normal, viewDir) + ao;\\n    return clamp((d * d) - 1.0 + ao, 0.0, 1.0);\\n}\\n#endif\\n\\n#ifdef SPECULAR_AO_SEBLAGARDE\\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\\nfloat computeSpecularAO(float ao, vec3 precomputeLight) {\\n    float roughness = precomputeLight.x;\\n    float NoV =  precomputeLight.z;\\n    return clamp(pow(NoV + ao, exp2(-16.0 * roughness - 1.0)) - 1.0 + ao, 0.0, 1.0);\\n}\\n#endif\\n\\n/**\\n* Returns a color ambient occlusion based on a pre-computed visibility term.\\n* The albedo term is meant to be the diffuse color or f0 for the diffuse and\\n* specular terms respectively.\\n*/\\nvec3 gtaoMultiBounce(float visibility, const vec3 albedo) {\\n    // Jimenez et al. 2016, \\\"Practical Realtime Strategies for Accurate Indirect Occlusion\\\"\\n    vec3 a =  2.0404 * albedo - 0.3324;\\n    vec3 b = -4.7951 * albedo + 0.6417;\\n    vec3 c =  2.7552 * albedo + 0.6903;\\n\\n    return max(vec3(visibility), ((visibility * a + b) * visibility + c) * visibility);\\n}\\n#ifdef MS_DIFFUSE_AO\\nvoid multiBounceAO(float visibility, const vec3 albedo, inout vec3 color) {\\n    color *= gtaoMultiBounce(visibility, albedo);\\n}\\n#endif\\n\\n#ifdef MS_SPECULAR_AO\\nvoid multiBounceSpecularAO(float visibility, const vec3 albedo, inout vec3 color) {\\n    color *= gtaoMultiBounce(visibility, albedo);\\n}\\n#endif\\n\\n#ifdef GEOMETRIC_SPECULAR_AA\\nfloat normalFiltering(float perceptualRoughness, const vec3 geometricNormal) {\\n    // Kaplanyan 2016, \\\"Stable specular highlights\\\"\\n    // Tokuyoshi 2017, \\\"Error Reduction and Simplification for Shading Anti-Aliasing\\\"\\n    // Tokuyoshi and Kaplanyan 2019, \\\"Improved Geometric Specular Antialiasing\\\"\\n\\n    // This implementation is meant for deferred rendering in the original paper but\\n    // we use it in forward rendering as well (as discussed in Tokuyoshi and Kaplanyan\\n    // 2019). The main reason is that the forward version requires an expensive transform\\n    // of the half vector by the tangent frame for every light. This is therefore an\\n    // approximation but it works well enough for our needs and provides an improvement\\n    // over our original implementation based on Vlachos 2015, \\\"Advanced VR Rendering\\\".\\n\\n    vec3 du = dFdx(geometricNormal);\\n    vec3 dv = dFdy(geometricNormal);\\n\\n    float variance = uSpecularAAVariance * (dot(du, du) + dot(dv, dv));\\n\\n    float roughness = perceptualRoughness * perceptualRoughness;\\n    float kernelRoughness = min(2.0 * variance, uSpecularAAThreshold);\\n    float squareRoughness = saturate(roughness * roughness + kernelRoughness);\\n\\n    return sqrt(sqrt(squareRoughness));\\n}\\n#endif\";","import computeDiffuseSPH from './chunk/function/computeDiffuseSPH.glsl';\nimport integrateBRDFMobile from './chunk/function/integrateBRDFMobile.glsl';\nimport panoramaSampler from './chunk/function/panoramaSampler.glsl';\nimport precomputeLight from './chunk/function/precomputeLight.glsl';\nimport isotropyLightCompute from './chunk/function/isotropyLightCompute.glsl';\nimport anisotropyLightCompute from './chunk/function/anisotropyLightCompute.glsl';\n\nimport math from './chunk/math.glsl';\nimport shadow from './chunk/shadow.glsl';\nimport light from './chunk/light.glsl';\nimport brdf from './chunk/brdf.glsl';\nimport ibl from './chunk/ibl.glsl';\nimport clearCoat from './chunk/clearCoat.glsl';\nimport advance from './chunk/advance.glsl';\n\nexport default {\n\tcomputeDiffuseSPH,\n\tintegrateBRDFMobile,\n\tpanoramaSampler,\n\tprecomputeLight,\n\tisotropyLightCompute,\n\tanisotropyLightCompute,\n\n\tmath,\n\tshadow,\n\tlight,\n\tbrdf,\n\tibl,\n\tclearCoat,\n\tadvance\n};\n","export default \"#define GLSLIFY 1\\nuniform mat3 uModelNormalMatrix;\\nvarying vec3 vViewPosition;\\n\\nvarying vec3 vNormal;\\n\\n#ifdef USE_TANGENT\\n\\tvarying vec3 vTangent;\\n\\tvarying vec3 vBitangent;\\n#endif\\n\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n\\nvoid main(){\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n    #include <color_vertex>\\n    #include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\n\\tvNormal = normalize(transformedNormal);\\n\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize(transformedTangent);\\n\\t\\tvBitangent = normalize(cross(vNormal, vTangent) * tangent.w);\\n\\t#endif\\n\\n    #include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\n    vViewPosition = mvPosition.xyz;\\n\\n\\t#include <worldpos_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";","export default \"#define GLSLIFY 1\\n// refer: \\n// https://github.com/cedricpinson/osgjs\\n// https://google.github.io/filament/Filament.html\\n\\nuniform mat3 uEnvironmentTransform;\\nuniform float uEnvBrightness;\\nuniform vec3 uEnvironmentSphericalHarmonics[9];\\nuniform sampler2D uIntegrateBRDF;\\n\\nconst float MIN_ROUGHNESS = 0.001;\\n\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n\\nvarying vec3 vViewPosition;\\n\\n#ifdef GEOMETRIC_SPECULAR_AA\\nuniform float uSpecularAAThreshold;\\nuniform float uSpecularAAVariance;\\n#endif\\n\\n// Anisotropy\\n#if defined(USE_TANGENT) && defined(ENABLE_ANISOTROPY)\\nuniform float uAnisotropyRotation;\\nuniform float uAnisotropyFactor;\\n#endif\\n\\n// ClearCoat\\n#ifdef ENABLE_CLEARCOAT\\nuniform float uClearCoat;\\nuniform float uClearCoatRoughness;\\n#endif\\n\\n#ifdef CUBEMAP_LOD\\nuniform samplerCube envMap;\\n#endif\\n#ifdef PANORAMA\\nuniform sampler2D envMap;\\n#endif\\nuniform vec2 uEnvironmentSize;\\nuniform vec2 uEnvironmentLodRange;\\n\\n#ifdef SPECULAR_GLOSSINESS\\n    uniform vec3 specularFactor;\\n    uniform float glossinessFactor;\\n    #ifdef USE_SPECULARMAP\\n\\t    uniform sampler2D specularMap;\\n    #endif\\n    #ifdef USE_GLOSSINESSMAP\\n\\t    uniform sampler2D glossinessMap;\\n    #endif\\n#endif\\n\\nvarying vec3 vNormal;\\n#ifdef USE_TANGENT\\n    varying vec3 vTangent;\\n    varying vec3 vBitangent;\\n#endif\\n\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <color_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <map_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n\\n#preImport <math>\\n#preImport <light>\\n#preImport <ibl>\\n#preImport <brdf>\\n#preImport <advance>\\n#preImport <clearCoat>\\n\\nvoid main(){\\n    vec3 viewDir = -normalize(vViewPosition);\\n\\n    vec4 diffuseColor = vec4(diffuse, opacity);\\n    vec3 totalEmissiveRadiance = emissive;\\n    #include <logdepthbuf_fragment>\\n    #include <color_fragment>\\n    #include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n    #include <map_fragment>\\n    #include <emissivemap_fragment>\\n\\n    float roughnessVal;\\n    #ifdef SPECULAR_GLOSSINESS\\n        roughnessVal = glossinessFactor;\\n        #ifdef USE_GLOSSINESSMAP\\n            roughnessVal = texture2D(glossinessMap, vUv).a * glossinessFactor;\\n        #endif\\n        roughnessVal = 1.0 - roughnessVal;\\n    #else\\n        #include <roughnessmap_fragment>\\n        roughnessVal = roughnessFactor;\\n    #endif\\n\\n    vec3 materialSpecular;\\n    vec3 materialDiffuse = diffuseColor.rgb;\\n    #ifdef SPECULAR_GLOSSINESS\\n        materialSpecular = specularFactor;\\n        #ifdef USE_SPECULARMAP\\n            materialSpecular = sRGBToLinear(texture2D(specularMap, vUv)).rgb * specularFactor;\\n        #endif\\n    #else\\n        #include <metalnessmap_fragment>\\n        float f0 = 0.04;\\n        materialSpecular = mix(vec3(f0), diffuseColor.rgb, metalnessFactor);\\n        // materialSpecular = 0.16 * reflectance * reflectance * (1.0 - metallic) + baseColor * metallic;\\n        materialDiffuse = diffuseColor.rgb * (1.0 - metalnessFactor);\\n    #endif\\n\\n    float materialF90 = 1.0;\\n    #ifndef MOBILE\\n    materialF90 = saturate(dot(materialSpecular, vec3(50.0 * 0.33)));\\n    // cheap luminance approximation\\n    // materialF90 = saturate(50.0 * materialSpecular.g);\\n    #endif\\n\\n    // Roughness\\n    float materialRoughness = clamp(roughnessVal, MIN_ROUGHNESS, 1.0);\\n    #ifdef GEOMETRIC_SPECULAR_AA\\n    materialRoughness = normalFiltering(materialRoughness, geometryNormal);\\n    #endif\\n\\n    vec3 prepCompute = precomputeLight(normal, viewDir, max(0.045, materialRoughness));\\n\\n    // Anisotropy\\n    vec3 bentAnisotropicNormal = normal;\\n    #if defined(USE_TANGENT) && defined(ENABLE_ANISOTROPY)\\n        float anisotropy = uAnisotropyFactor;\\n        vec3 anisotropicT = normalize(vTangent.xyz);\\n        vec3 anisotropicB = normalize(vBitangent.xyz);\\n        // Change direction\\n        mat3 anisotropyRotationMatrix = rotationMatrix3(normal, uAnisotropyRotation);\\n        anisotropicB *= anisotropyRotationMatrix;\\n        anisotropicT *= anisotropyRotationMatrix;\\n        bentAnisotropicNormal = computeAnisotropicBentNormal(normal, viewDir, materialRoughness, anisotropicT, anisotropicB, anisotropy);\\n\\t#endif\\n\\n    // IBL\\n    float NoV = dot(bentAnisotropicNormal, viewDir);\\n    vec3 transformedNormal = uEnvironmentTransform * bentAnisotropicNormal;\\n    vec3 diffuseIBL = materialDiffuse * computeDiffuseSPH(transformedNormal, uEnvironmentSphericalHarmonics);\\n    vec3 specularDFG = integrateBRDF(materialSpecular, materialRoughness, NoV);\\n    vec3 specularIBL = computeIBLSpecularUE4(specularDFG, bentAnisotropicNormal, viewDir, materialRoughness);\\n    \\n    // Diffuse AO\\n    float materialAO = 1.0;\\n    #ifdef USE_AOMAP\\n\\tmaterialAO = (texture2D(aoMap, vUv2).r - 1.0) * aoMapIntensity + 1.0;\\n    #endif\\n    #ifdef MS_DIFFUSE_AO\\n    multiBounceAO(materialAO, materialDiffuse, diffuseIBL);\\n    #else\\n    diffuseIBL *= materialAO;\\n    #endif\\n    diffuseIBL *= uEnvBrightness;\\n    \\n    // Specular AO\\n    float specularAO = 1.0;\\n    #ifdef SPECULAR_AO_SEBLAGARDE\\n    specularAO = computeSpecularAO(materialAO, prepCompute);\\n    #elif defined(SPECULAR_AO_MARMOSETCO)\\n    specularAO = occlusionHorizon(materialAO, normal, viewDir);\\n    #endif\\n    float energyCompensation = 1.0;\\n    #ifdef ENERGY_COMPENSATION\\n    energyCompensation = getEnergyCompensation(specularDFG, materialSpecular.g);\\n    #endif\\n    #ifdef MS_SPECULAR_AO\\n    multiBounceSpecularAO(materialAO, materialSpecular, specularIBL);\\n    #endif\\n\\n    specularIBL *= uEnvBrightness * specularAO * energyCompensation;\\n\\n    // ClearCoat IBL\\n    #ifdef ENABLE_CLEARCOAT\\n    // Todo: ClearCoat normalMap\\n    // Use the geometric normal for the clear coat layer\\n    float clearCoatNoV = prepCompute.z;\\n    vec3 clearCoatNormal = geometryNormal;\\n    float clearCoatPerceptualRoughness = clamp(uClearCoatRoughness, MIN_ROUGHNESS, 1.0);\\n    #ifdef GEOMETRIC_SPECULAR_AA\\n    clearCoatPerceptualRoughness = normalFiltering(materialRoughness, geometryNormal);\\n    #endif\\n    float clearCoatRoughness = clearCoatPerceptualRoughness * clearCoatPerceptualRoughness;\\n    computeClearCoatIBL(clearCoatNoV, clearCoatNormal, clearCoatPerceptualRoughness, viewDir, specularAO, diffuseIBL, specularIBL);\\n    #endif\\n\\n    // Light\\n    float attenuation, NoL;\\n    vec3 lightDir;\\n    vec3 lightSpecular;\\n    vec3 lightDiffuse;\\n    vec3 resultLightSpecular;\\n    vec3 resultLightDiffuse;\\n    float resultLightClearCoat = 0.;\\n    bool lighted;\\n    float shadow = 1.0;\\n    float shadowDistance;\\n\\n    #if NUM_DIR_LIGHTS > 0\\n        DirectionalLight directionalLight;\\n        #if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n        DirectionalLightShadow directionalLightShadow;\\n        #endif\\n        #pragma unroll_loop_start\\n\\t    for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n            directionalLight = directionalLights[ i ];\\n            precomputeDirect(normal, viewDir, directionalLight, attenuation, lightDir, NoL);\\n            // Todo: combine methods\\n            #if defined(USE_TANGENT) && defined(ENABLE_ANISOTROPY)\\n            anisotropicSurfaceShading(normal, viewDir, NoL, prepCompute, materialDiffuse, materialSpecular, attenuation, directionalLights[ i ].color, lightDir, materialF90, anisotropicT, anisotropicB, anisotropy, lightDiffuse, lightSpecular, lighted);\\n            #else\\n            surfaceShading(normal, viewDir, NoL, prepCompute, materialDiffuse, materialSpecular, attenuation, directionalLights[ i ].color, lightDir, materialF90, lightDiffuse, lightSpecular, lighted);\\n            #endif\\n            // ClearCoat\\n            #ifdef ENABLE_CLEARCOAT\\n            vec3 H = normalize(viewDir + lightDir);\\n            // Todo: ClearCoat normalMap\\n            float clearCoatNoH =  saturate(dot(clearCoatNormal, H));\\n            float clearCoatLoH =  saturate(dot(lightDir, H));\\n            float Fcc;\\n            float clearCoat = clearCoatLobe(H, clearCoatNoH, clearCoatLoH, clearCoatRoughness, Fcc);\\n            float clearCoatAttenuation = 1.0 - Fcc;\\n\\n            lightDiffuse *= clearCoatAttenuation;\\n            lightSpecular *= energyCompensation * clearCoatAttenuation;\\n            resultLightClearCoat += clearCoat;\\n            #else\\n            lightSpecular *= energyCompensation;\\n            #endif\\n\\n            resultLightDiffuse += lightDiffuse;\\n            resultLightSpecular += lightSpecular;\\n        }\\n        #pragma unroll_loop_end\\n    #endif\\n    // Todo: Spot/Point Light\\n\\n    // Test\\n    #ifndef ENABLE_IBL\\n        diffuseIBL = vec3(0.);\\n        specularIBL = vec3(0.);\\n    #endif\\n    #ifndef ENABLE_LIGHT\\n        resultLightDiffuse = vec3(0.);\\n        resultLightSpecular = vec3(0.);\\n    #endif\\n\\n    vec3 resultDiffuse = diffuseIBL + resultLightDiffuse;\\n    vec3 resultSpecular = specularIBL + resultLightSpecular;\\n\\n    vec3 totalResult = resultDiffuse + resultSpecular + totalEmissiveRadiance + resultLightClearCoat;\\n    vec4 frag = vec4(totalResult, diffuseColor.a);\\n    gl_FragColor = frag;\\n    #include <tonemapping_fragment>\\n    #include <encodings_fragment>\\n}\";","import ShaderChunk from './shaders/ShaderChunk';\nimport pbrVS from './shaders/pbrVS';\nimport pbrFS from './shaders/pbrFS';\n\nexport class PBRProgram {\n\tconstructor() {\n\t\tthis.includePattern = /^[ \\t]*#preImport +<([\\w\\d./]+)>/gm;\n\t}\n\n\tgetPBRShader() {\n\t\tlet vs = this.preParseShader(pbrVS);\n\t\tlet fs = this.preParseShader(pbrFS);\n\t\treturn {\n\t\t\tpbrVS: vs,\n\t\t\tpbrFS: fs\n\t\t};\n\t}\n\n\tpreParseShader(string) {\n\t\tlet includeReplacer = (match, include) => {\n\t\t\tlet string = ShaderChunk[include];\n\t\t\tif (string === undefined) {\n\t\t\t\tthrow new Error('Can not resolve #preImport <' + include + '>');\n\t\t\t}\n\t\t\treturn this.preParseShader(string);\n\t\t};\n\t\treturn string.replace(this.includePattern, includeReplacer);\n\t}\n}\n","export default \"// @author brunoimbrizi / http://brunoimbrizi.com\\n\\nprecision highp float;\\n#define GLSLIFY 1\\n\\nattribute float pindex;\\nattribute vec3 position;\\nattribute vec3 offset;\\nattribute vec2 uv;\\nattribute float angle;\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\n\\nuniform float uTime;\\nuniform float uRandom;\\nuniform float uDepth;\\nuniform float uSize;\\nuniform vec2 uTextureSize;\\nuniform sampler2D uTexture;\\nuniform sampler2D uTouch;\\n\\nvarying vec2 vPUv;\\nvarying vec2 vUv;\\nvarying float touchRes;\\n\\n//\\n// Description : Array and textureless GLSL 2D simplex noise function.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute(vec3 x) {\\n  return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289(i); // Avoid truncation effects in permutation\\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\\n    + i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final noise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\\nfloat random(float n) {\\n\\treturn fract(sin(n) * 43758.5453123);\\n}\\n\\nvoid main() {\\n\\tvUv = uv;\\n\\n\\t// particle uv\\n\\tvec2 puv = offset.xy / uTextureSize;\\n\\tvPUv = puv;\\n\\n\\t// pixel color\\n\\tvec4 colA = texture2D(uTexture, puv);\\n\\t// if(t>0.1)\\n\\tfloat grey = colA.r * 0.21 + colA.g * 0.71 + colA.b * 0.07;\\n\\n\\t// displacement\\n\\tvec3 displaced = offset;\\n\\n\\t// touch\\n\\ttouchRes = texture2D(uTouch, puv).r;\\n\\tfloat randomVal = uRandom;\\n\\tfloat depthVal = uDepth;\\n\\tif(touchRes>0.1){\\n\\t\\trandomVal = 0.;\\n\\t\\tdepthVal = 0.;\\n\\t}\\n\\t// randomise\\n\\tdisplaced.xy += vec2(random(pindex) - 0.5, random(offset.x + pindex) - 0.5) * randomVal;\\n\\tfloat rndz = (random(pindex) + snoise(vec2(pindex * 0.1, uTime * 0.1)));\\n\\tdisplaced.z += rndz * (random(pindex) * 2.0 * depthVal);\\n\\t// center\\n\\tdisplaced.xy -= uTextureSize * 0.5;\\n\\n\\t// touch\\n\\t// float t = texture2D(uTouch, puv).r;\\n\\t// displaced.z += t * 20.0 * rndz;\\n\\t// displaced.x += cos(angle) * t * 20.0 * rndz;\\n\\t// displaced.y += sin(angle) * t * 20.0 * rndz;\\n\\n\\t// particle size\\n\\tfloat psize = (snoise(vec2(uTime, pindex) * 0.5) + 2.0);\\n\\t// psize *= max(grey, 0.2);\\n\\tpsize *= uSize;\\n\\n\\t// final position\\n\\tvec4 mvPosition = modelViewMatrix * vec4(displaced, 1.0);\\n\\tmvPosition.xyz += position * psize;\\n\\tvec4 finalPosition = projectionMatrix * mvPosition;\\n\\n\\tgl_Position = finalPosition;\\n}\\n\";","export default \"// @author brunoimbrizi / http://brunoimbrizi.com\\n\\nprecision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D uTexture;\\n\\nvarying vec2 vPUv;\\nvarying vec2 vUv;\\nvarying float touchRes;\\n\\nvoid main() {\\n\\tvec4 color = vec4(0.0);\\n\\tvec2 uv = vUv;\\n\\tvec2 puv = vPUv;\\n\\n\\t// pixel color\\n\\tvec4 colA = texture2D(uTexture, puv);\\n\\n\\t// greyscale\\n\\tfloat grey = colA.r * 0.21 + colA.g * 0.71 + colA.b * 0.07;\\n\\tvec4 colB = vec4(grey, grey, grey, 1.0);\\n\\n\\t// circle\\n\\tfloat border = 0.3;\\n\\tfloat radius = 0.5;\\n\\tfloat dist = radius - distance(uv, vec2(0.5));\\n\\tfloat t = smoothstep(0.0, border, dist);\\n\\n\\t// final color\\n\\tif(touchRes>0.1){\\n\\t\\tcolor = colA;\\n\\t}else{\\n\\t\\tcolor = colB;\\n\\t}\\n\\tcolor.a = t;\\n\\n\\tgl_FragColor = color;\\n}\";","import * as THREE from 'three';\n\nexport class ParticleInstance {\n\tconstructor(material) {\n\t\tthis.material = material;\n\t\tthis.initParticle();\n\t}\n\n\tinitParticle() {\n\t\tconst geometry = new THREE.InstancedBufferGeometry();\n\n\t\t// positions\n\t\tconst positions = new THREE.BufferAttribute(new Float32Array(4 * 3), 3);\n\t\tpositions.setXYZ(0, -0.5, -0.5, 0.0);\n\t\tpositions.setXYZ(1, 0.5, -0.5, 0.0);\n\t\tpositions.setXYZ(2, -0.5, 0.5, 0.0);\n\t\tpositions.setXYZ(3, 0.5, 0.5, 0.0);\n\t\tgeometry.setAttribute('position', positions);\n\n\t\t// uvs\n\t\tconst uvs = new THREE.BufferAttribute(new Float32Array(4 * 2), 2);\n\t\tuvs.setXYZ(0, 0.0, 0.0);\n\t\tuvs.setXYZ(1, 1.0, 0.0);\n\t\tuvs.setXYZ(2, 0.0, 1.0);\n\t\tuvs.setXYZ(3, 1.0, 1.0);\n\t\tgeometry.setAttribute('uv', uvs);\n\n\t\t// CCW\n\t\tgeometry.setIndex(new THREE.BufferAttribute(new Uint16Array([0, 1, 2, 2, 1, 3]), 1));\n\n\t\tthis.mesh = new THREE.Mesh(geometry, this.material);\n\t}\n}\n","import * as THREE from 'three';\nimport { easeOutSine } from 'JS/Utils';\n\nexport default class TouchTexture {\n\tconstructor(parent) {\n\t\tthis.parent = parent;\n\t\tthis.size = 64;\n\t\tthis.maxAge = 120;\n\t\tthis.radius = 0.2;\n\t\tthis.trail = [];\n\n\t\tthis.initTexture();\n\t}\n\n\tinitTexture() {\n\t\tthis.canvas = document.createElement('canvas');\n\t\tthis.canvas.width = this.canvas.height = this.size;\n\t\tthis.ctx = this.canvas.getContext('2d');\n\t\tthis.ctx.fillStyle = 'black';\n\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n\t\tthis.texture = new THREE.Texture(this.canvas);\n\n\t\tthis.canvas.id = 'touchTexture';\n\t\tthis.canvas.style.width = this.canvas.style.height = `${this.canvas.width}px`;\n\t}\n\n\tupdate(delta) {\n\t\tthis.clear();\n\n\t\t// age points\n\t\tthis.trail.forEach((point, i) => {\n\t\t\tpoint.age++;\n\t\t\t// remove old\n\t\t\tif (point.age > this.maxAge) {\n\t\t\t\tthis.trail.splice(i, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis.trail.forEach((point, i) => {\n\t\t\tthis.drawTouch(point);\n\t\t});\n\n\t\tthis.texture.needsUpdate = true;\n\t}\n\n\tclear() {\n\t\tthis.ctx.fillStyle = 'black';\n\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\t}\n\n\taddTouch(point) {\n\t\tlet force = 0;\n\t\tconst last = this.trail[this.trail.length - 1];\n\t\tif (last) {\n\t\t\tconst dx = last.x - point.x;\n\t\t\tconst dy = last.y - point.y;\n\t\t\tconst dd = dx * dx + dy * dy;\n\t\t\tforce = Math.min(dd * 10000, 1);\n\t\t}\n\t\tthis.trail.push({ x: point.x, y: point.y, age: 0, force });\n\t}\n\n\tdrawTouch(point) {\n\t\tconst pos = {\n\t\t\tx: point.x * this.size,\n\t\t\ty: (1 - point.y) * this.size\n\t\t};\n\n\t\tlet intensity = 1;\n\t\tif (point.age < this.maxAge * 0.3) {\n\t\t\tintensity = easeOutSine(point.age / (this.maxAge * 0.3), 0, 1, 1);\n\t\t} else {\n\t\t\tintensity = easeOutSine(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7), 0, 1, 1);\n\t\t}\n\n\t\tintensity *= point.force;\n\n\t\tconst radius = this.size * this.radius * intensity;\n\t\tconst grd = this.ctx.createRadialGradient(pos.x, pos.y, radius * 0.25, pos.x, pos.y, radius);\n\t\tgrd.addColorStop(0, `rgba(255, 255, 255, 0.2)`);\n\t\tgrd.addColorStop(1, 'rgba(0, 0, 0, 0.0)');\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.fillStyle = grd;\n\t\tthis.ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n\t\tthis.ctx.fill();\n\t}\n}\n","// refer: https://github.com/brunoimbrizi/interactive-particles\n\nimport * as THREE from 'three';\nimport particleVS from './shaders/particle.vs';\nimport particleFS from './shaders/particle.fs';\nimport { ParticleInstance } from 'MODULES/Particle/ParticleInstance';\nimport TouchTexture from './TouchTexture';\n\nexport class ParticleTexture {\n\tconstructor(section, texture, areaBounding) {\n\t\tthis.container = new THREE.Object3D();\n\t\tthis.texture = texture;\n\t\tthis.section = section;\n\t\tthis.layer = section.layers.UI_LAYER;\n\t\tthis.viewer = section.viewer;\n\t\tthis.eventHandler = this.viewer.eventHandler;\n\t\tthis.areaBounding = areaBounding;\n\n\t\tthis.touch = null;\n\t\tthis.mouse = new THREE.Vector2();\n\t\tthis.raycaster = new THREE.Raycaster();\n\t\tthis.raycaster.layers.set(this.layer);\n\t\tthis.intersectsArr = [];\n\t\tthis.camera = section.uiCamera;\n\t\tthis.init(texture);\n\t}\n\n\tinit(texture) {\n\t\tthis.texture = texture;\n\t\tthis.texture.minFilter = THREE.LinearFilter;\n\t\tthis.texture.magFilter = THREE.LinearFilter;\n\t\tthis.texture.format = THREE.RGBFormat;\n\n\t\tthis.width = texture.image.width;\n\t\tthis.height = texture.image.height;\n\t\tthis.initPoints();\n\t\tthis.initHitArea();\n\t\tthis.initTouch();\n\t\tthis.initEvent();\n\t}\n\n\tinitPoints() {\n\t\tthis.numPoints = this.width * this.height;\n\n\t\t// discard pixels darker than threshold #22\n\t\tlet numVisible = 0;\n\t\tlet threshold = 1;\n\t\tlet originalColors;\n\n\t\tconst img = this.texture.image;\n\t\tconst canvas = document.createElement('canvas');\n\t\tconst ctx = canvas.getContext('2d');\n\n\t\tcanvas.width = this.width;\n\t\tcanvas.height = this.height;\n\t\tctx.scale(1, -1);\n\t\tctx.drawImage(img, 0, 0, this.width, this.height * -1);\n\n\t\tconst imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\t\toriginalColors = Float32Array.from(imgData.data);\n\n\t\tfor (let i = 0; i < this.numPoints; i++) {\n\t\t\tif (originalColors[i * 4 + 0] > threshold) numVisible++;\n\t\t}\n\n\t\tconst uniforms = {\n\t\t\tuTime: { value: 0 },\n\t\t\tuRandom: { value: 30.0 },\n\t\t\tuDepth: { value: 0 },\n\t\t\tuSize: { value: 0 }, // hide default\n\t\t\tuTextureSize: { value: new THREE.Vector2(this.width, this.height) },\n\t\t\tuTexture: { value: this.texture },\n\t\t\tuTouch: { value: null }\n\t\t};\n\n\t\tconst material = new THREE.RawShaderMaterial({\n\t\t\tuniforms,\n\t\t\tvertexShader: particleVS,\n\t\t\tfragmentShader: particleFS,\n\t\t\tdepthTest: false,\n\t\t\ttransparent: true\n\t\t\t// blending: THREE.AdditiveBlending\n\t\t});\n\n\t\tthis.instanceMesh = new ParticleInstance(material).mesh;\n\t\tthis.instanceMesh.layers.set(this.layer);\n\t\tconst geometry = this.instanceMesh.geometry;\n\n\t\tconst indices = new Uint16Array(numVisible);\n\t\tconst offsets = new Float32Array(numVisible * 3);\n\t\tconst angles = new Float32Array(numVisible);\n\n\t\tfor (let i = 0, j = 0; i < this.numPoints; i++) {\n\t\t\tif (originalColors[i * 4 + 0] <= threshold) continue;\n\n\t\t\toffsets[j * 3 + 0] = i % this.width;\n\t\t\toffsets[j * 3 + 1] = Math.floor(i / this.width);\n\n\t\t\tindices[j] = i;\n\n\t\t\tangles[j] = Math.random() * Math.PI;\n\n\t\t\tj++;\n\t\t}\n\n\t\tgeometry.setAttribute('pindex', new THREE.InstancedBufferAttribute(indices, 1, false));\n\t\tgeometry.setAttribute('offset', new THREE.InstancedBufferAttribute(offsets, 3, false));\n\t\tgeometry.setAttribute('angle', new THREE.InstancedBufferAttribute(angles, 1, false));\n\n\t\tthis.container.add(this.instanceMesh);\n\t}\n\n\tinitHitArea() {\n\t\tconst geometry = new THREE.PlaneGeometry(this.width, this.height, 1, 1);\n\t\tconst material = new THREE.MeshBasicMaterial({ color: 0xffffff, wireframe: true, depthTest: false });\n\t\tmaterial.visible = false;\n\t\tthis.hitArea = new THREE.Mesh(geometry, material);\n\t\tthis.hitArea.layers.set(this.layer);\n\t\tthis.container.add(this.hitArea);\n\t}\n\n\tinitTouch() {\n\t\t// create only once\n\t\tif (!this.touch) this.touch = new TouchTexture(this);\n\t\tthis.instanceMesh.material.uniforms.uTouch.value = this.touch.texture;\n\t}\n\n\tinitEvent() {\n\t\tthis.intersectsArr.push(this.hitArea);\n\t\tthis.eventHandler.onMouseMoveEvent.bind(this.onMouseMove.bind(this));\n\t}\n\n\tonMouseMove(event) {\n\t\tif (!this.viewer.preloadFinished || !this.section.visible) return;\n\t\tthis.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t\tthis.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\t\t// Bounding optimize hack\n\t\tif (this.areaBounding === 'left' && this.mouse.x > 0) return;\n\t\tif (this.areaBounding === 'right' && this.mouse.x < 0) return;\n\n\t\tthis.raycaster.setFromCamera(this.mouse, this.camera);\n\t\tconst intersects = this.raycaster.intersectObjects(this.intersectsArr);\n\t\tif (intersects.length > 0) {\n\t\t\tconst uv = intersects[0].uv;\n\t\t\tif (this.touch) this.touch.addTouch(uv);\n\t\t}\n\t}\n\n\tupdate(delta) {\n\t\tif (this.touch) this.touch.update();\n\t\tthis.instanceMesh.material.uniforms.uTime.value += delta;\n\t}\n\n\tget material() {\n\t\treturn this.instanceMesh.material;\n\t}\n}\n","export class Particle {\n\tconstructor() {\n\t\tthis.velocity = new Array(3);\n\t\tthis.rotation = new Array(3);\n\t\tthis.position = new Array(3);\n\t\tthis.euler = new Array(3);\n\t\tthis.size = 1.0;\n\t\tthis.alpha = 1.0;\n\t\tthis.zkey = 0.0;\n\t}\n\n\tsetVelocity(vx, vy, vz) {\n\t\tthis.velocity[0] = vx;\n\t\tthis.velocity[1] = vy;\n\t\tthis.velocity[2] = vz;\n\t}\n\n\tsetRotation(rx, ry, rz) {\n\t\tthis.rotation[0] = rx;\n\t\tthis.rotation[1] = ry;\n\t\tthis.rotation[2] = rz;\n\t}\n\n\tsetPosition(nx, ny, nz) {\n\t\tthis.position[0] = nx;\n\t\tthis.position[1] = ny;\n\t\tthis.position[2] = nz;\n\t}\n\n\tsetEulerAngles(rx, ry, rz) {\n\t\tthis.euler[0] = rx;\n\t\tthis.euler[1] = ry;\n\t\tthis.euler[2] = rz;\n\t}\n\n\tsetSize(s) {\n\t\tthis.size = s;\n\t}\n\n\tsetAlpha(a) {\n\t\tthis.alpha = a;\n\t}\n\n\tupdate(dt) {\n\t\tthis.position[0] += this.velocity[0] * dt;\n\t\tthis.position[1] += this.velocity[1] * dt;\n\t\tthis.position[2] += this.velocity[2] * dt;\n\n\t\tthis.euler[0] += this.rotation[0] * dt;\n\t\tthis.euler[1] += this.rotation[1] * dt;\n\t\tthis.euler[2] += this.rotation[2] * dt;\n\t}\n}\n","export default \"#define GLSLIFY 1\\nattribute float aSize;\\nattribute float aAlpha;\\n\\nvarying vec3 vPosition;\\nvarying float vPreAlpha;\\n\\nvoid main() {\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\tgl_PointSize = aSize * (300.0 / - mvPosition.z);\\n\\t\\n\\tvPosition = vec3(mvPosition.xyz);\\n\\tvPreAlpha = aAlpha;\\n}\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nvarying vec3 vPosition;\\nvarying float vPreAlpha;\\n\\nuniform vec3 innerColor;\\nuniform vec3 outerColor;\\n\\n// pos orign r.ab\\nfloat ellipse(vec2 p, vec2 o, vec2 r) { \\n    vec2 lp = (p - o) / r;\\n    return length(lp);\\n}\\n\\nvoid main() {\\n\\tvec2 st = (gl_PointCoord - vec2(0.5, 0.5)) * 2.0; // [-1,1]\\n\\tfloat r = ellipse(st, vec2(0.), vec2(1.));\\n\\tfloat alpha = 1. - r;\\n\\tvec3 col;\\n\\tcol = mix(innerColor, outerColor, r);\\n\\tgl_FragColor = vec4(col, alpha * vPreAlpha);\\n}\";","import * as THREE from 'three';\nimport { Particle } from 'MODULES/Particle/Particle';\nimport vertexShader from './shaders/snow.vs';\nimport fragmentShader from './shaders/snow.fs';\nimport { symmetryRandom } from 'JS/Utils';\n\nexport class ParticleSnow {\n\tconstructor(section) {\n\t\tthis.scene = section.scene;\n\t\tthis.isMobile = section.isMobile;\n\t\tthis.deltaTime = 0;\n\t\tthis.particleControl = {};\n\t\tif(!this.isMobile){\n\t\t\tthis.particleControl.particleNum = 500;\n\t\t\tthis.particleControl.area = [5, 8, 5];\n\t\t}else{\n\t\t\tthis.particleControl.particleNum = 250;\n\t\t\tthis.particleControl.area = [2, 4, 2.5];\n\t\t}\n\t\t// Data\n\t\tthis.geometry = new THREE.BufferGeometry();\n\t\tthis.positions = new Float32Array(this.particleControl.particleNum * 3);\n\t\tthis.sizes = new Float32Array(this.particleControl.particleNum);\n\t\tthis.alphas = new Float32Array(this.particleControl.particleNum);\n\t\tthis.initParticle();\n\t}\n\n\tget mesh() {\n\t\treturn this.points;\n\t}\n\n\tinitParticle() {\n\t\tlet { particleControl } = this;\n\t\tlet { particleNum, area } = particleControl;\n\t\tparticleControl.particles = new Array(particleNum);\n\t\tlet tempVec3 = new THREE.Vector3();\n\t\tlet tempVelocity = 0;\n\t\tfor (let i = 0; i < particleNum; i++) {\n\t\t\tparticleControl.particles[i] = new Particle();\n\t\t\tlet particle = particleControl.particles[i];\n\t\t\t// Init Transform\n\t\t\ttempVec3.x = symmetryRandom() * 0.3 + 0.8;\n\t\t\ttempVec3.y = symmetryRandom() * 0.2 - 1.0;\n\t\t\ttempVec3.z = symmetryRandom() * 0.3 + 0.5;\n\t\t\ttempVec3.normalize();\n\t\t\ttempVelocity = 2.0 + Math.random() * 1.0;\n\t\t\ttempVec3.multiplyScalar(tempVelocity);\n\t\t\t// Velocity\n\t\t\tparticle.setVelocity(tempVec3.x, tempVec3.y, tempVec3.z);\n\t\t\t// Position\n\t\t\tparticle.setPosition(symmetryRandom() * area[0], symmetryRandom() * area[1], symmetryRandom() * area[2]);\n\t\t\t// Size\n\t\t\tparticle.setSize(Math.random() / 5);\n\t\t\t// Alpha\n\t\t\tparticle.setAlpha(Math.random());\n\t\t}\n\t\t// Attributes\n\t\tthis.geometry.setAttribute('position', new THREE.BufferAttribute(this.positions, 3));\n\t\tthis.geometry.setAttribute('aSize', new THREE.BufferAttribute(this.sizes, 1));\n\t\tthis.geometry.setAttribute('aAlpha', new THREE.BufferAttribute(this.alphas, 1));\n\n\t\t// Uniforms\n\t\tthis.uniforms = {\n\t\t\tfar: {\n\t\t\t\ttype: 'f',\n\t\t\t\tvalue: area[2]\n\t\t\t},\n\t\t\tinnerColor: { value: new THREE.Color('#FFFFFF') },\n\t\t\touterColor: { value: new THREE.Color('#EEEEEE') }\n\t\t};\n\t\tthis.points = new THREE.Points(\n\t\t\tthis.geometry,\n\t\t\tnew THREE.ShaderMaterial({\n\t\t\t\tuniforms: this.uniforms,\n\t\t\t\tvertexShader,\n\t\t\t\tfragmentShader,\n\t\t\t\tblending: THREE.AdditiveBlending,\n\t\t\t\ttransparent: true\n\t\t\t})\n\t\t);\n\t\tthis.scene.add(this.points);\n\t}\n\n\t// Cycle Position\n\trepeatPos(particle, area) {\n\t\tfor (let index = 0; index < 3; index++) {\n\t\t\tlet limit = area[index];\n\t\t\tif (Math.abs(particle.position[index]) - particle.size * 0.5 > limit) {\n\t\t\t\t// Out Of Area\n\t\t\t\tif (particle.position[index] > 0) {\n\t\t\t\t\tparticle.position[index] -= limit * 2.0;\n\t\t\t\t} else {\n\t\t\t\t\tparticle.position[index] += limit * 2.0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trenderParticle() {\n\t\tlet { particleNum, area, particles } = this.particleControl;\n\t\t// Update Data\n\t\tfor (let i = 0; i < particleNum; i++) {\n\t\t\tlet particle = particles[i];\n\t\t\tparticle.update(this.deltaTime);\n\t\t\tthis.repeatPos(particle, area);\n\t\t\t// Position\n\t\t\tthis.positions[i * 3] = particle.position[0];\n\t\t\tthis.positions[i * 3 + 1] = particle.position[1];\n\t\t\tthis.positions[i * 3 + 2] = particle.position[2];\n\t\t\t// Size\n\t\t\tthis.sizes[i] = particle.size;\n\t\t\t// Alpha\n\t\t\tthis.alphas[i] = particle.alpha;\n\t\t}\n\t\tthis.geometry.attributes['position'].needsUpdate = true;\n\t\tthis.geometry.attributes['aSize'].needsUpdate = true;\n\t}\n\n\trender(time) {\n\t\tthis.deltaTime = time;\n\t\tthis.renderParticle();\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform sampler2D inputBuffer;\\nuniform float opacity;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\tvec4 texel = texture2D(inputBuffer, vUv);\\n\\tgl_FragColor = opacity * texel;\\n}\\n\";","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\tvUv = uv;\\n\\tgl_Position = vec4(position.xy, 1.0, 1.0);\\n}\\n\";","export default \"#define GLSLIFY 1\\nuniform sampler2D inputBuffer;\\n\\nuniform vec2 resolution;\\n\\nvarying vec2 vUv;\\n\\n// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)\\n//----------------------------------------------------------------------------------\\n// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag\\n// SDK Version: v3.00\\n// Email:       gameworks@nvidia.com\\n// Site:        http://developer.nvidia.com/\\n\\n// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.\\n\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions\\n// are met:\\n//  * Redistributions of source code must retain the above copyright\\n//    notice, this list of conditions and the following disclaimer.\\n//  * Redistributions in binary form must reproduce the above copyright\\n//    notice, this list of conditions and the following disclaimer in the\\n//    documentation and/or other materials provided with the distribution.\\n//  * Neither the name of NVIDIA CORPORATION nor the names of its\\n//    contributors may be used to endorse or promote products derived\\n//    from this software without specific prior written permission.\\n\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\\n// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\n// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\\n// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\\n// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\\n// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\\n// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n//----------------------------------------------------------------------------------\\n\\n#define FXAA_PC 1\\n#define FXAA_GLSL_100 1\\n#define FXAA_QUALITY_PRESET 12\\n\\n#define FXAA_GREEN_AS_LUMA 1\\n\\n/*--------------------------------------------------------------------------*/\\n#ifndef FXAA_PC_CONSOLE\\n    //\\n    // The console algorithm for PC is included\\n    // for developers targeting really low spec machines.\\n    // Likely better to just run FXAA_PC, and use a really low preset.\\n    //\\n    #define FXAA_PC_CONSOLE 0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#ifndef FXAA_GLSL_120\\n    #define FXAA_GLSL_120 0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#ifndef FXAA_GLSL_130\\n    #define FXAA_GLSL_130 0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#ifndef FXAA_HLSL_3\\n    #define FXAA_HLSL_3 0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#ifndef FXAA_HLSL_4\\n    #define FXAA_HLSL_4 0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#ifndef FXAA_HLSL_5\\n    #define FXAA_HLSL_5 0\\n#endif\\n/*==========================================================================*/\\n#ifndef FXAA_GREEN_AS_LUMA\\n    //\\n    // For those using non-linear color,\\n    // and either not able to get luma in alpha, or not wanting to,\\n    // this enables FXAA to run using green as a proxy for luma.\\n    // So with this enabled, no need to pack luma in alpha.\\n    //\\n    // This will turn off AA on anything which lacks some amount of green.\\n    // Pure red and blue or combination of only R and B, will get no AA.\\n    //\\n    // Might want to lower the settings for both,\\n    //    fxaaConsoleEdgeThresholdMin\\n    //    fxaaQualityEdgeThresholdMin\\n    // In order to insure AA does not get turned off on colors\\n    // which contain a minor amount of green.\\n    //\\n    // 1 = On.\\n    // 0 = Off.\\n    //\\n    #define FXAA_GREEN_AS_LUMA 0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#ifndef FXAA_EARLY_EXIT\\n    //\\n    // Controls algorithm's early exit path.\\n    // On PS3 turning this ON adds 2 cycles to the shader.\\n    // On 360 turning this OFF adds 10ths of a millisecond to the shader.\\n    // Turning this off on console will result in a more blurry image.\\n    // So this defaults to on.\\n    //\\n    // 1 = On.\\n    // 0 = Off.\\n    //\\n    #define FXAA_EARLY_EXIT 1\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#ifndef FXAA_DISCARD\\n    //\\n    // Only valid for PC OpenGL currently.\\n    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.\\n    //\\n    // 1 = Use discard on pixels which don't need AA.\\n    //     For APIs which enable concurrent TEX+ROP from same surface.\\n    // 0 = Return unchanged color on pixels which don't need AA.\\n    //\\n    #define FXAA_DISCARD 0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#ifndef FXAA_FAST_PIXEL_OFFSET\\n    //\\n    // Used for GLSL 120 only.\\n    //\\n    // 1 = GL API supports fast pixel offsets\\n    // 0 = do not use fast pixel offsets\\n    //\\n    #ifdef GL_EXT_gpu_shader4\\n        #define FXAA_FAST_PIXEL_OFFSET 1\\n    #endif\\n    #ifdef GL_NV_gpu_shader5\\n        #define FXAA_FAST_PIXEL_OFFSET 1\\n    #endif\\n    #ifdef GL_ARB_gpu_shader5\\n        #define FXAA_FAST_PIXEL_OFFSET 1\\n    #endif\\n    #ifndef FXAA_FAST_PIXEL_OFFSET\\n        #define FXAA_FAST_PIXEL_OFFSET 0\\n    #endif\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#ifndef FXAA_GATHER4_ALPHA\\n    //\\n    // 1 = API supports gather4 on alpha channel.\\n    // 0 = API does not support gather4 on alpha channel.\\n    //\\n    #if (FXAA_HLSL_5 == 1)\\n        #define FXAA_GATHER4_ALPHA 1\\n    #endif\\n    #ifdef GL_ARB_gpu_shader5\\n        #define FXAA_GATHER4_ALPHA 1\\n    #endif\\n    #ifdef GL_NV_gpu_shader5\\n        #define FXAA_GATHER4_ALPHA 1\\n    #endif\\n    #ifndef FXAA_GATHER4_ALPHA\\n        #define FXAA_GATHER4_ALPHA 0\\n    #endif\\n#endif\\n\\n/*============================================================================\\n                        FXAA QUALITY - TUNING KNOBS\\n------------------------------------------------------------------------------\\nNOTE the other tuning knobs are now in the shader function inputs!\\n============================================================================*/\\n#ifndef FXAA_QUALITY_PRESET\\n    //\\n    // Choose the quality preset.\\n    // This needs to be compiled into the shader as it effects code.\\n    // Best option to include multiple presets is to\\n    // in each shader define the preset, then include this file.\\n    //\\n    // OPTIONS\\n    // -----------------------------------------------------------------------\\n    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)\\n    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\\n    // 39       - no dither, very expensive\\n    //\\n    // NOTES\\n    // -----------------------------------------------------------------------\\n    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\\n    // 13 = about same speed as FXAA 3.9 and better than 12\\n    // 23 = closest to FXAA 3.9 visually and performance wise\\n    //  _ = the lowest digit is directly related to performance\\n    // _  = the highest digit is directly related to style\\n    //\\n    #define FXAA_QUALITY_PRESET 12\\n#endif\\n\\n/*============================================================================\\n\\n                           FXAA QUALITY - PRESETS\\n\\n============================================================================*/\\n\\n/*============================================================================\\n                     FXAA QUALITY - MEDIUM DITHER PRESETS\\n============================================================================*/\\n#if (FXAA_QUALITY_PRESET == 10)\\n    #define FXAA_QUALITY_PS 3\\n    #define FXAA_QUALITY_P0 1.5\\n    #define FXAA_QUALITY_P1 3.0\\n    #define FXAA_QUALITY_P2 12.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 11)\\n    #define FXAA_QUALITY_PS 4\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 3.0\\n    #define FXAA_QUALITY_P3 12.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 12)\\n    #define FXAA_QUALITY_PS 5\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 4.0\\n    #define FXAA_QUALITY_P4 12.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 13)\\n    #define FXAA_QUALITY_PS 6\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 4.0\\n    #define FXAA_QUALITY_P5 12.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 14)\\n    #define FXAA_QUALITY_PS 7\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 2.0\\n    #define FXAA_QUALITY_P5 4.0\\n    #define FXAA_QUALITY_P6 12.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 15)\\n    #define FXAA_QUALITY_PS 8\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 2.0\\n    #define FXAA_QUALITY_P5 2.0\\n    #define FXAA_QUALITY_P6 4.0\\n    #define FXAA_QUALITY_P7 12.0\\n#endif\\n\\n/*============================================================================\\n                     FXAA QUALITY - LOW DITHER PRESETS\\n============================================================================*/\\n#if (FXAA_QUALITY_PRESET == 20)\\n    #define FXAA_QUALITY_PS 3\\n    #define FXAA_QUALITY_P0 1.5\\n    #define FXAA_QUALITY_P1 2.0\\n    #define FXAA_QUALITY_P2 8.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 21)\\n    #define FXAA_QUALITY_PS 4\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 8.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 22)\\n    #define FXAA_QUALITY_PS 5\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 8.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 23)\\n    #define FXAA_QUALITY_PS 6\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 2.0\\n    #define FXAA_QUALITY_P5 8.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 24)\\n    #define FXAA_QUALITY_PS 7\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 2.0\\n    #define FXAA_QUALITY_P5 3.0\\n    #define FXAA_QUALITY_P6 8.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 25)\\n    #define FXAA_QUALITY_PS 8\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 2.0\\n    #define FXAA_QUALITY_P5 2.0\\n    #define FXAA_QUALITY_P6 4.0\\n    #define FXAA_QUALITY_P7 8.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 26)\\n    #define FXAA_QUALITY_PS 9\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 2.0\\n    #define FXAA_QUALITY_P5 2.0\\n    #define FXAA_QUALITY_P6 2.0\\n    #define FXAA_QUALITY_P7 4.0\\n    #define FXAA_QUALITY_P8 8.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 27)\\n    #define FXAA_QUALITY_PS 10\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 2.0\\n    #define FXAA_QUALITY_P5 2.0\\n    #define FXAA_QUALITY_P6 2.0\\n    #define FXAA_QUALITY_P7 2.0\\n    #define FXAA_QUALITY_P8 4.0\\n    #define FXAA_QUALITY_P9 8.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 28)\\n    #define FXAA_QUALITY_PS 11\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 2.0\\n    #define FXAA_QUALITY_P5 2.0\\n    #define FXAA_QUALITY_P6 2.0\\n    #define FXAA_QUALITY_P7 2.0\\n    #define FXAA_QUALITY_P8 2.0\\n    #define FXAA_QUALITY_P9 4.0\\n    #define FXAA_QUALITY_P10 8.0\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_QUALITY_PRESET == 29)\\n    #define FXAA_QUALITY_PS 12\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.5\\n    #define FXAA_QUALITY_P2 2.0\\n    #define FXAA_QUALITY_P3 2.0\\n    #define FXAA_QUALITY_P4 2.0\\n    #define FXAA_QUALITY_P5 2.0\\n    #define FXAA_QUALITY_P6 2.0\\n    #define FXAA_QUALITY_P7 2.0\\n    #define FXAA_QUALITY_P8 2.0\\n    #define FXAA_QUALITY_P9 2.0\\n    #define FXAA_QUALITY_P10 4.0\\n    #define FXAA_QUALITY_P11 8.0\\n#endif\\n\\n/*============================================================================\\n                     FXAA QUALITY - EXTREME QUALITY\\n============================================================================*/\\n#if (FXAA_QUALITY_PRESET == 39)\\n    #define FXAA_QUALITY_PS 12\\n    #define FXAA_QUALITY_P0 1.0\\n    #define FXAA_QUALITY_P1 1.0\\n    #define FXAA_QUALITY_P2 1.0\\n    #define FXAA_QUALITY_P3 1.0\\n    #define FXAA_QUALITY_P4 1.0\\n    #define FXAA_QUALITY_P5 1.5\\n    #define FXAA_QUALITY_P6 2.0\\n    #define FXAA_QUALITY_P7 2.0\\n    #define FXAA_QUALITY_P8 2.0\\n    #define FXAA_QUALITY_P9 2.0\\n    #define FXAA_QUALITY_P10 4.0\\n    #define FXAA_QUALITY_P11 8.0\\n#endif\\n\\n/*============================================================================\\n\\n                                API PORTING\\n\\n============================================================================*/\\n#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\\n    #define FxaaBool bool\\n    #define FxaaDiscard discard\\n    #define FxaaFloat float\\n    #define FxaaFloat2 vec2\\n    #define FxaaFloat3 vec3\\n    #define FxaaFloat4 vec4\\n    #define FxaaHalf float\\n    #define FxaaHalf2 vec2\\n    #define FxaaHalf3 vec3\\n    #define FxaaHalf4 vec4\\n    #define FxaaInt2 ivec2\\n    #define FxaaSat(x) clamp(x, 0.0, 1.0)\\n    #define FxaaTex sampler2D\\n#else\\n    #define FxaaBool bool\\n    #define FxaaDiscard clip(-1)\\n    #define FxaaFloat float\\n    #define FxaaFloat2 float2\\n    #define FxaaFloat3 float3\\n    #define FxaaFloat4 float4\\n    #define FxaaHalf half\\n    #define FxaaHalf2 half2\\n    #define FxaaHalf3 half3\\n    #define FxaaHalf4 half4\\n    #define FxaaSat(x) saturate(x)\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_GLSL_100 == 1)\\n  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)\\n  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_GLSL_120 == 1)\\n    // Requires,\\n    //  #version 120\\n    // And at least,\\n    //  #extension GL_EXT_gpu_shader4 : enable\\n    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\\n    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\\n    #if (FXAA_FAST_PIXEL_OFFSET == 1)\\n        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\\n    #else\\n        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\\n    #endif\\n    #if (FXAA_GATHER4_ALPHA == 1)\\n        // use #extension GL_ARB_gpu_shader5 : enable\\n        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\\n        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\\n        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\\n        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\\n    #endif\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_GLSL_130 == 1)\\n    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)\\n    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\\n    #if (FXAA_GATHER4_ALPHA == 1)\\n        // use #extension GL_ARB_gpu_shader5 : enable\\n        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\\n        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\\n        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\\n        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\\n    #endif\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_HLSL_3 == 1)\\n    #define FxaaInt2 float2\\n    #define FxaaTex sampler2D\\n    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\\n    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_HLSL_4 == 1)\\n    #define FxaaInt2 int2\\n    struct FxaaTex { SamplerState smpl; Texture2D tex; };\\n    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\\n    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\\n#endif\\n/*--------------------------------------------------------------------------*/\\n#if (FXAA_HLSL_5 == 1)\\n    #define FxaaInt2 int2\\n    struct FxaaTex { SamplerState smpl; Texture2D tex; };\\n    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\\n    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\\n    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\\n    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\\n    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\\n    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\\n#endif\\n\\n/*============================================================================\\n                   GREEN AS LUMA OPTION SUPPORT FUNCTION\\n============================================================================*/\\n#if (FXAA_GREEN_AS_LUMA == 0)\\n    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\\n#else\\n    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\\n#endif\\n\\n/*============================================================================\\n\\n                             FXAA3 QUALITY - PC\\n\\n============================================================================*/\\n#if (FXAA_PC == 1)\\n/*--------------------------------------------------------------------------*/\\nFxaaFloat4 FxaaPixelShader(\\n    //\\n    // Use noperspective interpolation here (turn off perspective interpolation).\\n    // {xy} = center of pixel\\n    FxaaFloat2 pos,\\n    //\\n    // Used only for FXAA Console, and not used on the 360 version.\\n    // Use noperspective interpolation here (turn off perspective interpolation).\\n    // {xy_} = upper left of pixel\\n    // {_zw} = lower right of pixel\\n    FxaaFloat4 fxaaConsolePosPos,\\n    //\\n    // Input color texture.\\n    // {rgb_} = color in linear or perceptual color space\\n    // if (FXAA_GREEN_AS_LUMA == 0)\\n    //     {__a} = luma in perceptual color space (not linear)\\n    FxaaTex tex,\\n    //\\n    // Only used on the optimized 360 version of FXAA Console.\\n    // For everything but 360, just use the same input here as for tex.\\n    // For 360, same texture, just alias with a 2nd sampler.\\n    // This sampler needs to have an exponent bias of -1.\\n    FxaaTex fxaaConsole360TexExpBiasNegOne,\\n    //\\n    // Only used on the optimized 360 version of FXAA Console.\\n    // For everything but 360, just use the same input here as for tex.\\n    // For 360, same texture, just alias with a 3nd sampler.\\n    // This sampler needs to have an exponent bias of -2.\\n    FxaaTex fxaaConsole360TexExpBiasNegTwo,\\n    //\\n    // Only used on FXAA Quality.\\n    // This must be from a constant/uniform.\\n    // {x_} = 1.0/screenWidthInPixels\\n    // {_y} = 1.0/screenHeightInPixels\\n    FxaaFloat2 fxaaQualityRcpFrame,\\n    //\\n    // Only used on FXAA Console.\\n    // This must be from a constant/uniform.\\n    // This effects sub-pixel AA quality and inversely sharpness.\\n    //   Where N ranges between,\\n    //     N = 0.50 (default)\\n    //     N = 0.33 (sharper)\\n    // {x__} = -N/screenWidthInPixels\\n    // {_y_} = -N/screenHeightInPixels\\n    // {_z_} =  N/screenWidthInPixels\\n    // {__w} =  N/screenHeightInPixels\\n    FxaaFloat4 fxaaConsoleRcpFrameOpt,\\n    //\\n    // Only used on FXAA Console.\\n    // Not used on 360, but used on PS3 and PC.\\n    // This must be from a constant/uniform.\\n    // {x__} = -2.0/screenWidthInPixels\\n    // {_y_} = -2.0/screenHeightInPixels\\n    // {_z_} =  2.0/screenWidthInPixels\\n    // {__w} =  2.0/screenHeightInPixels\\n    FxaaFloat4 fxaaConsoleRcpFrameOpt2,\\n    //\\n    // Only used on FXAA Console.\\n    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\\n    // This must be from a constant/uniform.\\n    // {x__} =  8.0/screenWidthInPixels\\n    // {_y_} =  8.0/screenHeightInPixels\\n    // {_z_} = -4.0/screenWidthInPixels\\n    // {__w} = -4.0/screenHeightInPixels\\n    FxaaFloat4 fxaaConsole360RcpFrameOpt2,\\n    //\\n    // Only used on FXAA Quality.\\n    // This used to be the FXAA_QUALITY_SUBPIX define.\\n    // It is here now to allow easier tuning.\\n    // Choose the amount of sub-pixel aliasing removal.\\n    // This can effect sharpness.\\n    //   1.00 - upper limit (softer)\\n    //   0.75 - default amount of filtering\\n    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)\\n    //   0.25 - almost off\\n    //   0.00 - completely off\\n    FxaaFloat fxaaQualitySubpix,\\n    //\\n    // Only used on FXAA Quality.\\n    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\\n    // It is here now to allow easier tuning.\\n    // The minimum amount of local contrast required to apply algorithm.\\n    //   0.333 - too little (faster)\\n    //   0.250 - low quality\\n    //   0.166 - default\\n    //   0.125 - high quality\\n    //   0.063 - overkill (slower)\\n    FxaaFloat fxaaQualityEdgeThreshold,\\n    //\\n    // Only used on FXAA Quality.\\n    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\\n    // It is here now to allow easier tuning.\\n    // Trims the algorithm from processing darks.\\n    //   0.0833 - upper limit (default, the start of visible unfiltered edges)\\n    //   0.0625 - high quality (faster)\\n    //   0.0312 - visible limit (slower)\\n    // Special notes when using FXAA_GREEN_AS_LUMA,\\n    //   Likely want to set this to zero.\\n    //   As colors that are mostly not-green\\n    //   will appear very dark in the green channel!\\n    //   Tune by looking at mostly non-green content,\\n    //   then start at zero and increase until aliasing is a problem.\\n    FxaaFloat fxaaQualityEdgeThresholdMin,\\n    //\\n    // Only used on FXAA Console.\\n    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\\n    // It is here now to allow easier tuning.\\n    // This does not effect PS3, as this needs to be compiled in.\\n    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\\n    //   Due to the PS3 being ALU bound,\\n    //   there are only three safe values here: 2 and 4 and 8.\\n    //   These options use the shaders ability to a free *|/ by 2|4|8.\\n    // For all other platforms can be a non-power of two.\\n    //   8.0 is sharper (default!!!)\\n    //   4.0 is softer\\n    //   2.0 is really soft (good only for vector graphics inputs)\\n    FxaaFloat fxaaConsoleEdgeSharpness,\\n    //\\n    // Only used on FXAA Console.\\n    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\\n    // It is here now to allow easier tuning.\\n    // This does not effect PS3, as this needs to be compiled in.\\n    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\\n    //   Due to the PS3 being ALU bound,\\n    //   there are only two safe values here: 1/4 and 1/8.\\n    //   These options use the shaders ability to a free *|/ by 2|4|8.\\n    // The console setting has a different mapping than the quality setting.\\n    // Other platforms can use other values.\\n    //   0.125 leaves less aliasing, but is softer (default!!!)\\n    //   0.25 leaves more aliasing, and is sharper\\n    FxaaFloat fxaaConsoleEdgeThreshold,\\n    //\\n    // Only used on FXAA Console.\\n    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\\n    // It is here now to allow easier tuning.\\n    // Trims the algorithm from processing darks.\\n    // The console setting has a different mapping than the quality setting.\\n    // This only applies when FXAA_EARLY_EXIT is 1.\\n    // This does not apply to PS3,\\n    // PS3 was simplified to avoid more shader instructions.\\n    //   0.06 - faster but more aliasing in darks\\n    //   0.05 - default\\n    //   0.04 - slower and less aliasing in darks\\n    // Special notes when using FXAA_GREEN_AS_LUMA,\\n    //   Likely want to set this to zero.\\n    //   As colors that are mostly not-green\\n    //   will appear very dark in the green channel!\\n    //   Tune by looking at mostly non-green content,\\n    //   then start at zero and increase until aliasing is a problem.\\n    FxaaFloat fxaaConsoleEdgeThresholdMin,\\n    //\\n    // Extra constants for 360 FXAA Console only.\\n    // Use zeros or anything else for other platforms.\\n    // These must be in physical constant registers and NOT immediates.\\n    // Immediates will result in compiler un-optimizing.\\n    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\\n    FxaaFloat4 fxaaConsole360ConstDir\\n) {\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat2 posM;\\n    posM.x = pos.x;\\n    posM.y = pos.y;\\n    #if (FXAA_GATHER4_ALPHA == 1)\\n        #if (FXAA_DISCARD == 0)\\n            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\\n            #if (FXAA_GREEN_AS_LUMA == 0)\\n                #define lumaM rgbyM.w\\n            #else\\n                #define lumaM rgbyM.y\\n            #endif\\n        #endif\\n        #if (FXAA_GREEN_AS_LUMA == 0)\\n            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\\n            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\\n        #else\\n            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\\n            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\\n        #endif\\n        #if (FXAA_DISCARD == 1)\\n            #define lumaM luma4A.w\\n        #endif\\n        #define lumaE luma4A.z\\n        #define lumaS luma4A.x\\n        #define lumaSE luma4A.y\\n        #define lumaNW luma4B.w\\n        #define lumaN luma4B.z\\n        #define lumaW luma4B.x\\n    #else\\n        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\\n        #if (FXAA_GREEN_AS_LUMA == 0)\\n            #define lumaM rgbyM.w\\n        #else\\n            #define lumaM rgbyM.y\\n        #endif\\n        #if (FXAA_GLSL_100 == 1)\\n          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\\n        #else\\n          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\\n        #endif\\n    #endif\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat maxSM = max(lumaS, lumaM);\\n    FxaaFloat minSM = min(lumaS, lumaM);\\n    FxaaFloat maxESM = max(lumaE, maxSM);\\n    FxaaFloat minESM = min(lumaE, minSM);\\n    FxaaFloat maxWN = max(lumaN, lumaW);\\n    FxaaFloat minWN = min(lumaN, lumaW);\\n    FxaaFloat rangeMax = max(maxWN, maxESM);\\n    FxaaFloat rangeMin = min(minWN, minESM);\\n    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\\n    FxaaFloat range = rangeMax - rangeMin;\\n    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\\n    FxaaBool earlyExit = range < rangeMaxClamped;\\n/*--------------------------------------------------------------------------*/\\n    if(earlyExit)\\n        #if (FXAA_DISCARD == 1)\\n            FxaaDiscard;\\n        #else\\n            return rgbyM;\\n        #endif\\n/*--------------------------------------------------------------------------*/\\n    #if (FXAA_GATHER4_ALPHA == 0)\\n        #if (FXAA_GLSL_100 == 1)\\n          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\\n        #else\\n          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\\n          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\\n        #endif\\n    #else\\n        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\\n        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\\n    #endif\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat lumaNS = lumaN + lumaS;\\n    FxaaFloat lumaWE = lumaW + lumaE;\\n    FxaaFloat subpixRcpRange = 1.0/range;\\n    FxaaFloat subpixNSWE = lumaNS + lumaWE;\\n    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\\n    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat lumaNESE = lumaNE + lumaSE;\\n    FxaaFloat lumaNWNE = lumaNW + lumaNE;\\n    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\\n    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat lumaNWSW = lumaNW + lumaSW;\\n    FxaaFloat lumaSWSE = lumaSW + lumaSE;\\n    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\\n    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\\n    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\\n    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\\n    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\\n    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\\n    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;\\n    FxaaBool horzSpan = edgeHorz >= edgeVert;\\n    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\\n/*--------------------------------------------------------------------------*/\\n    if(!horzSpan) lumaN = lumaW;\\n    if(!horzSpan) lumaS = lumaE;\\n    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\\n    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat gradientN = lumaN - lumaM;\\n    FxaaFloat gradientS = lumaS - lumaM;\\n    FxaaFloat lumaNN = lumaN + lumaM;\\n    FxaaFloat lumaSS = lumaS + lumaM;\\n    FxaaBool pairN = abs(gradientN) >= abs(gradientS);\\n    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));\\n    if(pairN) lengthSign = -lengthSign;\\n    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat2 posB;\\n    posB.x = posM.x;\\n    posB.y = posM.y;\\n    FxaaFloat2 offNP;\\n    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\\n    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\\n    if(!horzSpan) posB.x += lengthSign * 0.5;\\n    if( horzSpan) posB.y += lengthSign * 0.5;\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat2 posN;\\n    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\\n    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\\n    FxaaFloat2 posP;\\n    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\\n    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\\n    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\\n    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\\n    FxaaFloat subpixE = subpixC * subpixC;\\n    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\\n/*--------------------------------------------------------------------------*/\\n    if(!pairN) lumaNN = lumaSS;\\n    FxaaFloat gradientScaled = gradient * 1.0/4.0;\\n    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;\\n    FxaaFloat subpixF = subpixD * subpixE;\\n    FxaaBool lumaMLTZero = lumaMM < 0.0;\\n/*--------------------------------------------------------------------------*/\\n    lumaEndN -= lumaNN * 0.5;\\n    lumaEndP -= lumaNN * 0.5;\\n    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;\\n    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;\\n    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\\n    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\\n    FxaaBool doneNP = (!doneN) || (!doneP);\\n    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\\n    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\\n/*--------------------------------------------------------------------------*/\\n    if(doneNP) {\\n        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n        doneN = abs(lumaEndN) >= gradientScaled;\\n        doneP = abs(lumaEndP) >= gradientScaled;\\n        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\\n        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\\n        doneNP = (!doneN) || (!doneP);\\n        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\\n        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\\n/*--------------------------------------------------------------------------*/\\n        #if (FXAA_QUALITY_PS > 3)\\n        if(doneNP) {\\n            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n            doneN = abs(lumaEndN) >= gradientScaled;\\n            doneP = abs(lumaEndP) >= gradientScaled;\\n            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\\n            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\\n            doneNP = (!doneN) || (!doneP);\\n            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\\n            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\\n/*--------------------------------------------------------------------------*/\\n            #if (FXAA_QUALITY_PS > 4)\\n            if(doneNP) {\\n                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n                doneN = abs(lumaEndN) >= gradientScaled;\\n                doneP = abs(lumaEndP) >= gradientScaled;\\n                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\\n                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\\n                doneNP = (!doneN) || (!doneP);\\n                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\\n                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\\n/*--------------------------------------------------------------------------*/\\n                #if (FXAA_QUALITY_PS > 5)\\n                if(doneNP) {\\n                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n                    doneN = abs(lumaEndN) >= gradientScaled;\\n                    doneP = abs(lumaEndP) >= gradientScaled;\\n                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\\n                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\\n                    doneNP = (!doneN) || (!doneP);\\n                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\\n                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\\n/*--------------------------------------------------------------------------*/\\n                    #if (FXAA_QUALITY_PS > 6)\\n                    if(doneNP) {\\n                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n                        doneN = abs(lumaEndN) >= gradientScaled;\\n                        doneP = abs(lumaEndP) >= gradientScaled;\\n                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\\n                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\\n                        doneNP = (!doneN) || (!doneP);\\n                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\\n                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\\n/*--------------------------------------------------------------------------*/\\n                        #if (FXAA_QUALITY_PS > 7)\\n                        if(doneNP) {\\n                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n                            doneN = abs(lumaEndN) >= gradientScaled;\\n                            doneP = abs(lumaEndP) >= gradientScaled;\\n                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\\n                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\\n                            doneNP = (!doneN) || (!doneP);\\n                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\\n                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\\n/*--------------------------------------------------------------------------*/\\n    #if (FXAA_QUALITY_PS > 8)\\n    if(doneNP) {\\n        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n        doneN = abs(lumaEndN) >= gradientScaled;\\n        doneP = abs(lumaEndP) >= gradientScaled;\\n        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\\n        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\\n        doneNP = (!doneN) || (!doneP);\\n        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\\n        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\\n/*--------------------------------------------------------------------------*/\\n        #if (FXAA_QUALITY_PS > 9)\\n        if(doneNP) {\\n            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n            doneN = abs(lumaEndN) >= gradientScaled;\\n            doneP = abs(lumaEndP) >= gradientScaled;\\n            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\\n            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\\n            doneNP = (!doneN) || (!doneP);\\n            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\\n            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\\n/*--------------------------------------------------------------------------*/\\n            #if (FXAA_QUALITY_PS > 10)\\n            if(doneNP) {\\n                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n                doneN = abs(lumaEndN) >= gradientScaled;\\n                doneP = abs(lumaEndP) >= gradientScaled;\\n                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\\n                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\\n                doneNP = (!doneN) || (!doneP);\\n                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\\n                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\\n/*--------------------------------------------------------------------------*/\\n                #if (FXAA_QUALITY_PS > 11)\\n                if(doneNP) {\\n                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n                    doneN = abs(lumaEndN) >= gradientScaled;\\n                    doneP = abs(lumaEndP) >= gradientScaled;\\n                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\\n                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\\n                    doneNP = (!doneN) || (!doneP);\\n                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\\n                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\\n/*--------------------------------------------------------------------------*/\\n                    #if (FXAA_QUALITY_PS > 12)\\n                    if(doneNP) {\\n                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\\n                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\\n                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n                        doneN = abs(lumaEndN) >= gradientScaled;\\n                        doneP = abs(lumaEndP) >= gradientScaled;\\n                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\\n                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\\n                        doneNP = (!doneN) || (!doneP);\\n                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\\n                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\\n/*--------------------------------------------------------------------------*/\\n                    }\\n                    #endif\\n/*--------------------------------------------------------------------------*/\\n                }\\n                #endif\\n/*--------------------------------------------------------------------------*/\\n            }\\n            #endif\\n/*--------------------------------------------------------------------------*/\\n        }\\n        #endif\\n/*--------------------------------------------------------------------------*/\\n    }\\n    #endif\\n/*--------------------------------------------------------------------------*/\\n                        }\\n                        #endif\\n/*--------------------------------------------------------------------------*/\\n                    }\\n                    #endif\\n/*--------------------------------------------------------------------------*/\\n                }\\n                #endif\\n/*--------------------------------------------------------------------------*/\\n            }\\n            #endif\\n/*--------------------------------------------------------------------------*/\\n        }\\n        #endif\\n/*--------------------------------------------------------------------------*/\\n    }\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat dstN = posM.x - posN.x;\\n    FxaaFloat dstP = posP.x - posM.x;\\n    if(!horzSpan) dstN = posM.y - posN.y;\\n    if(!horzSpan) dstP = posP.y - posM.y;\\n/*--------------------------------------------------------------------------*/\\n    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\\n    FxaaFloat spanLength = (dstP + dstN);\\n    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\\n    FxaaFloat spanLengthRcp = 1.0/spanLength;\\n/*--------------------------------------------------------------------------*/\\n    FxaaBool directionN = dstN < dstP;\\n    FxaaFloat dst = min(dstN, dstP);\\n    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\\n    FxaaFloat subpixG = subpixF * subpixF;\\n    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\\n    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;\\n/*--------------------------------------------------------------------------*/\\n    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\\n    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\\n    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\\n    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\\n    #if (FXAA_DISCARD == 1)\\n        return FxaaTexTop(tex, posM);\\n    #else\\n        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\\n    #endif\\n}\\n/*==========================================================================*/\\n#endif\\n\\nvoid main() {\\n  gl_FragColor = FxaaPixelShader(\\n    vUv,\\n    vec4(0.0),\\n    inputBuffer,\\n    inputBuffer,\\n    inputBuffer,\\n    resolution,\\n    vec4(0.0),\\n    vec4(0.0),\\n    vec4(0.0),\\n    0.75,\\n    0.166,\\n    0.0833,\\n    0.0,\\n    0.0,\\n    0.0,\\n    vec4(0.0)\\n  );\\n\\n  // TODO avoid querying texture twice for same texel\\n  gl_FragColor.a = texture2D(inputBuffer, vUv).a;\\n}\";","import { ShaderMaterial, Uniform } from 'three';\nimport fragmentShader from './shaders/copy/shader.fs';\nimport vertexShader from './shaders/common/shader.vs';\n\nexport class CopyMaterial extends ShaderMaterial {\n\tconstructor() {\n\t\tsuper({\n\t\t\ttype: 'CopyMaterial',\n\n\t\t\tuniforms: {\n\t\t\t\tinputBuffer: new Uniform(null),\n\t\t\t\topacity: new Uniform(1.0)\n\t\t\t},\n\n\t\t\tfragmentShader,\n\t\t\tvertexShader,\n\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false\n\t\t});\n\t}\n}\n","import { ShaderMaterial, Uniform, Vector2 } from 'three';\nimport fragmentShader from './shaders/fxaa/shader.fs';\nimport vertexShader from './shaders/common/shader.vs';\n\nexport class FXAAMaterial extends ShaderMaterial {\n\tconstructor() {\n\t\tsuper({\n\t\t\ttype: 'FXAAMaterial',\n\n\t\t\tuniforms: {\n\t\t\t\tinputBuffer: new Uniform(null),\n\t\t\t\tresolution: { value: new Vector2(1 / window.innerWidth, 1 / window.innerHeight) }\n\t\t\t},\n\n\t\t\tfragmentShader,\n\t\t\tvertexShader,\n\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false\n\t\t});\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform sampler2D inputBuffer;\\nuniform sampler2D perturbationMap;\\n\\nuniform bool active;\\nuniform float columns;\\nuniform float random;\\nuniform vec2 seed;\\nuniform vec2 distortion;\\n\\nvarying vec2 vUv;\\n\\nfloat rand(vec2 co){\\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\n\\nvoid main() {\\n\\tvec2 uv = vUv;\\n\\tif(active) {\\n\\t\\t// Columns effect\\n\\t\\tif(uv.y < distortion.x + columns && uv.y > distortion.x - columns * random) {\\n\\t\\t\\tfloat sx = clamp(ceil(seed.x), 0.0, 1.0);\\n\\t\\t\\tuv.y = sx * (1.0 - (uv.y + distortion.y)) + (1.0 - sx) * distortion.y;\\n\\t\\t}\\n\\t\\tif(uv.x < distortion.y + columns && uv.x > distortion.y - columns * random) {\\n\\t\\t\\tfloat sy = clamp(ceil(seed.y), 0.0, 1.0);\\n\\t\\t\\tuv.x = sy * distortion.x + (1.0 - sy) * (1.0 - (uv.x + distortion.x));\\n\\t\\t}\\n\\n\\t\\t// RGB shift effect\\n\\t\\t// Todo: Offset\\n\\t\\tvec2 normal = texture2D(perturbationMap, uv * random * random).rg;\\n\\t\\tuv += normal * seed * (random * 0.2);\\n\\n\\t\\t// Snow noise effect\\n\\t\\t// float amount = 1.;\\n\\t\\t// float xs = floor(gl_FragCoord.x / 0.5);\\n\\t\\t// float ys = floor(gl_FragCoord.y / 0.5);\\n\\t\\t// vec4 snow = amount*vec4(rand(vec2(xs * random,ys * random*50.))*0.2);\\n\\t}\\n\\t\\n\\tgl_FragColor = texture2D(inputBuffer, uv);\\n\\t// gl_FragColor = gl_FragColor + snow;\\n}\\n\";","export default \"#define GLSLIFY 1\\nuniform sampler2D inputBuffer;\\nuniform float offset;\\nuniform float darkness;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\tvec2 uv = vUv;\\n\\tconst vec2 center = vec2(0.5);\\n\\tvec4 texel = texture2D(inputBuffer, vUv);\\n\\tvec3 color = texel.rgb;\\n\\n\\t#ifdef ESKIL\\n\\t// Eskil's vignette\\n\\tvec2 coord = (uv - center) * vec2(offset);\\n\\tcolor = mix(color, vec3(1.0 - darkness), dot(coord, coord));\\n\\t#else\\n\\t// alternative version from glfx.js\\n\\t// this one makes more \\\"dusty\\\" look (as opposed to \\\"burned\\\")\\n\\tfloat d = distance(uv, center);\\n\\tcolor *= smoothstep(0.8, offset * 0.799, d * (darkness + offset));\\n\\t#endif\\n\\t\\n\\tgl_FragColor = vec4(color, texel.a);\\n}\\n\";","import { ShaderMaterial, Uniform, Vector2, DataTexture, RGBFormat } from 'three';\nimport fragmentShader from './shaders/glitch/shader.fs';\nimport vertexShader from './shaders/common/shader.vs';\nimport { randomFloat } from 'JS/Utils';\n\nexport class GlitchMaterial extends ShaderMaterial {\n\tconstructor({ dtSize = 64 } = {}) {\n\t\tsuper({\n\t\t\ttype: 'GlitchMaterial',\n\n\t\t\tuniforms: {\n\t\t\t\tinputBuffer: new Uniform(null),\n\t\t\t\tactive: new Uniform(false),\n\t\t\t\tperturbationMap: new Uniform(null),\n\t\t\t\tcolumns: new Uniform(0.015),\n\t\t\t\trandom: new Uniform(0.01),\n\t\t\t\tseed: new Uniform(new Vector2()),\n\t\t\t\tdistortion: new Uniform(new Vector2())\n\t\t\t},\n\n\t\t\tfragmentShader,\n\t\t\tvertexShader,\n\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false\n\t\t});\n\n\t\tlet map = this.generatePerturbationMap(dtSize);\n\t\tthis.uniforms.perturbationMap.value = map;\n\t}\n\n\tget active() {\n\t\treturn this.uniforms.active.value;\n\t}\n\n\tset active(val) {\n\t\tthis.uniforms.active.value = val;\n\t}\n\n\tgeneratePerturbationMap(size = 64) {\n\t\tconst pixels = size * size;\n\t\tconst data = new Uint8Array(pixels * 3);\n\n\t\tlet i, l, x;\n\t\tfor (i = 0, l = data.length; i < l; i += 3) {\n\t\t\tx = Math.random() * 255;\n\t\t\tdata[i] = x;\n\t\t\tdata[i + 1] = x;\n\t\t\tdata[i + 2] = x;\n\t\t}\n\n\t\tconst map = new DataTexture(data, size, size, RGBFormat);\n\t\tmap.needsUpdate = true;\n\n\t\treturn map;\n\t}\n\n\tupdate() {\n\t\tif (!this.active) return;\n\n\t\tthis.uniforms.random.value = Math.random();\n\t\tthis.uniforms.seed.value.set(randomFloat(-1, 1), randomFloat(-1, 1));\n\t\tthis.uniforms.distortion.value.set(randomFloat(0.0, 1.0), randomFloat(0.0, 1.0));\n\t}\n}\n","import { ShaderMaterial, Uniform } from 'three';\nimport fragmentShader from './shaders/vignette/shader.fs';\nimport vertexShader from './shaders/common/shader.vs';\n\nexport class VignetteMaterial extends ShaderMaterial {\n\tconstructor({ offset = 0.5, darkness = 0.5, eskil = false } = {}) {\n\t\tsuper({\n\t\t\ttype: 'VignetteMaterial',\n\n\t\t\tuniforms: {\n\t\t\t\tinputBuffer: new Uniform(null),\n\t\t\t\toffset: new Uniform(offset),\n\t\t\t\tdarkness: new Uniform(darkness)\n\t\t\t},\n\n\t\t\tfragmentShader,\n\t\t\tvertexShader,\n\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false\n\t\t});\n\n\t\tif (eskil) this.defines['ESKIL'] = 1;\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform sampler2D inputBuffer;\\nuniform vec2 resolution;\\nuniform vec2 direction;\\n\\nvarying vec2 vUv;\\n\\n//https://github.com/Jam3/glsl-fast-gaussian-blur\\nvec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.3333333333333333) * direction;\\n  color += texture2D(image, uv) * 0.29411764705882354;\\n  color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\\n  color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\\n  return color;\\n}\\n\\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.3846153846) * direction;\\n  vec2 off2 = vec2(3.2307692308) * direction;\\n  color += texture2D(image, uv) * 0.2270270270;\\n  color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\\n  color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\\n  return color;\\n}\\n\\nvec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.411764705882353) * direction;\\n  vec2 off2 = vec2(3.2941176470588234) * direction;\\n  vec2 off3 = vec2(5.176470588235294) * direction;\\n  color += texture2D(image, uv) * 0.1964825501511404;\\n  color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\\n  color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\\n  color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\\n  color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\\n  color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\\n  color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\\n  return color;\\n}\\n\\nvoid main() {\\n   gl_FragColor = blur9(inputBuffer, vUv, resolution, direction);\\n}\";","import { ShaderMaterial, Uniform, Vector2 } from 'three';\nimport fragmentShader from './shaders/blur/shader.fs';\nimport vertexShader from './shaders/common/shader.vs';\n\nexport class BlurMaterial extends ShaderMaterial {\n\tconstructor({ direction = new Vector2(0, 1) } = {}) {\n\t\tsuper({\n\t\t\ttype: 'BlurMaterial',\n\n\t\t\tuniforms: {\n\t\t\t\tinputBuffer: new Uniform(null),\n\t\t\t\tresolution: new Uniform(new Vector2(window.innerWidth, window.innerHeight)),\n\t\t\t\tdirection: new Uniform(direction)\n\t\t\t},\n\n\t\t\tfragmentShader,\n\t\t\tvertexShader,\n\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false\n\t\t});\n\t}\n\n\tresize(width, height) {\n\t\tthis.material.uniforms.resolution.value.set(width, height);\n\t}\n}\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function (object, domElement) {\n\tif (domElement === undefined)\n\t\tconsole.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n\tif (domElement === document)\n\t\tconsole.error(\n\t\t\t'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n\t\t);\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = -Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\t\treturn spherical.phi;\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\t\treturn spherical.theta;\n\t};\n\n\tthis.saveState = function () {\n\t\tscope.target0.copy(scope.target);\n\t\tscope.position0.copy(scope.object.position);\n\t\tscope.zoom0 = scope.object.zoom;\n\t};\n\n\tthis.reset = function () {\n\t\tscope.target.copy(scope.target0);\n\t\tscope.object.position.copy(scope.position0);\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent(changeEvent);\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = (function () {\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\treturn function update() {\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy(position).sub(scope.target);\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion(quat);\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3(offset);\n\n\t\t\tif (scope.autoRotate && state === STATE.NONE) {\n\t\t\t\trotateLeft(getAutoRotationAngle());\n\t\t\t}\n\n\t\t\tif (scope.enableDamping) {\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\t\t\t} else {\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta));\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n\n\t\t\tspherical.makeSafe();\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n\t\t\t// move target to panned location\n\n\t\t\tif (scope.enableDamping === true) {\n\t\t\t\tscope.target.addScaledVector(panOffset, scope.dampingFactor);\n\t\t\t} else {\n\t\t\t\tscope.target.add(panOffset);\n\t\t\t}\n\n\t\t\toffset.setFromSpherical(spherical);\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion(quatInverse);\n\n\t\t\tposition.copy(scope.target).add(offset);\n\n\t\t\tscope.object.lookAt(scope.target);\n\n\t\t\tif (scope.enableDamping === true) {\n\t\t\t\tsphericalDelta.theta *= 1 - scope.dampingFactor;\n\t\t\t\tsphericalDelta.phi *= 1 - scope.dampingFactor;\n\n\t\t\t\tpanOffset.multiplyScalar(1 - scope.dampingFactor);\n\t\t\t} else {\n\t\t\t\tsphericalDelta.set(0, 0, 0);\n\n\t\t\t\tpanOffset.set(0, 0, 0);\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif (\n\t\t\t\tzoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared(scope.object.position) > EPS ||\n\t\t\t\t8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n\t\t\t) {\n\t\t\t\tscope.dispatchEvent(changeEvent);\n\n\t\t\t\tlastPosition.copy(scope.object.position);\n\t\t\t\tlastQuaternion.copy(scope.object.quaternion);\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\t})();\n\n\tthis.dispose = function () {\n\t\tscope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n\t\tscope.domElement.removeEventListener('mousedown', onMouseDown, false);\n\t\tscope.domElement.removeEventListener('wheel', onMouseWheel, false);\n\n\t\tscope.domElement.removeEventListener('touchstart', onTouchStart, false);\n\t\tscope.domElement.removeEventListener('touchend', onTouchEnd, false);\n\t\tscope.domElement.removeEventListener('touchmove', onTouchMove, false);\n\n\t\tdocument.removeEventListener('mousemove', onMouseMove, false);\n\t\tdocument.removeEventListener('mouseup', onMouseUp, false);\n\n\t\tscope.domElement.removeEventListener('keydown', onKeyDown, false);\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: -1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\t\treturn ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n\t}\n\n\tfunction getZoomScale() {\n\t\treturn Math.pow(0.95, scope.zoomSpeed);\n\t}\n\n\tfunction rotateLeft(angle) {\n\t\tsphericalDelta.theta -= angle;\n\t}\n\n\tfunction rotateUp(angle) {\n\t\tsphericalDelta.phi -= angle;\n\t}\n\n\tvar panLeft = (function () {\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft(distance, objectMatrix) {\n\t\t\tv.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\t\t\tv.multiplyScalar(-distance);\n\n\t\t\tpanOffset.add(v);\n\t\t};\n\t})();\n\n\tvar panUp = (function () {\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp(distance, objectMatrix) {\n\t\t\tif (scope.screenSpacePanning === true) {\n\t\t\t\tv.setFromMatrixColumn(objectMatrix, 1);\n\t\t\t} else {\n\t\t\t\tv.setFromMatrixColumn(objectMatrix, 0);\n\t\t\t\tv.crossVectors(scope.object.up, v);\n\t\t\t}\n\n\t\t\tv.multiplyScalar(distance);\n\n\t\t\tpanOffset.add(v);\n\t\t};\n\t})();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = (function () {\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan(deltaX, deltaY) {\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif (scope.object.isPerspectiveCamera) {\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy(position).sub(scope.target);\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0);\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft((2 * deltaX * targetDistance) / element.clientHeight, scope.object.matrix);\n\t\t\t\tpanUp((2 * deltaY * targetDistance) / element.clientHeight, scope.object.matrix);\n\t\t\t} else if (scope.object.isOrthographicCamera) {\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft(\n\t\t\t\t\t(deltaX * (scope.object.right - scope.object.left)) / scope.object.zoom / element.clientWidth,\n\t\t\t\t\tscope.object.matrix\n\t\t\t\t);\n\t\t\t\tpanUp(\n\t\t\t\t\t(deltaY * (scope.object.top - scope.object.bottom)) / scope.object.zoom / element.clientHeight,\n\t\t\t\t\tscope.object.matrix\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n\t\t\t\tscope.enablePan = false;\n\t\t\t}\n\t\t};\n\t})();\n\n\tfunction dollyIn(dollyScale) {\n\t\tif (scope.object.isPerspectiveCamera) {\n\t\t\tscale /= dollyScale;\n\t\t} else if (scope.object.isOrthographicCamera) {\n\t\t\tscope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\t\t} else {\n\t\t\tconsole.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n\t\t\tscope.enableZoom = false;\n\t\t}\n\t}\n\n\tfunction dollyOut(dollyScale) {\n\t\tif (scope.object.isPerspectiveCamera) {\n\t\t\tscale *= dollyScale;\n\t\t} else if (scope.object.isOrthographicCamera) {\n\t\t\tscope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\t\t} else {\n\t\t\tconsole.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n\t\t\tscope.enableZoom = false;\n\t\t}\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate(event) {\n\t\trotateStart.set(event.clientX, event.clientY);\n\t}\n\n\tfunction handleMouseDownDolly(event) {\n\t\tdollyStart.set(event.clientX, event.clientY);\n\t}\n\n\tfunction handleMouseDownPan(event) {\n\t\tpanStart.set(event.clientX, event.clientY);\n\t}\n\n\tfunction handleMouseMoveRotate(event) {\n\t\trotateEnd.set(event.clientX, event.clientY);\n\n\t\trotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n\t\trotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n\t\trotateStart.copy(rotateEnd);\n\n\t\tscope.update();\n\t}\n\n\tfunction handleMouseMoveDolly(event) {\n\t\tdollyEnd.set(event.clientX, event.clientY);\n\n\t\tdollyDelta.subVectors(dollyEnd, dollyStart);\n\n\t\tif (dollyDelta.y > 0) {\n\t\t\tdollyIn(getZoomScale());\n\t\t} else if (dollyDelta.y < 0) {\n\t\t\tdollyOut(getZoomScale());\n\t\t}\n\n\t\tdollyStart.copy(dollyEnd);\n\n\t\tscope.update();\n\t}\n\n\tfunction handleMouseMovePan(event) {\n\t\tpanEnd.set(event.clientX, event.clientY);\n\n\t\tpanDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n\t\tpan(panDelta.x, panDelta.y);\n\n\t\tpanStart.copy(panEnd);\n\n\t\tscope.update();\n\t}\n\n\tfunction handleMouseUp(/*event*/) {\n\t\t// no-op\n\t}\n\n\tfunction handleMouseWheel(event) {\n\t\tif (event.deltaY < 0) {\n\t\t\tdollyOut(getZoomScale());\n\t\t} else if (event.deltaY > 0) {\n\t\t\tdollyIn(getZoomScale());\n\t\t}\n\n\t\tscope.update();\n\t}\n\n\tfunction handleKeyDown(event) {\n\t\tvar needsUpdate = false;\n\n\t\tswitch (event.keyCode) {\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan(0, scope.keyPanSpeed);\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan(0, -scope.keyPanSpeed);\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan(scope.keyPanSpeed, 0);\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan(-scope.keyPanSpeed, 0);\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (needsUpdate) {\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\t\t}\n\t}\n\n\tfunction handleTouchStartRotate(event) {\n\t\tif (event.touches.length == 1) {\n\t\t\trotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t} else {\n\t\t\tvar x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n\t\t\tvar y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n\t\t\trotateStart.set(x, y);\n\t\t}\n\t}\n\n\tfunction handleTouchStartPan(event) {\n\t\tif (event.touches.length == 1) {\n\t\t\tpanStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t} else {\n\t\t\tvar x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n\t\t\tvar y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n\t\t\tpanStart.set(x, y);\n\t\t}\n\t}\n\n\tfunction handleTouchStartDolly(event) {\n\t\tvar dx = event.touches[0].pageX - event.touches[1].pageX;\n\t\tvar dy = event.touches[0].pageY - event.touches[1].pageY;\n\n\t\tvar distance = Math.sqrt(dx * dx + dy * dy);\n\n\t\tdollyStart.set(0, distance);\n\t}\n\n\tfunction handleTouchStartDollyPan(event) {\n\t\tif (scope.enableZoom) handleTouchStartDolly(event);\n\n\t\tif (scope.enablePan) handleTouchStartPan(event);\n\t}\n\n\tfunction handleTouchStartDollyRotate(event) {\n\t\tif (scope.enableZoom) handleTouchStartDolly(event);\n\n\t\tif (scope.enableRotate) handleTouchStartRotate(event);\n\t}\n\n\tfunction handleTouchMoveRotate(event) {\n\t\tif (event.touches.length == 1) {\n\t\t\trotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t} else {\n\t\t\tvar x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n\t\t\tvar y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n\t\t\trotateEnd.set(x, y);\n\t\t}\n\n\t\trotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n\t\trotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n\t\trotateStart.copy(rotateEnd);\n\t}\n\n\tfunction handleTouchMovePan(event) {\n\t\tif (event.touches.length == 1) {\n\t\t\tpanEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t} else {\n\t\t\tvar x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n\t\t\tvar y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n\t\t\tpanEnd.set(x, y);\n\t\t}\n\n\t\tpanDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n\t\tpan(panDelta.x, panDelta.y);\n\n\t\tpanStart.copy(panEnd);\n\t}\n\n\tfunction handleTouchMoveDolly(event) {\n\t\tvar dx = event.touches[0].pageX - event.touches[1].pageX;\n\t\tvar dy = event.touches[0].pageY - event.touches[1].pageY;\n\n\t\tvar distance = Math.sqrt(dx * dx + dy * dy);\n\n\t\tdollyEnd.set(0, distance);\n\n\t\tdollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n\n\t\tdollyIn(dollyDelta.y);\n\n\t\tdollyStart.copy(dollyEnd);\n\t}\n\n\tfunction handleTouchMoveDollyPan(event) {\n\t\tif (scope.enableZoom) handleTouchMoveDolly(event);\n\n\t\tif (scope.enablePan) handleTouchMovePan(event);\n\t}\n\n\tfunction handleTouchMoveDollyRotate(event) {\n\t\tif (scope.enableZoom) handleTouchMoveDolly(event);\n\n\t\tif (scope.enableRotate) handleTouchMoveRotate(event);\n\t}\n\n\tfunction handleTouchEnd(/*event*/) {\n\t\t// no-op\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown(event) {\n\t\tif (scope.enabled === false) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch (event.button) {\n\t\t\tcase 0:\n\t\t\t\tswitch (scope.mouseButtons.LEFT) {\n\t\t\t\t\tcase MOUSE.ROTATE:\n\t\t\t\t\t\tif (event.ctrlKey || event.metaKey || event.shiftKey) {\n\t\t\t\t\t\t\tif (scope.enablePan === false) return;\n\n\t\t\t\t\t\t\thandleMouseDownPan(event);\n\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (scope.enableRotate === false) return;\n\n\t\t\t\t\t\t\thandleMouseDownRotate(event);\n\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MOUSE.PAN:\n\t\t\t\t\t\tif (event.ctrlKey || event.metaKey || event.shiftKey) {\n\t\t\t\t\t\t\tif (scope.enableRotate === false) return;\n\n\t\t\t\t\t\t\thandleMouseDownRotate(event);\n\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (scope.enablePan === false) return;\n\n\t\t\t\t\t\t\thandleMouseDownPan(event);\n\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\tswitch (scope.mouseButtons.MIDDLE) {\n\t\t\t\t\tcase MOUSE.DOLLY:\n\t\t\t\t\t\tif (scope.enableZoom === false) return;\n\n\t\t\t\t\t\thandleMouseDownDolly(event);\n\n\t\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tswitch (scope.mouseButtons.RIGHT) {\n\t\t\t\t\tcase MOUSE.ROTATE:\n\t\t\t\t\t\tif (scope.enableRotate === false) return;\n\n\t\t\t\t\t\thandleMouseDownRotate(event);\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MOUSE.PAN:\n\t\t\t\t\t\tif (scope.enablePan === false) return;\n\n\t\t\t\t\t\thandleMouseDownPan(event);\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (state !== STATE.NONE) {\n\t\t\tdocument.addEventListener('mousemove', onMouseMove, false);\n\t\t\tdocument.addEventListener('mouseup', onMouseUp, false);\n\n\t\t\tscope.dispatchEvent(startEvent);\n\t\t}\n\t}\n\n\tfunction onMouseMove(event) {\n\t\tif (scope.enabled === false) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch (state) {\n\t\t\tcase STATE.ROTATE:\n\t\t\t\tif (scope.enableRotate === false) return;\n\n\t\t\t\thandleMouseMoveRotate(event);\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\t\t\t\tif (scope.enableZoom === false) return;\n\n\t\t\t\thandleMouseMoveDolly(event);\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\t\t\t\tif (scope.enablePan === false) return;\n\n\t\t\t\thandleMouseMovePan(event);\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction onMouseUp(event) {\n\t\tif (scope.enabled === false) return;\n\n\t\thandleMouseUp(event);\n\n\t\tdocument.removeEventListener('mousemove', onMouseMove, false);\n\t\tdocument.removeEventListener('mouseup', onMouseUp, false);\n\n\t\tscope.dispatchEvent(endEvent);\n\n\t\tstate = STATE.NONE;\n\t}\n\n\tfunction onMouseWheel(event) {\n\t\tif (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE))\n\t\t\treturn;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent(startEvent);\n\n\t\thandleMouseWheel(event);\n\n\t\tscope.dispatchEvent(endEvent);\n\t}\n\n\tfunction onKeyDown(event) {\n\t\tif (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n\t\thandleKeyDown(event);\n\t}\n\n\tfunction onTouchStart(event) {\n\t\tif (scope.enabled === false) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch (event.touches.length) {\n\t\t\tcase 1:\n\t\t\t\tswitch (scope.touches.ONE) {\n\t\t\t\t\tcase TOUCH.ROTATE:\n\t\t\t\t\t\tif (scope.enableRotate === false) return;\n\n\t\t\t\t\t\thandleTouchStartRotate(event);\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\t\t\t\t\t\tif (scope.enablePan === false) return;\n\n\t\t\t\t\t\thandleTouchStartPan(event);\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tswitch (scope.touches.TWO) {\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\t\t\t\t\t\tif (scope.enableZoom === false && scope.enablePan === false) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan(event);\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\t\t\t\t\t\tif (scope.enableZoom === false && scope.enableRotate === false) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate(event);\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tstate = STATE.NONE;\n\t\t}\n\n\t\tif (state !== STATE.NONE) {\n\t\t\tscope.dispatchEvent(startEvent);\n\t\t}\n\t}\n\n\tfunction onTouchMove(event) {\n\t\tif (scope.enabled === false) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch (state) {\n\t\t\tcase STATE.TOUCH_ROTATE:\n\t\t\t\tif (scope.enableRotate === false) return;\n\n\t\t\t\thandleTouchMoveRotate(event);\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\t\t\t\tif (scope.enablePan === false) return;\n\n\t\t\t\thandleTouchMovePan(event);\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\t\t\t\tif (scope.enableZoom === false && scope.enablePan === false) return;\n\n\t\t\t\thandleTouchMoveDollyPan(event);\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\t\t\t\tif (scope.enableZoom === false && scope.enableRotate === false) return;\n\n\t\t\t\thandleTouchMoveDollyRotate(event);\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tstate = STATE.NONE;\n\t\t}\n\t}\n\n\tfunction onTouchEnd(event) {\n\t\tif (scope.enabled === false) return;\n\n\t\thandleTouchEnd(event);\n\n\t\tscope.dispatchEvent(endEvent);\n\n\t\tstate = STATE.NONE;\n\t}\n\n\tfunction onContextMenu(event) {\n\t\tif (scope.enabled === false) return;\n\n\t\tevent.preventDefault();\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener('contextmenu', onContextMenu, false);\n\n\tscope.domElement.addEventListener('mousedown', onMouseDown, false);\n\tscope.domElement.addEventListener('wheel', onMouseWheel, false);\n\n\tscope.domElement.addEventListener('touchstart', onTouchStart, false);\n\tscope.domElement.addEventListener('touchend', onTouchEnd, false);\n\tscope.domElement.addEventListener('touchmove', onTouchMove, false);\n\n\tscope.domElement.addEventListener('keydown', onKeyDown, false);\n\n\t// make sure element can receive keys.\n\n\tif (scope.domElement.tabIndex === -1) {\n\t\tscope.domElement.tabIndex = 0;\n\t}\n\n\t// force an update at start\n\n\tthis.update();\n};\n\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function (object, domElement) {\n\tOrbitControls.call(this, object, domElement);\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n};\n\nMapControls.prototype = Object.create(EventDispatcher.prototype);\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","function initBGGUI(gui, bgMaterial) {\n\tlet bgMaterialUniforms = bgMaterial.uniforms;\n\tlet params = {\n\t\tbgBaseColor: bgMaterialUniforms.baseColor.value.getStyle(),\n\t\tbgArea1Color: bgMaterialUniforms.area1Color.value.getStyle(),\n\t\tbgArea2Color: bgMaterialUniforms.area2Color.value.getStyle(),\n\t\tbgArea1PosX: bgMaterialUniforms.area1Position.value.x,\n\t\tbgArea1PosY: bgMaterialUniforms.area1Position.value.y,\n\t\tbgArea2PosX: bgMaterialUniforms.area2Position.value.x,\n\t\tbgArea2PosY: bgMaterialUniforms.area2Position.value.y,\n\t\tbgStrengthFactor: bgMaterialUniforms.strengthFactor.value,\n\t\tbgArea1Radius: bgMaterialUniforms.area1Radius.value,\n\t\tbgArea2Radius: bgMaterialUniforms.area2Radius.value,\n\t\tbgNoiseStrength: bgMaterialUniforms.noiseStrength.value,\n\t\tbgOpacity: bgMaterialUniforms.opacity.value\n\t};\n\t// Background\n\tconst bgFolder = gui.addFolder('Background');\n\tbgFolder\n\t\t.addColor(params, 'bgBaseColor')\n\t\t.name('baseColor')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.baseColor.value.setStyle(value);\n\t\t});\n\t// Area1\n\tbgFolder\n\t\t.addColor(params, 'bgArea1Color')\n\t\t.name('area1Color')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.area1Color.value.setStyle(value);\n\t\t});\n\tbgFolder\n\t\t.add(params, 'bgArea1PosX', 0, 1)\n\t\t.name('area1PosX')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.area1Position.value.x = value;\n\t\t});\n\tbgFolder\n\t\t.add(params, 'bgArea1PosY', 0, 1)\n\t\t.step(0.01)\n\t\t.name('area1PosY')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.area1Position.value.y = value;\n\t\t});\n\tbgFolder\n\t\t.add(params, 'bgArea1Radius', 0, 1)\n\t\t.name('area1Radius')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.area1Radius.value = value;\n\t\t});\n\t// Area2\n\tbgFolder\n\t\t.addColor(params, 'bgArea2Color')\n\t\t.name('area2Color')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.area2Color.value.setStyle(value);\n\t\t});\n\tbgFolder\n\t\t.add(params, 'bgArea2PosX', 0, 1)\n\t\t.name('area2PosX')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.area2Position.value.x = value;\n\t\t});\n\tbgFolder\n\t\t.add(params, 'bgArea2PosY', 0, 1)\n\t\t.name('area2PosY')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.area2Position.value.y = value;\n\t\t});\n\tbgFolder\n\t\t.add(params, 'bgArea2Radius', 0, 1)\n\t\t.name('area2Radius')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.area2Radius.value = value;\n\t\t});\n\t// Other\n\tbgFolder\n\t\t.add(params, 'bgStrengthFactor', 0, 1)\n\t\t.name('strengthFactor')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.strengthFactor.value = value;\n\t\t});\n\tbgFolder\n\t\t.add(params, 'bgNoiseStrength', 0, 1)\n\t\t.name('noiseStrength')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.noiseStrength.value = value;\n\t\t});\n\tbgFolder\n\t\t.add(params, 'bgOpacity', 0, 1)\n\t\t.name('opacity')\n\t\t.onChange(value => {\n\t\t\tbgMaterialUniforms.opacity.value = value;\n\t\t});\n\tbgFolder.open();\n}\n\nfunction initAnimeTitleGUI(gui, material) {\n\tlet uniforms = material.uniforms;\n\tlet params = {\n\t\ttopColor: uniforms.topColor.value.getStyle(),\n\t\tbottomColor: uniforms.bottomColor.value.getStyle()\n\t};\n\t// AnimeNameTitle\n\tconst animeTitleFolder = gui.addFolder('AnimeNameTitle');\n\tanimeTitleFolder.addColor(params, 'topColor').onChange(value => {\n\t\tuniforms.topColor.value.setStyle(value);\n\t});\n\tanimeTitleFolder.addColor(params, 'bottomColor').onChange(value => {\n\t\tuniforms.bottomColor.value.setStyle(value);\n\t});\n\tanimeTitleFolder.open();\n}\n\nexport { initBGGUI, initAnimeTitleGUI };\n","import * as THREE from 'three';\nimport { Section } from '../common/Section';\nimport { AnimeNameTitle } from '../common/AnimeNameTitle';\nimport { BGUniformsConfig, TextUniformConfig, TextConfig, AnimeName, AnimeTitleUniforms } from './const/config';\nimport { computeMeshBoundingBox, clamp } from 'JS/Utils';\n// Modules\nimport { BGMaterial } from 'MODULES/BGMaterial/BGMaterial';\nimport { PBRMaterial, PBRProgram } from 'MODULES/PBRMaterial/';\nimport { ParticleTexture } from 'MODULES/ParticleTexture/ParticleTexture';\nimport { ParticleSnow } from 'MODULES/ParticleSnow/ParticleSnow';\nimport { FXAAMaterial, VignetteMaterial } from 'MODULES/PostProcessing/';\n\nimport { gsap } from 'gsap';\n// Test\nimport { OrbitControls } from 'LIB/threejs/controls/OrbitControls';\nimport { initBGGUI, initAnimeTitleGUI } from '../common/InitGUI';\nimport * as dat from 'dat.gui';\n\nexport class HomeSection extends Section {\n\tconstructor(viewer) {\n\t\tsuper(viewer);\n\t\tthis.name = 'HomeSection';\n\t\tthis.debug = 0;\n\t\tthis.visible = true;\n\t\tthis.scrollSpeed = 0.06;\n\t\tthis.pbrProgram = new PBRProgram();\n\t\tthis.envRotationMat = { value: new THREE.Matrix3() };\n\t\tthis.cameraRotationMatrix = new THREE.Matrix4();\n\t\t// Left/Right Rotate limit\n\t\tthis.sceneRotateXLimit = Math.PI / 6;\n\n\t\tthis.cameraInitPos = new THREE.Vector3(1.3, 0, 2.4);\n\t\tthis.cameraLookAtPos = new THREE.Vector3(-0.1, 0.4, 0);\n\t\tthis.cameraTargetY = this.cameraInitPos.y;\n\n\t\tthis.particleTextureArr = [];\n\n\t\tthis.swordModel = null;\n\t\tthis.swordModelInitPos = new THREE.Vector3(0, 20, 0);\n\t\tthis.swordModelInitRotate = new THREE.Euler(Math.PI / 2, Math.PI, Math.PI);\n\t}\n\n\tinit() {\n\t\tthis.initBackground();\n\t\tlet environment = this.assetLibrary.get('EnvMap-Industrial');\n\t\tlet { sunlightInfo } = environment;\n\t\tthis.loadSunLight(sunlightInfo);\n\t\tthis.initCamera();\n\t\t// Load model\n\t\tlet gltfScene = (this.gltfScene = this.assetLibrary.get('Model-FF7').scene);\n\t\t// console.log(gltfScene);\n\t\tthis.scene.add(gltfScene);\n\t\t// Load Shader\n\t\tlet { pbrVS, pbrFS } = this.pbrProgram.getPBRShader();\n\t\t// Replace PBR Material\n\t\tgltfScene.traverse(child => {\n\t\t\tif (child.name === 'Sword') this.swordModel = child;\n\t\t\tif (child.isMesh) {\n\t\t\t\tchild.material = new PBRMaterial(child, environment, {\n\t\t\t\t\tpbrVS,\n\t\t\t\t\tpbrFS\n\t\t\t\t});\n\t\t\t\tchild.material.uniforms.uEnvironmentTransform = this.envRotationMat;\n\t\t\t}\n\t\t});\n\n\t\tthis.swordModel.position.copy(this.swordModelInitPos);\n\t\tthis.swordModel.rotation.copy(this.swordModelInitRotate);\n\t\t// Todo: 性能优化\n\t\tif (!this.isMobile) this.initParticleTexture();\n\t\tthis.initParticleSnow();\n\t\tthis.initText();\n\t\tthis.initPostprocessing();\n\t\tthis.initEvent();\n\n\t\tif (this.debug) this.initGUI();\n\t}\n\n\tentryAnime(callBack) {\n\t\t// Sword\n\t\tgsap.to(this.swordModel.position, {\n\t\t\ty: 0,\n\t\t\tduration: 1,\n\t\t\tdelay: 1,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\tgsap.to(this.swordModel.rotation, {\n\t\t\tx: Math.PI / 2,\n\t\t\ty: 0,\n\t\t\tz: 0,\n\t\t\tduration: 1,\n\t\t\tdelay: 1,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\t// Post\n\t\tgsap.to(this.vignetteMaterial.uniforms.darkness, {\n\t\t\tvalue: 0.4,\n\t\t\tduration: 1.3,\n\t\t\tdelay: 1.2,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\t// Camera\n\t\tgsap.to(this.camera.position, {\n\t\t\tz: 1.4,\n\t\t\tduration: 1.2,\n\t\t\tdelay: 1.2,\n\t\t\tonUpdate: () => {\n\t\t\t\tthis.camera.lookAt(this.cameraLookAtPos);\n\t\t\t}\n\t\t});\n\t\t// Particle\n\t\tgsap.delayedCall(1.8, () => {\n\t\t\tthis.particleTextureArr.forEach(particleTexture => {\n\t\t\t\tif (particleTexture)\n\t\t\t\t\tgsap.to(particleTexture.material.uniforms.uSize, {\n\t\t\t\t\t\tvalue: 1.5,\n\t\t\t\t\t\tduration: 1\n\t\t\t\t\t});\n\t\t\t});\n\t\t\t// Text\n\t\t\tgsap.to(this.textMaterial.uniforms.opacity, {\n\t\t\t\tvalue: 1,\n\t\t\t\tdelay: 0.2,\n\t\t\t\tduration: 1,\n\t\t\t\tease: 'power2.out'\n\t\t\t});\n\t\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, {\n\t\t\t\tvalue: 1,\n\t\t\t\tdelay: 0.2,\n\t\t\t\tduration: 1,\n\t\t\t\tease: 'power2.out'\n\t\t\t});\n\t\t\ttypeof callBack === 'function' && callBack();\n\t\t});\n\t}\n\n\tinitCamera() {\n\t\tthis.camera.position.copy(this.cameraInitPos);\n\t\tthis.camera.lookAt(this.cameraLookAtPos);\n\t\t// Test\n\t\t// this.control = new OrbitControls(this.camera, this.viewer.container);\n\t}\n\n\tinitPostprocessing() {\n\t\tthis.postScene = new THREE.Scene();\n\t\tthis.postCamera = this.viewer.postCamera;\n\t\tthis.postRenderTarget = this.viewer.postRenderTarget;\n\t\tthis.postScreenMesh = new THREE.Mesh(this.viewer.screenGeometry);\n\t\tthis.postScreenMesh.frustumCulled = false;\n\t\tthis.postScene.add(this.postScreenMesh);\n\n\t\tlet fxaaMaterial = (this.fxaaMaterial = new FXAAMaterial());\n\t\tlet pixelRatio = this.viewer.dpr;\n\t\tfxaaMaterial.uniforms['resolution'].value.x = 1 / (this.width * pixelRatio);\n\t\tfxaaMaterial.uniforms['resolution'].value.y = 1 / (this.height * pixelRatio);\n\n\t\tthis.vignetteMaterial = new VignetteMaterial({\n\t\t\toffset: .5,\n\t\t\tdarkness: 1\n\t\t});\n\t}\n\n\trenderPost(renderTarget) {\n\t\tlet inputTexture = renderTarget.texture;\n\t\tthis.vignetteMaterial.uniforms.inputBuffer.value = inputTexture;\n\t\tthis.postScene.overrideMaterial = this.vignetteMaterial;\n\t\tthis.renderer.setRenderTarget(this.postRenderTarget);\n\t\tthis.renderer.render(this.postScene, this.postCamera);\n\n\t\tthis.fxaaMaterial.uniforms.inputBuffer.value = this.postRenderTarget.texture;\n\t\tthis.postScene.overrideMaterial = this.fxaaMaterial;\n\t\tthis.renderer.setRenderTarget(renderTarget);\n\t\tthis.renderer.render(this.postScene, this.postCamera);\n\t}\n\n\tinitParticleSnow() {\n\t\tthis.particleSnow = new ParticleSnow(this);\n\t}\n\n\tinitParticleTexture() {\n\t\tlet cloudTexture = this.assetLibrary.get('Texture-Cloud');\n\t\tlet cloudParticleTexture = new ParticleTexture(this, cloudTexture, 'left');\n\t\tthis.particleTextureArr.push(cloudParticleTexture);\n\n\t\tlet cloudParticleMesh = (this.cloudParticleMesh = cloudParticleTexture.container);\n\t\tcloudParticleMesh.position.set(-this.width / 2, 200, 0);\n\t\tthis.uiScene.add(cloudParticleMesh);\n\n\t\tlet aerithTexture = this.assetLibrary.get('Texture-Aerith');\n\t\tlet aerithParticleTexture = new ParticleTexture(this, aerithTexture, 'right');\n\t\tthis.particleTextureArr.push(aerithParticleTexture);\n\n\t\tlet aerithParticleMesh = (this.aerithParticleMesh = aerithParticleTexture.container);\n\t\taerithParticleMesh.position.set(this.width / 2, 180, 0);\n\t\tthis.uiScene.add(aerithParticleMesh);\n\t\tthis.enableParticleTexture = true;\n\n\t\tthis.resizeParticleTexture(this.width, this.height);\n\t}\n\n\tresizeParticleTexture(width, height) {\n\t\tlet { cloudParticleMesh, aerithParticleMesh } = this;\n\t\tconst offsetWidth = -width / 3.5; // -width / 2 is left origin\n\t\tconst offsetHeight = height / 5.5;\n\t\tcloudParticleMesh.position.set(offsetWidth, offsetHeight, 0);\n\t\taerithParticleMesh.position.set(-offsetWidth, offsetHeight - 20, 0);\n\t\t// scale\n\t\tconst scale = clamp(width / 900, 1.5, 2);\n\t\tcloudParticleMesh.scale.setScalar(scale);\n\t\taerithParticleMesh.scale.setScalar(scale);\n\t}\n\n\tinitText() {\n\t\tlet material = (this.textMaterial = this.fontGenerator.createFontMaterial(0));\n\t\tmaterial.uniforms.time = { value: 0.0 };\n\t\t// Apply text color\n\t\tObject.assign(material.uniforms, TextUniformConfig);\n\n\t\tthis.titleMesh = this.initTextMesh(TextConfig.mainTitle, material);\n\t\tthis.subTitleMesh = this.initTextMesh(TextConfig.subTitle, material);\n\n\t\t// AnimeName Text\n\t\tthis.animeNameTitle = new AnimeNameTitle(this, AnimeName, AnimeTitleUniforms);\n\n\t\tthis.resizeText(this.width, this.height);\n\t}\n\n\tresizeText(width, height) {\n\t\tif(!this.isMobile){\n\t\t\tthis.resizeTextForPC(width, height);\n\t\t}else{\n\t\t\tthis.resizeTextForMobile(width, height);\n\t\t}\n\t\tthis.animeNameTitle.resize(width, height);\n\t}\n\n\tresizeTextForPC(width, height){\n\t\tlet { titleMesh, subTitleMesh } = this;\n\t\tlet titleMeshLength;\n\t\tconst bottom = -height / 2.5; // -height / 2 is screen bottom\n\t\tconst titleScale = clamp(width / 1000, 1.2, 1.8);\n\t\ttitleMeshLength = computeMeshBoundingBox(titleMesh).length.x * titleScale;\n\t\ttitleMesh.scale.setScalar(titleScale);\n\t\ttitleMesh.position.set(-titleMeshLength / 2, bottom, 0);\n\t\tconst subTitleScale = clamp(width / 2000, 0.6, 0.9);\n\t\tlet subBBox = computeMeshBoundingBox(subTitleMesh).length.multiplyScalar(subTitleScale);\n\t\ttitleMeshLength = subBBox.x;\n\t\tsubTitleMesh.scale.setScalar(subTitleScale);\n\t\tsubTitleMesh.position.set(-titleMeshLength / 2, bottom, 0);\n\n\t\t// Gap between title and subtitle\n\t\ttitleMesh.position.y = bottom + subBBox.y + 50;\n\t}\n\n\tresizeTextForMobile(width, height){\n\t\tlet { titleMesh, subTitleMesh } = this;\n\t\tlet titleMeshLength;\n\t\tconst bottom = -height / 3; // -height / 2 is screen bottom\n\t\tconst titleScale = clamp(width / 500, .6, .8);\n\t\ttitleMeshLength = computeMeshBoundingBox(titleMesh).length.x * titleScale;\n\t\ttitleMesh.scale.setScalar(titleScale);\n\t\ttitleMesh.position.set(-titleMeshLength / 2, bottom, 0);\n\t\tconst subTitleScale = clamp(width / 1000, .3, .4);\n\t\tlet subBBox = computeMeshBoundingBox(subTitleMesh).length.multiplyScalar(subTitleScale);\n\t\ttitleMeshLength = subBBox.x;\n\t\tsubTitleMesh.scale.setScalar(subTitleScale);\n\t\tsubTitleMesh.position.set(-titleMeshLength / 2, bottom, 0);\n\n\t\t// Gap between title and subtitle\n\t\ttitleMesh.position.y = bottom + subBBox.y + 40;\n\t}\n\n\tinitGUI() {\n\t\tconst gui = new dat.GUI();\n\t\tinitBGGUI(gui, this.bgMaterial);\n\t\tinitAnimeTitleGUI(gui, this.animeNameTitle.material);\n\t\tlet textMaterialUniforms = this.textMaterial.uniforms;\n\t\tlet params = {\n\t\t\t// Text\n\t\t\ttextColor1: textMaterialUniforms.color1.value.getStyle(),\n\t\t\ttextColor2: textMaterialUniforms.color2.value.getStyle(),\n\t\t\ttextColor3: textMaterialUniforms.color3.value.getStyle(),\n\t\t\ttextColor4: textMaterialUniforms.color4.value.getStyle()\n\t\t};\n\t\t// Text\n\t\tconst textFolder = gui.addFolder('Text');\n\t\ttextFolder\n\t\t\t.addColor(params, 'textColor1')\n\t\t\t.name('color1')\n\t\t\t.onChange(value => {\n\t\t\t\ttextMaterialUniforms.color1.value.setStyle(value);\n\t\t\t});\n\t\ttextFolder\n\t\t\t.addColor(params, 'textColor2')\n\t\t\t.name('color2')\n\t\t\t.onChange(value => {\n\t\t\t\ttextMaterialUniforms.color2.value.setStyle(value);\n\t\t\t});\n\t\ttextFolder\n\t\t\t.addColor(params, 'textColor3')\n\t\t\t.name('color3')\n\t\t\t.onChange(value => {\n\t\t\t\ttextMaterialUniforms.color3.value.setStyle(value);\n\t\t\t});\n\t\ttextFolder\n\t\t\t.addColor(params, 'textColor4')\n\t\t\t.name('color4')\n\t\t\t.onChange(value => {\n\t\t\t\ttextMaterialUniforms.color4.value.setStyle(value);\n\t\t\t});\n\t\ttextFolder.open();\n\t}\n\n\tloadSunLight(sunlightInfo) {\n\t\tif (!this.sunLight) this.sunLight = new THREE.DirectionalLight(0xffffff, 1);\n\t\tthis.sunLight.position.copy(sunlightInfo.position);\n\t\tthis.scene.add(this.sunLight);\n\t}\n\n\tinitBackground() {\n\t\tlet bgMaterial = (this.bgMaterial = new BGMaterial(BGUniformsConfig));\n\t\tlet bgMesh = new THREE.Mesh(this.viewer.screenGeometry, bgMaterial);\n\t\tbgMesh.layers.set(this.layers.BG_LAYER);\n\t\tthis.scene.add(bgMesh);\n\t}\n\n\tupdateEnvironmentRotation() {\n\t\t// Sync camera roatation to Environment\n\t\tthis.cameraRotationMatrix.makeRotationFromQuaternion(this.camera.quaternion);\n\t\tthis.envRotationMat.value.setFromMatrix4(this.cameraRotationMatrix);\n\t}\n\n\tinitEvent() {\n\t\tif(!this.isMobile){\n\t\t\tthis.eventHandler.onMouseMoveEvent.bind(this.onMouseMove.bind(this));\n\t\t}else{\n\t\t\tthis.eventHandler.onTouchMoveEvent.bind(this.onMouseMove.bind(this));\n\t\t}\n\t}\n\n\tonMouseMove(event) {\n\t\tif (!this.viewer.preloadFinished || !this.visible) return;\n\t\tlet positionNormX = this.state.pointer.positionNorm[0] - 0.5;\n\t\tlet sceneRoationTarget = positionNormX * this.sceneRotateXLimit;\n\t\t// Small rotation for particleTexture\n\t\tlet textureRoationTarget = sceneRoationTarget / 10;\n\n\t\tgsap.killTweensOf(this.gltfScene.rotation);\n\t\tgsap.to(this.gltfScene.rotation, {\n\t\t\ty: sceneRoationTarget,\n\t\t\tduration: 0.5,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\tif (this.enableParticleTexture) {\n\t\t\tgsap.killTweensOf(this.aerithParticleMesh.rotation);\n\t\t\tgsap.killTweensOf(this.cloudParticleMesh.rotation);\n\t\t\tgsap.to(this.aerithParticleMesh.rotation, {\n\t\t\t\ty: textureRoationTarget,\n\t\t\t\tduration: 0.5,\n\t\t\t\tease: 'power2.out'\n\t\t\t});\n\t\t\tgsap.to(this.cloudParticleMesh.rotation, {\n\t\t\t\ty: textureRoationTarget,\n\t\t\t\tduration: 0.5,\n\t\t\t\tease: 'power2.out'\n\t\t\t});\n\t\t}\n\t}\n\n\twhileVisible(order) {\n\t\tlet cameraPos = this.camera.position;\n\t\tgsap.killTweensOf(cameraPos);\n\t\tif (order === 'pre') {\n\t\t\tgsap.fromTo(cameraPos, { y: -0.2 }, { y: 0, duration: this.viewer.scrollAnimeDuration });\n\t\t} else {\n\t\t\tgsap.fromTo(cameraPos, { y: 0.35 }, { y: 0, duration: this.viewer.scrollAnimeDuration });\n\t\t}\n\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, {\n\t\t\tvalue: 1,\n\t\t\tduration: 1,\n\t\t\tdelay: 1,\n\t\t\tease: 'power2.out'\n\t\t});\n\t}\n\n\twhileNoVisible(order) {\n\t\tlet cameraPos = this.camera.position;\n\t\tgsap.killTweensOf(cameraPos);\n\t\tif (order === 'pre') {\n\t\t\tgsap.fromTo(cameraPos, { y: 0 }, { y: 0.35, duration: this.viewer.scrollAnimeDuration });\n\t\t} else {\n\t\t\tgsap.fromTo(cameraPos, { y: 0 }, { y: -0.2, duration: this.viewer.scrollAnimeDuration });\n\t\t}\n\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, {\n\t\t\tvalue: 0,\n\t\t\tduration: 1,\n\t\t\tease: 'power2.out'\n\t\t});\n\t}\n\n\tresize(width, height, dpr) {\n\t\tconst pixelWidth = width * dpr;\n\t\tconst pixelHeight = height * dpr;\n\t\tthis.postProcessingMaterial.resize(pixelWidth, pixelHeight);\n\t\tthis.camera.aspect = width / height;\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.uiCamera.left = -width / 2;\n\t\tthis.uiCamera.right = width / 2;\n\t\tthis.uiCamera.top = height / 2;\n\t\tthis.uiCamera.bottom = -height / 2;\n\t\tthis.uiCamera.updateProjectionMatrix();\n\t\t// FXAA\n\t\tthis.fxaaMaterial.uniforms['resolution'].value.x = 1 / pixelWidth;\n\t\tthis.fxaaMaterial.uniforms['resolution'].value.y = 1 / pixelHeight;\n\n\t\tif (this.enableParticleTexture) this.resizeParticleTexture(width, height);\n\t\tthis.resizeText(width, height);\n\t}\n\n\trender({ renderer, orthoCamera, target, deltaTime } = {}) {\n\t\tif (!this.visible) return;\n\t\tthis.updateEnvironmentRotation();\n\t\tthis.textMaterial.uniforms.time.value += deltaTime;\n\t\tthis.animeNameTitle.render(deltaTime);\n\t\t// BG\n\t\torthoCamera.layers.set(this.layers.BG_LAYER);\n\t\trenderer.render(this.scene, orthoCamera);\n\t\t// Scene\n\t\tif (this.particleSnow) this.particleSnow.render(deltaTime);\n\t\trenderer.render(this.scene, this.camera);\n\t\tthis.renderPost(target);\n\t\t// UI\n\t\tthis.uiCamera.layers.set(this.layers.UI_LAYER);\n\t\tthis.particleTextureArr.forEach(particleTexture => {\n\t\t\tparticleTexture.update(deltaTime);\n\t\t});\n\t\trenderer.render(this.uiScene, this.uiCamera);\n\t}\n}\n","import * as THREE from 'three';\n\n// Array config for every anime scene\nconst BGUniformsConfig = [\n\t{\n\t\tbaseColor: new THREE.Color('rgb(0,5,5)'),\n\t\tarea1Color: new THREE.Color('rgb(0,37,55)'),\n\t\tarea2Color: new THREE.Color('rgb(0,61,100)'),\n\t\tarea1Position: new THREE.Vector2(0.5, 0),\n\t\tarea1Radius: 0.23,\n\t\tarea2Position: new THREE.Vector2(0.5, 1)\n\t},\n\t{\n\t\tbaseColor: new THREE.Color('#f2c9cc'),\n\t\tarea1Color: new THREE.Color('rgb(55,0,52)'),\n\t\tarea2Color: new THREE.Color('rgb(85,51,0)'),\n\t\tarea1Position: new THREE.Vector2(0, 0),\n\t\tarea1Radius: 1,\n\t\tarea2Position: new THREE.Vector2(1, 1),\n\t\tarea2Radius: 1\n\t},\n\t{\n\t\tbaseColor: new THREE.Color('rgb(105,105,105)'),\n\t\tarea1Color: new THREE.Color('rgb(25,25,25)'),\n\t\tarea2Color: new THREE.Color('rgb(176,179,185)'),\n\t\tarea1Position: new THREE.Vector2(0.5, 0),\n\t\tarea1Radius: 0.2,\n\t\tarea2Position: new THREE.Vector2(0.5, 1),\n\t\tarea2Radius: 1\n\t}\n];\n\nconst ParticleUniformsConfig = [\n\t{\n\t\tcolor: new THREE.Color('rgb(92,120,145)')\n\t},\n\t{\n\t\tcolor: new THREE.Color('#F3759E')\n\t},\n\t{\n\t\tcolor: new THREE.Color('rgb(255,255,255)')\n\t}\n];\n\nconst TextUniformConfigList = [\n\t{\n\t\ttopColor: new THREE.Color('rgb(207,224,235)'),\n\t\tbottomColor: new THREE.Color('rgb(0,37,55)')\n\t},\n\t{\n\t\ttopColor: new THREE.Color('rgb(243,81,126)'),\n\t\tbottomColor: new THREE.Color('rgb(255,255,255)')\n\t},\n\t{\n\t\ttopColor: new THREE.Color('rgb(255,255,255)'),\n\t\tbottomColor: new THREE.Color('rgb(255,255,255)')\n\t}\n];\n\nconst AnimeTitleUniformsList = [\n\t{\n\t\ttopColor: new THREE.Color('rgb(207,224,235)'),\n\t\tbottomColor: new THREE.Color('rgb(0,37,55)')\n\t},\n\t{\n\t\ttopColor: new THREE.Color('rgb(243,81,126)'),\n\t\tbottomColor: new THREE.Color('rgb(255,255,255)')\n\t},\n\t{\n\t\ttopColor: new THREE.Color('rgb(255,255,255)'),\n\t\tbottomColor: new THREE.Color('rgb(255,255,255)')\n\t}\n];\n\nconst GalleryConfig = {\n\tgalleryTexture1: ['Texture-Diamond1', 'Texture-Binguo1', 'Texture-STM1'],\n\tgalleryTexture2: ['Texture-Diamond2', 'Texture-Binguo2', 'Texture-STM2']\n};\n\nconst TextConfig = {\n\tmainTitle: `Anime !`,\n\tsubTitle: `I loveee anime! Especially the imaginative\n    camera movements and beautiful scenes!\n    So i also like AMV/MAD very much(miss 2013)\n    Here are some of my favorite anime!`\n};\n\nconst AnimeNameList = ['[ Land of the Lustrous ]', '[ Hyouka ]', '[ Steins;Gate ]'];\n\nexport {\n\tBGUniformsConfig,\n\tParticleUniformsConfig,\n\tTextUniformConfigList,\n\tGalleryConfig,\n\tTextConfig,\n\tAnimeNameList,\n\tAnimeTitleUniformsList\n};\n","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\nattribute vec2 uv;\\n\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\n\\nvarying vec3 vPosition;\\nvarying vec2 vUv;\\n\\nvoid main(void) {\\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n  vPosition = position;\\n  vUv = uv;\\n  gl_Position = projectionMatrix * mvPosition;\\n}\\n\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform float uTime;\\nuniform float uProgress;\\nuniform sampler2D uTextures[2];\\nvarying vec3 vPosition;\\nvarying vec2 vUv;\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\nvoid main() {\\n    // Todo\\n    float noiseRange = 2.;\\n\\n    vec2 st = (vUv * 2.0 - 1.0); // [-1, 1]\\n    float circleOut = 1. - smoothstep(0.6, 1., length(st));\\n    float circleIn = 1. - smoothstep(0.4, 0.8, length(st));\\n    float noise = (snoise(vec3(st * (1.5 + noiseRange * .1) + vec2(sin(uTime), cos(uTime)), uTime + noiseRange * 100.)) + 1.5) / 2.;\\n\\n    float mask = circleOut * noise + circleIn;\\n    float opacity = 1.0 - step(mask, 0.15);\\n\\n    vec4 texColorPrev =  texture2D(uTextures[0], vUv);\\n    vec4 texColorNext = texture2D(uTextures[1], vUv);\\n\\n    float progress = uProgress + noise * 0.1;\\n    float intpl = smoothstep(0., 1., (progress*2. - vUv.x));\\n    vec4 finColor = mix(texColorPrev, texColorNext, intpl);\\n\\n    // gl_FragColor = vec4(vec3(opacity) , 1.);\\n    gl_FragColor = vec4(finColor.rgb, opacity);\\n}\";","import * as THREE from 'three';\nimport vertexShader from './shaders/noiseMask.vs';\nimport fragmentShader from './shaders/noiseMask.fs';\n\nexport class GalleryTexture {\n\tconstructor(container, textures, opts = {}) {\n\t\tthis.container = container;\n\t\tthis.textures = textures;\n\t\tthis.texWidth = textures[0].image.width;\n\t\tthis.texHeight = textures[0].image.height;\n\t\tthis.texAspect = this.texWidth / this.texHeight;\n\t\tthis.width = opts.width || 5;\n\t\tthis.height = this.width / this.texAspect;\n\t\t// this.height = this.width;\n\n\t\tthis.uniforms = {\n\t\t\tuTime: {\n\t\t\t\ttype: 'f',\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tuProgress: {\n\t\t\t\ttype: 'f',\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tuTextures: {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: textures\n\t\t\t}\n\t\t};\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tconst geometry = new THREE.PlaneBufferGeometry(this.width, this.height, 2, 2);\n\t\tconst material = new THREE.RawShaderMaterial({\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader,\n\t\t\tfragmentShader,\n\t\t\tdepthTest: false,\n\t\t\ttransparent: true\n\t\t});\n\t\tthis.mesh = new THREE.Mesh(geometry, material);\n\t\tthis.container.add(this.mesh);\n\t}\n\n\tget material() {\n\t\treturn this.mesh.material;\n\t}\n\n\tget progress() {\n\t\treturn this.material.uniforms.uProgress.value;\n\t}\n\n\tset progress(val) {\n\t\tthis.material.uniforms.uProgress.value = val;\n\t}\n\n\tswapTextures() {\n\t\tif (!this.material.uniforms.uTextures.value) return;\n\t\tlet textures = this.material.uniforms.uTextures;\n\t\tlet temp = textures.value[0];\n\t\ttextures.value[0] = textures.value[1];\n\t\ttextures.value[1] = temp;\n\t}\n\n\tsetNextTexture(texture) {\n\t\tthis.material.uniforms.uTextures.value[1] = texture;\n\t}\n\n\tresize() {}\n\n\trender(time) {\n\t\tthis.uniforms.uTime.value += time;\n\t}\n}\n","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute float pindex;\\nattribute vec3 position;\\nattribute vec3 offset;\\nattribute vec3 random; // rotation/scale/alpha\\nattribute vec2 uv;\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\n\\nuniform float time;\\nuniform float size;\\n\\nvarying vec2 vUv;\\nvarying float vPreAlpha;\\n\\nvoid rotate2d(inout vec2 v, float a){\\n    mat2 m = mat2(cos(a), -sin(a), sin(a),  cos(a));\\n    v = m * v;\\n}\\n\\nvoid main() {\\n\\tvUv = uv;\\n\\n\\t// displacement\\n\\tvec3 displaced = offset;\\n\\n\\t// rotate around z axis\\n\\tvec3 pos = position;\\n    rotate2d(pos.xy, random.x * .5 + time * (random.y - 0.5) / 4.);\\n\\n\\tvec4 mvPosition = modelViewMatrix * vec4(displaced, 1.0);\\n\\tmvPosition.xyz += pos * clamp(0.1, 1., size * random.y);\\n\\tvec4 finalPosition = projectionMatrix * mvPosition;\\n\\n\\t// Todo: alpha depend by depth\\n\\tvPreAlpha = random.z;\\n\\tgl_Position = finalPosition;\\n}\\n\";","export default \"precision highp float;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying float vPreAlpha;\\nuniform vec3 color;\\nuniform float type;\\n\\n// https://www.shadertoy.com/view/llVyWW\\nfloat sdPentagon(vec2 p, float r){\\n    const vec3 k = vec3(0.809016994,0.587785252,0.726542528); // pi/5: cos, sin, tan\\n    p.y = -p.y;\\n    p.x = abs(p.x);\\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\\n\\tp -= vec2(clamp(p.x,-r*k.z,r*k.z),r);    \\n    return length(p)*sign(p.y);\\n}\\n\\n// Heart curve suggested by IQ, improved by Dave_Hoskins.\\nfloat heart(vec2 p) {\\n    // Center it more, vertically:\\n    p.y += .6;\\n    // This offset reduces artifacts on the center vertical axis.\\n    const float offset = .3;\\n    // (x^2+(1.2*y-sqrt(abs(x)))^2−1)\\n    float k = 1.2 * p.y - sqrt(abs(p.x) + offset);\\n    return p.x * p.x + k * k - 1.;\\n}\\n\\n// signed distance to an equilateral triangle\\nfloat sdEquilateralTriangle(in vec2 p) {\\n    const float k = sqrt(3.0);\\n    p.x = abs(p.x) - 1.0;\\n    p.y = p.y + 1.0/k;\\n    if( p.x+k*p.y>0.0 ) p=vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\\n    p.x -= clamp( p.x, -2.0, 0.0 );\\n    return -length(p)*sign(p.y);\\n}\\n\\nfloat sdCircle(in vec2 p, in float r) {\\n    return length(p)-r;\\n}\\n\\nfloat sdStar(in vec2 p, in float r, in float rf)\\n{\\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\\n    const vec2 k2 = vec2(-k1.x,k1.y);\\n\\n    // repeat domain 5x\\n    p.x = abs(p.x);\\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\\n    p.x = abs(p.x);\\n    \\n    // draw triangle\\n    p.y -= r;\\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\\n\\tfloat h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\\n}\\n\\nvoid main() {\\n\\tvec2 st = (vUv * 2.0 - 1.0); // [-1, 1]\\n    float r;\\n\\n    if(type>1.1)\\n        r = sdStar(st, 1., .5);\\n    else if(type>0.1)\\n        r = heart(st);\\n    else\\n        r = sdPentagon(st, .5);\\n    \\n\\tfloat alpha = 1. - sign(r);\\n\\n\\tvec3 col = color;\\n\\n\\tgl_FragColor = vec4(col, alpha * vPreAlpha);\\n}\";","import * as THREE from 'three';\nimport particleVS from './shaders/particle.vs';\nimport particleFS from './shaders/particle.fs';\nimport { ParticleInstance } from 'MODULES/Particle/ParticleInstance';\nimport { symmetryRandom } from 'JS/Utils';\n\nexport class ParticlePolygon {\n\tconstructor(container, { number = 1000, areaWidth = 100, areaHeight = 50, areaDepth = 50 } = {}) {\n\t\tthis.container = container;\n\t\tthis.number = number;\n\t\tthis.areaWidth = areaWidth;\n\t\tthis.areaHeight = areaHeight;\n\t\tthis.areaDepth = areaDepth;\n\n\t\tthis.initParticle();\n\t}\n\n\tinitParticle() {\n\t\tconst uniforms = {\n\t\t\ttime: { value: 0 },\n\t\t\tsize: { value: 1 },\n\t\t\tcolor: { value: new THREE.Color(0xd7f1fe) },\n\t\t\ttype: { value: 0 }\n\t\t};\n\n\t\tconst material = (this.material = new THREE.RawShaderMaterial({\n\t\t\tuniforms,\n\t\t\tvertexShader: particleVS,\n\t\t\tfragmentShader: particleFS,\n\t\t\tdepthTest: false,\n\t\t\ttransparent: true\n\t\t\t// blending: THREE.AdditiveBlending,\n\t\t}));\n\n\t\tthis.instanceMesh = new ParticleInstance(material).mesh;\n\t\tconst geometry = this.instanceMesh.geometry;\n\n\t\tconst numberPoints = this.number;\n\t\tconst indices = new Uint16Array(numberPoints);\n\t\tconst offsets = new Float32Array(numberPoints * 3); // Each position\n\t\tconst randoms = new Float32Array(numberPoints * 3); // rotation/scale/alpha\n\n\t\tfor (let i = 0; i < numberPoints; i++) {\n\t\t\toffsets.set(\n\t\t\t\t[\n\t\t\t\t\tthis.areaWidth * symmetryRandom(),\n\t\t\t\t\tthis.areaHeight * symmetryRandom(),\n\t\t\t\t\tthis.areaDepth * symmetryRandom()\n\t\t\t\t],\n\t\t\t\ti * 3\n\t\t\t);\n\n\t\t\trandoms.set([Math.random(), Math.random(), Math.random()], i * 3);\n\n\t\t\tindices[i] = i;\n\t\t}\n\n\t\tgeometry.setAttribute('pindex', new THREE.InstancedBufferAttribute(indices, 1, false));\n\t\tgeometry.setAttribute('offset', new THREE.InstancedBufferAttribute(offsets, 3, false));\n\t\tgeometry.setAttribute('random', new THREE.InstancedBufferAttribute(randoms, 3, false));\n\n\t\tthis.container.add(this.instanceMesh);\n\t}\n\n\tget color() {\n\t\treturn this.material.uniforms.color.value;\n\t}\n\n\tset color(val) {\n\t\tthis.material.uniforms.color.value = val;\n\t}\n\n\tget size() {\n\t\treturn this.material.uniforms.size.value;\n\t}\n\n\tset size(val) {\n\t\tthis.material.uniforms.size.value = val;\n\t}\n\n\tget type() {\n\t\treturn this.material.uniforms.type.value;\n\t}\n\n\tset type(val) {\n\t\tthis.material.uniforms.type.value = val;\n\t}\n\n\tget mesh() {\n\t\treturn this.instanceMesh;\n\t}\n\n\trender(time) {\n\t\tthis.instanceMesh.material.uniforms.time.value += time;\n\t\tthis.instanceMesh.rotation.y -= 0.001;\n\t}\n}\n","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n}\";","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform float time;\\nuniform float opacity;\\n\\nfloat sdLine(in vec2 p, in vec2 a, in vec2 b){\\n    vec2 ba = b-a;\\n    vec2 pa = p-a;\\n    float h =clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\\n    float line = length(pa-h*ba) - 0.1;\\n    return 1. - sign(line);\\n}\\n\\nvoid main() {\\n\\tvec2 st = (vUv * 2.0 - 1.0); // [-1, 1]\\n    st *= 1.4;\\n    vec2 v1 = vec2(-1.0,-1.0);\\n\\tvec2 v2 = vec2(.5,0.);\\n    float line1 = sdLine( st, v1, v2 );\\n\\n    vec2 v3 = vec2(-1.0,1.0);\\n\\tvec2 v4 = vec2(.5,0.);\\n    float line2 = sdLine( st, v3, v4 );\\n\\n\\tfloat alpha = line1 + line2;\\n    float common = line1 * line2 / 2.;\\n    alpha -= common;\\n\\n    float animeAlpha = 0.3 + abs(sin(time)) / 5.;\\n\\n\\tvec3 col = vec3(1.);\\n\\n\\tgl_FragColor = vec4(col, alpha * opacity * animeAlpha);\\n}\";","import * as THREE from 'three';\nimport vertexShader from './shaders/button.vs';\nimport fragmentShader from './shaders/arrowButton.fs';\n\nexport class ArrowButton {\n\tconstructor(section, layer, { name = 'arrowButton', width = 100 } = {}) {\n\t\tthis.name = name;\n\t\tthis.section = section;\n\t\tthis.layer = layer;\n\t\tthis.width = width;\n\t\tthis.height = width;\n\n\t\tthis.container = new THREE.Group();\n\t\tthis.initRing();\n\t\tthis.initHitArea();\n\t}\n\n\tinitRing() {\n\t\tthis.material = new THREE.ShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\ttime: { value: 0 },\n\t\t\t\topacity: { value: 0.0 }\n\t\t\t},\n\t\t\ttransparent: true,\n\t\t\tvertexShader,\n\t\t\tfragmentShader\n\t\t});\n\t\tlet geometry = new THREE.PlaneBufferGeometry(this.width, this.height, 1, 1);\n\t\tthis.mesh = new THREE.Mesh(geometry, this.material);\n\t\tthis.mesh.layers.set(this.layer);\n\t\tthis.container.add(this.mesh);\n\t}\n\n\tinitHitArea() {\n\t\tthis.hitArea = this.mesh;\n\t\tthis.hitArea.name = this.name;\n\t}\n\n\tget opacity() {\n\t\treturn this.material.uniforms.opacity.value;\n\t}\n\n\tset opacity(val) {\n\t\tthis.material.uniforms.opacity.value = val;\n\t}\n\n\tresize() {}\n\n\tupdate(time) {\n\t\tthis.material.uniforms.time.value += time;\n\t}\n}\n","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform float time;\\nuniform float opacity;\\n\\nfloat sdRing(vec2 p, float r1, float r2) {\\n    float len = length(p);\\n    float outer = step(len-r1, 0.);\\n    float inner = step(len-r2, 0.);\\n    return outer - inner;\\n}\\n\\nfloat sdRoundedX(in vec2 p, in float w, in float r){\\n    p = abs(p);\\n    return length(p-min(p.x+p.y,w)*0.5) - r;\\n}\\n\\nvoid main() {\\n\\tvec2 st = (vUv * 2.0 - 1.0); // [-1, 1]\\n\\n    float alpha = sdRoundedX(st, .8, .03);\\n    alpha = 1. - sign(alpha);\\n\\n    st *= 1. + abs(sin(time)) / 10.;\\n    float r1 = sdRing(st, 1., 0.9);\\n    alpha += r1;\\n\\n\\tvec3 col = vec3(1.);\\n\\n\\tgl_FragColor = vec4(col, alpha * opacity);\\n}\";","import * as THREE from 'three';\nimport vertexShader from './shaders/button.vs';\nimport fragmentShader from './shaders/closeButton.fs';\n\nexport class CloseButton {\n\tconstructor(section, layer, { name = 'closeButton', width = 100 } = {}) {\n\t\tthis.name = name;\n\t\tthis.section = section;\n\t\tthis.layer = layer;\n\t\tthis.width = width;\n\t\tthis.height = width;\n\n\t\tthis.container = new THREE.Group();\n\t\tthis.initRing();\n\t\tthis.initHitArea();\n\t}\n\n\tinitRing() {\n\t\tthis.material = new THREE.ShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\ttime: { value: 0 },\n\t\t\t\topacity: { value: 0.0 }\n\t\t\t},\n\t\t\ttransparent: true,\n\t\t\tvertexShader,\n\t\t\tfragmentShader\n\t\t});\n\t\tlet geometry = new THREE.PlaneBufferGeometry(this.width, this.height, 1, 1);\n\t\tthis.mesh = new THREE.Mesh(geometry, this.material);\n\t\tthis.mesh.layers.set(this.layer);\n\t\tthis.container.add(this.mesh);\n\t}\n\n\tinitHitArea() {\n\t\tthis.hitArea = this.mesh;\n\t\tthis.hitArea.name = this.name;\n\t}\n\n\tget opacity() {\n\t\treturn this.material.uniforms.opacity.value;\n\t}\n\n\tset opacity(val) {\n\t\tthis.material.uniforms.opacity.value = val;\n\t}\n\n\tresize() {}\n\n\tupdate(time) {\n\t\tthis.material.uniforms.time.value += time;\n\t}\n}\n","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform float time;\\nuniform float opacity;\\n\\nfloat sdRing(vec2 p, float r1, float r2) {\\n    float len = length(p);\\n    float outer = step(len-r1, 0.);\\n    float inner = step(len-r2, 0.);\\n    return outer - inner;\\n}\\n\\nvoid main() {\\n\\tvec2 st = (vUv * 2.0 - 1.0); // [-1, 1]\\n    st *= 1. + abs(sin(time)) / 5.;\\n    float r1 = sdRing(st, .85, 0.8);\\n    float r2 = sdRing(st, .95, 0.9);\\n    \\n\\tfloat alpha = r1 + r2;\\n\\n\\tvec3 col = vec3(1.);\\n\\n\\tgl_FragColor = vec4(col, alpha * opacity);\\n}\";","import * as THREE from 'three';\nimport vertexShader from './shaders/button.vs';\nimport fragmentShader from './shaders/ringButton.fs';\nimport { computeMeshBoundingBox } from 'JS/Utils';\n\nexport class RingButton {\n\tconstructor(section, layer, text, { width = 100, name = 'ringButton' } = {}) {\n\t\tthis.text = text;\n\t\tthis.name = name;\n\t\tthis.section = section;\n\t\tthis.fontGenerator = section.fontGenerator;\n\t\tthis.layer = layer;\n\t\tthis.width = width;\n\t\tthis.height = width;\n\n\t\tthis.container = new THREE.Group();\n\t\tthis.initRing();\n\t\tthis.initText();\n\t\tthis.initHitArea();\n\t}\n\n\tinitRing() {\n\t\tthis.ringMaterial = new THREE.ShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\ttime: { value: 0 },\n\t\t\t\topacity: { value: 0 }\n\t\t\t},\n\t\t\ttransparent: true,\n\t\t\tvertexShader,\n\t\t\tfragmentShader\n\t\t});\n\t\tlet geometry = new THREE.PlaneBufferGeometry(this.width, this.height, 1, 1);\n\t\tthis.ringMesh = new THREE.Mesh(geometry, this.ringMaterial);\n\t\tthis.ringMesh.layers.set(this.layer);\n\t\tthis.container.add(this.ringMesh);\n\t}\n\n\tinitText() {\n\t\tlet material = (this.textMaterial = this.fontGenerator.createFontMaterial(1));\n\t\tlet textMesh = (this.textMesh = this.section.initTextMesh(this.text, material, this.container));\n\t\ttextMesh.layers.set(this.layer);\n\t\tconst textScale = 0.5;\n\t\tlet titleMeshLength = computeMeshBoundingBox(textMesh).length.multiplyScalar(textScale);\n\t\ttextMesh.scale.setScalar(textScale);\n\t\ttextMesh.position.set(-titleMeshLength.x / 2, -titleMeshLength.y / 3, 0);\n\t\tthis.container.add(this.textMesh);\n\t}\n\n\tinitHitArea() {\n\t\tthis.hitArea = this.ringMesh;\n\t\tthis.hitArea.name = this.name;\n\t}\n\n\tget opacity() {\n\t\treturn this.textMaterial.uniforms.opacity.value;\n\t}\n\n\tset opacity(val) {\n\t\tthis.textMaterial.uniforms.opacity.value = val;\n\t\tthis.ringMaterial.uniforms.opacity.value = val;\n\t}\n\n\tresize() {}\n\n\tupdate(time) {\n\t\tthis.ringMaterial.uniforms.time.value += time;\n\t}\n}\n","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform float time;\\nuniform float opacity;\\n\\nfloat sdRoundBox( in vec2 p, in vec2 b, in vec4 r ) {\\n    r.xy = (p.x>0.0)?r.xy : r.zw;\\n    r.x  = (p.y>0.0)?r.x  : r.y;\\n    \\n    vec2 q = abs(p)-b+r.x;\\n    float box = min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\\n    float boxLine = abs(box) - 0.01;\\n    return 1. - sign(boxLine);\\n}\\n\\nvoid main() {\\n\\tvec2 st = (vUv * 2.0 - 1.0); // [-1, 1]\\n    \\n    vec2 si1 = vec2(0.8,0.35);\\n    vec4 ra1 = vec4(0.35);\\n\\tfloat alpha = sdRoundBox(st, si1, ra1);\\n\\n    float animeAlpha = 0.2 + abs(sin(time)) / 5.;\\n\\tvec3 col = vec3(1.);\\n\\n\\tgl_FragColor = vec4(col, alpha * animeAlpha * opacity);\\n}\";","import * as THREE from 'three';\nimport vertexShader from './shaders/button.vs';\nimport fragmentShader from './shaders/rectangleButton.fs';\nimport { computeMeshBoundingBox } from 'JS/Utils';\n\nexport class RectangleButton {\n\tconstructor(section, layer, text, { name = 'rectangleButton', width = 200 } = {}) {\n\t\tthis.text = text;\n\t\tthis.name = name;\n\t\tthis.section = section;\n\t\tthis.fontGenerator = section.fontGenerator;\n\t\tthis.layer = layer;\n\t\tthis.width = width;\n\t\tthis.height = width;\n\n\t\tthis.container = new THREE.Group();\n\t\tthis.initRectangle();\n\t\tthis.initText();\n\t\tthis.initHitArea();\n\t}\n\n\tinitRectangle() {\n\t\tthis.rectangleMaterial = new THREE.ShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\ttime: { value: 0 },\n\t\t\t\topacity: { value: 0 }\n\t\t\t},\n\t\t\ttransparent: true,\n\t\t\tvertexShader,\n\t\t\tfragmentShader\n\t\t});\n\t\tlet geometry = new THREE.PlaneBufferGeometry(this.width, this.height, 1, 1);\n\t\tthis.rectangleMesh = new THREE.Mesh(geometry, this.rectangleMaterial);\n\t\tthis.rectangleMesh.layers.set(this.layer);\n\t\tthis.container.add(this.rectangleMesh);\n\t}\n\n\tinitText() {\n\t\tlet material = (this.textMaterial = this.fontGenerator.createFontMaterial(1));\n\t\tlet textMesh = (this.textMesh = this.section.initTextMesh(this.text, material, this.container));\n\t\ttextMesh.layers.set(this.layer);\n\t\tconst textScale = 0.5;\n\t\tlet titleMeshLength = computeMeshBoundingBox(textMesh).length.multiplyScalar(textScale);\n\t\ttextMesh.scale.setScalar(textScale);\n\t\ttextMesh.position.set(-titleMeshLength.x / 2, -titleMeshLength.y / 3, 0);\n\t\tthis.container.add(this.textMesh);\n\t}\n\n\tinitHitArea() {\n\t\tthis.hitArea = this.rectangleMesh;\n\t\tthis.hitArea.name = this.name;\n\t}\n\n\tget opacity() {\n\t\treturn this.textMaterial.uniforms.opacity.value;\n\t}\n\n\tset opacity(val) {\n\t\tthis.textMaterial.uniforms.opacity.value = val;\n\t\tthis.rectangleMaterial.uniforms.opacity.value = val;\n\t}\n\n\tresize() {}\n\n\tupdate(time) {\n\t\tthis.rectangleMaterial.uniforms.time.value += time;\n\t}\n}\n","import * as THREE from 'three';\nimport { Section } from '../common/Section';\nimport { AnimeNameTitle } from '../common/AnimeNameTitle';\nimport {\n\tBGUniformsConfig,\n\tParticleUniformsConfig,\n\tTextUniformConfigList,\n\tGalleryConfig,\n\tTextConfig,\n\tAnimeNameList,\n\tAnimeTitleUniformsList\n} from './const/config';\nimport { computeMeshBoundingBox, clamp } from 'JS/Utils';\n// Modules\nimport { BGMaterial } from 'MODULES/BGMaterial/BGMaterial';\nimport { GalleryTexture } from 'MODULES/GalleryTexture/GalleryTexture';\nimport { ParticlePolygon } from 'MODULES/ParticlePolygon/ParticlePolygon';\nimport { ArrowButton } from 'MODULES/Button/';\n\nimport { gsap } from 'gsap';\n// Test\nimport { OrbitControls } from 'LIB/threejs/controls/OrbitControls';\nimport { initBGGUI, initAnimeTitleGUI } from '../common/InitGUI';\nimport * as dat from 'dat.gui';\n\nexport class AnimeSection extends Section {\n\tconstructor(viewer) {\n\t\tsuper(viewer);\n\t\tthis.name = 'AnimeSection';\n\t\tthis.debug = 0;\n\n\t\tthis.sceneRotateXLimit = Math.PI / 9;\n\t\tthis.rotateGroup = new THREE.Group();\n\t\tthis.scene.add(this.rotateGroup);\n\n\t\tthis.cameraInitPos = new THREE.Vector3(0, 0, 100);\n\t\tthis.cameraLookAtPos = new THREE.Vector3(0, 0, 0);\n\n\t\tthis.intersectsArr = [];\n\t\tthis.intersects = []; // intersect result\n\t\tthis.raycaster = new THREE.Raycaster();\n\t\tthis.raycaster.layers.set(this.layers.UI_LAYER);\n\n\t\tthis.curAnimeIndex = 0;\n\t\tthis.animeProgress = { value: 0 };\n\t\tthis.animeDuration = 2;\n\t\tthis.isAnimeChanging = false;\n\n\t\tthis.clickNDCPos = new THREE.Vector2();\n\t}\n\n\tinit() {\n\t\tthis.initBackground();\n\t\tthis.initParticles();\n\t\tthis.initCamera();\n\t\tthis.initGalleryTextures();\n\t\tthis.initText();\n\t\tthis.initUIPanel();\n\t\tthis.initEvent();\n\n\t\tif (this.debug) this.initGUI();\n\t}\n\n\tinitUIPanel() {\n\t\t// Close Btn\n\t\tthis.arrowBtn = new ArrowButton(this, this.layers.UI_LAYER);\n\t\tlet arrowContainer = this.arrowBtn.container;\n\t\tconst arrowBtnScale = 0.4;\n\t\tthis.arrowBtnBox = computeMeshBoundingBox(this.arrowBtn.mesh).length.multiplyScalar(arrowBtnScale);\n\t\tarrowContainer.scale.setScalar(arrowBtnScale);\n\t\tthis.uiScene.add(arrowContainer);\n\t\tthis.resizeUIPanel(this.width, this.height);\n\t}\n\n\tresizeUIPanel(width, height) {\n\t\tlet arrowContainer = this.arrowBtn.container;\n\t\tconst topOffset = 0;\n\t\tconst leftOffset = width / 2 - this.arrowBtnBox.x / 2;\n\t\tarrowContainer.position.set(leftOffset, topOffset, 0);\n\t}\n\n\tinitText() {\n\t\tlet material = (this.textMaterial = this.fontGenerator.createFontMaterial(1));\n\t\tmaterial.uniforms.time = { value: 0.0 };\n\t\t// Apply text color\n\t\tlet initTextUniforms = TextUniformConfigList[0];\n\t\tObject.keys(initTextUniforms).map(key => {\n\t\t\tmaterial.uniforms[`${key}`] = { value: initTextUniforms[key].clone() };\n\t\t});\n\n\t\tthis.titleMesh = this.initTextMesh(TextConfig.mainTitle, material);\n\t\tthis.subTitleMesh = this.initTextMesh(TextConfig.subTitle, material);\n\n\t\tthis.animeNameTitleList = new Array(AnimeNameList.length).fill().map((ele, index) => {\n\t\t\treturn new AnimeNameTitle(this, AnimeNameList[index], AnimeTitleUniformsList[index]);\n\t\t});\n\n\t\tthis.resizeText(this.width, this.height);\n\t}\n\n\tresizeText(width, height) {\n\t\tif (!this.isMobile) {\n\t\t\tthis.resizeTextForPC(width, height);\n\t\t} else {\n\t\t\tthis.resizeTextForMobile(width, height);\n\t\t}\n\t\tthis.animeNameTitleList[this.curAnimeIndex].resize(width, height);\n\t}\n\n\tresizeTextForPC(width, height) {\n\t\tlet { titleMesh, subTitleMesh } = this;\n\t\tconst topOffset = height / 4;\n\t\tconst leftOffset = -width / 2.25;\n\t\tconst titleScale = clamp(width / 1000, 1.2, 1.4);\n\t\ttitleMesh.scale.setScalar(titleScale);\n\t\ttitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\tconst subTitleScale = clamp(width / 2000, 0.6, 0.7);\n\t\tlet subBBox = computeMeshBoundingBox(subTitleMesh).length.multiplyScalar(subTitleScale);\n\t\tsubTitleMesh.scale.setScalar(subTitleScale);\n\t\tsubTitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\t// Gap between title and subtitle\n\t\tsubTitleMesh.position.y = topOffset - subBBox.y - 20;\n\t}\n\n\tresizeTextForMobile(width, height) {\n\t\tlet { titleMesh, subTitleMesh } = this;\n\t\tconst topOffset = height / 2.5;\n\t\tconst leftOffset = -width / 2.25;\n\t\tconst titleScale = clamp(width / 500, 0.7, 0.9);\n\t\ttitleMesh.scale.setScalar(titleScale);\n\t\ttitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\tconst subTitleScale = clamp(width / 1000, 0.35, 0.45);\n\t\tlet subBBox = computeMeshBoundingBox(subTitleMesh).length.multiplyScalar(subTitleScale);\n\t\tsubTitleMesh.scale.setScalar(subTitleScale);\n\t\tsubTitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\t// Gap between title and subtitle\n\t\tsubTitleMesh.position.y = topOffset - subBBox.y - 20;\n\t}\n\n\tinitCamera() {\n\t\tthis.camera.position.copy(this.cameraInitPos);\n\t\tthis.camera.lookAt(this.cameraLookAtPos);\n\t\t// Test\n\t\t// this.control = new OrbitControls(this.camera, this.viewer.container);\n\t}\n\n\tinitParticles() {\n\t\tthis.particles = new ParticlePolygon(this.rotateGroup);\n\t\tthis.particles.color = ParticleUniformsConfig[0].color.clone();\n\t}\n\n\tinitGalleryTextures() {\n\t\tthis.galleryTextures = [];\n\t\tlet textureArray1 = [this.assetLibrary.get(GalleryConfig.galleryTexture1[0]), null];\n\t\tlet textureArray2 = [this.assetLibrary.get(GalleryConfig.galleryTexture2[0]), null];\n\t\tlet galleryTexture1 = (this.galleryTexture1 = new GalleryTexture(this.rotateGroup, textureArray1, {\n\t\t\twidth: 100\n\t\t}));\n\t\tgalleryTexture1.mesh.layers.set(this.layers.TEX_LAYER);\n\n\t\tlet galleryTexture2 = (this.galleryTexture2 = new GalleryTexture(this.rotateGroup, textureArray2, {\n\t\t\twidth: 50\n\t\t}));\n\t\tgalleryTexture2.mesh.layers.set(this.layers.TEX_LAYER);\n\n\t\t// Once\n\t\tgalleryTexture1.material.uniforms.uProgress = this.animeProgress;\n\t\tgalleryTexture2.material.uniforms.uProgress = this.animeProgress;\n\n\t\tthis.galleryTextures.push(galleryTexture1);\n\t\tthis.galleryTextures.push(galleryTexture2);\n\n\t\tthis.resizeGalleryTextures(this.width, this.height);\n\t}\n\n\tresizeGalleryTextures(width, height) {\n\t\tlet { galleryTexture1, galleryTexture2 } = this;\n\t\tif (!this.isMobile) {\n\t\t\tgalleryTexture1.mesh.scale.setScalar(clamp(width / 1800, 0.8, 1.2));\n\t\t\tgalleryTexture1.mesh.position.x = 30 * galleryTexture1.mesh.scale.x;\n\t\t\tgalleryTexture1.mesh.position.y = 10 * galleryTexture1.mesh.scale.x;\n\n\t\t\tgalleryTexture2.mesh.scale.setScalar(clamp(width / 1800, 0.8, 1.2));\n\t\t\tgalleryTexture2.mesh.position.y = -20 * galleryTexture1.mesh.scale.x;\n\t\t\tgalleryTexture2.mesh.position.x = -30 * galleryTexture1.mesh.scale.x;\n\t\t} else {\n\t\t\tgalleryTexture1.mesh.scale.setScalar(clamp(width / 800, 0.5, 0.8));\n\t\t\tgalleryTexture1.mesh.position.x = 5 * galleryTexture1.mesh.scale.x;\n\t\t\t// galleryTexture1.mesh.position.y = 0 * galleryTexture1.mesh.scale.x;\n\n\t\t\tgalleryTexture2.mesh.scale.setScalar(clamp(width / 800, 0.5, 0.8));\n\t\t\tgalleryTexture2.mesh.position.y = -50 * galleryTexture1.mesh.scale.x;\n\t\t\tgalleryTexture2.mesh.position.x = -10 * galleryTexture1.mesh.scale.x;\n\t\t}\n\t}\n\n\tinitGUI() {\n\t\tconst gui = new dat.GUI();\n\t\tinitBGGUI(gui, this.bgMaterial);\n\t\tinitAnimeTitleGUI(gui, this.animeNameTitleList[this.curAnimeIndex].material);\n\t\tlet { particles, textMaterial } = this;\n\t\tlet params = {\n\t\t\t// Particle\n\t\t\tparticleColor: particles.color.getStyle(),\n\t\t\tparticleSize: particles.size,\n\t\t\t// Text\n\t\t\ttextTopColor: textMaterial.uniforms.topColor.value.getStyle(),\n\t\t\ttextBottomColor: textMaterial.uniforms.bottomColor.value.getStyle()\n\t\t};\n\t\t// Particle\n\t\tconst particleFolder = gui.addFolder('Particle');\n\t\tparticleFolder\n\t\t\t.addColor(params, 'particleColor')\n\t\t\t.name('color')\n\t\t\t.onChange(value => {\n\t\t\t\tparticles.color.setStyle(value);\n\t\t\t});\n\t\tparticleFolder\n\t\t\t.add(params, 'particleSize', 0, 5)\n\t\t\t.name('size')\n\t\t\t.onChange(value => {\n\t\t\t\tparticles.size = value;\n\t\t\t});\n\t\tparticleFolder.open();\n\t\t// Text\n\t\tconst textFolder = gui.addFolder('Text');\n\t\ttextFolder\n\t\t\t.addColor(params, 'textTopColor')\n\t\t\t.name('topColor')\n\t\t\t.onChange(value => {\n\t\t\t\ttextMaterial.uniforms.topColor.value.setStyle(value);\n\t\t\t});\n\t\ttextFolder\n\t\t\t.addColor(params, 'textBottomColor')\n\t\t\t.name('bottomColor')\n\t\t\t.onChange(value => {\n\t\t\t\ttextMaterial.uniforms.bottomColor.value.setStyle(value);\n\t\t\t});\n\t\ttextFolder.open();\n\t}\n\n\tinitBackground() {\n\t\tlet bgMaterial = (this.bgMaterial = new BGMaterial(BGUniformsConfig[0]));\n\t\tlet bgMesh = new THREE.Mesh(this.viewer.screenGeometry, bgMaterial);\n\t\tbgMesh.layers.set(this.layers.BG_LAYER);\n\t\tthis.scene.add(bgMesh);\n\t}\n\n\tswapAnime() {\n\t\tif (this.isAnimeChanging) return;\n\t\tthis.isAnimeChanging = true;\n\t\tgsap.killTweensOf(this.animeNameTitleList[this.curAnimeIndex].material.uniforms.opacity);\n\t\t// Set next anime index\n\t\tlet nextAnimeIndex = (this.curAnimeIndex + 1) % GalleryConfig.galleryTexture1.length;\n\t\tlet tempCurAnimeIndex = this.curAnimeIndex;\n\t\tthis.curAnimeIndex = nextAnimeIndex;\n\t\tthis.galleryTextures.forEach((galleryTexture, index) => {\n\t\t\tlet config = GalleryConfig[`galleryTexture${index + 1}`];\n\t\t\tgalleryTexture.setNextTexture(this.assetLibrary.get(config[nextAnimeIndex]));\n\t\t});\n\t\t// Animation\n\t\t// galleryTextures Animation\n\t\tgsap.fromTo(\n\t\t\tthis.animeProgress,\n\t\t\t{ value: 0 },\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tduration: this.animeDuration,\n\t\t\t\tease: 'power2.out',\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tthis.galleryTextures.forEach(galleryTexture => {\n\t\t\t\t\t\tgalleryTexture.swapTextures();\n\t\t\t\t\t});\n\t\t\t\t\tgsap.set(this.animeProgress, { value: 0 });\n\t\t\t\t\tthis.isAnimeChanging = false;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// BG Animation\n\t\tlet nextBGUniforms = BGUniformsConfig[nextAnimeIndex];\n\t\tObject.keys(nextBGUniforms).map(key => {\n\t\t\tif (typeof nextBGUniforms[`${key}`] === 'number') {\n\t\t\t\tgsap.to(this.bgMaterial.uniforms[`${key}`], {\n\t\t\t\t\tduration: this.animeDuration,\n\t\t\t\t\tease: 'power2.out',\n\t\t\t\t\tvalue: nextBGUniforms[`${key}`]\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgsap.to(this.bgMaterial.uniforms[`${key}`].value, {\n\t\t\t\t\tduration: this.animeDuration,\n\t\t\t\t\tease: 'power2.out',\n\t\t\t\t\t...nextBGUniforms[`${key}`]\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t// Particle Animation\n\t\tlet nextParticleUniforms = ParticleUniformsConfig[nextAnimeIndex];\n\t\tgsap.to(this.particles.color, {\n\t\t\tduration: this.animeDuration,\n\t\t\tease: 'power2.out',\n\t\t\t...nextParticleUniforms.color\n\t\t});\n\t\tthis.particles.type = nextAnimeIndex;\n\t\t// Text Animation\n\t\tlet nextTextUniforms = TextUniformConfigList[nextAnimeIndex];\n\t\tObject.keys(nextTextUniforms).map(key => {\n\t\t\tgsap.to(this.textMaterial.uniforms[`${key}`].value, {\n\t\t\t\tduration: this.animeDuration,\n\t\t\t\tease: 'power2.out',\n\t\t\t\t...nextTextUniforms[`${key}`]\n\t\t\t});\n\t\t});\n\t\t// AnimeTitle Animation\n\t\tlet curAnimeTitle = this.animeNameTitleList[tempCurAnimeIndex];\n\t\tlet nextAnimeTitle = this.animeNameTitleList[nextAnimeIndex];\n\t\tnextAnimeTitle.resize(this.viewer.width, this.viewer.height);\n\t\tgsap.fromTo(\n\t\t\tcurAnimeTitle.material.uniforms.opacity,\n\t\t\t{ value: 1 },\n\t\t\t{ value: 0, duration: 0.5, ease: 'power2.out' }\n\t\t);\n\t\tgsap.fromTo(\n\t\t\tnextAnimeTitle.material.uniforms.opacity,\n\t\t\t{ value: 0 },\n\t\t\t{ value: 1, duration: 0.5, delay: 0.5, ease: 'power2.out' }\n\t\t);\n\t}\n\n\twhileVisible(order) {\n\t\tlet cameraPos = this.camera.position;\n\t\tlet textOpacity = this.textMaterial.uniforms.opacity;\n\t\tgsap.killTweensOf(cameraPos);\n\t\tgsap.killTweensOf(textOpacity);\n\t\tif (order === 'pre') {\n\t\t\tgsap.fromTo(cameraPos, { y: -30 }, { y: 0, duration: this.viewer.scrollAnimeDuration, ease: 'power2.out' });\n\t\t} else {\n\t\t\tgsap.fromTo(cameraPos, { y: 30 }, { y: 0, duration: this.viewer.scrollAnimeDuration, ease: 'power2.out' });\n\t\t}\n\t\tgsap.fromTo(textOpacity, { value: 0 }, { value: 1, duration: 1.5, delay: 0.8, ease: 'power2.out' });\n\t\tgsap.to(this.animeNameTitleList[this.curAnimeIndex].material.uniforms.opacity, {\n\t\t\tvalue: 1,\n\t\t\tduration: 1,\n\t\t\tdelay: 1,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\tgsap.to(this.arrowBtn, { opacity: 0.8, duration: 1.5, delay: 0.5, ease: 'power2.out' });\n\t}\n\n\twhileNoVisible(order) {\n\t\tlet cameraPos = this.camera.position;\n\t\tlet textOpacity = this.textMaterial.uniforms.opacity;\n\t\tgsap.killTweensOf(cameraPos);\n\t\tgsap.killTweensOf(textOpacity);\n\t\tif (order === 'pre') {\n\t\t\tgsap.fromTo(cameraPos, { y: 0 }, { y: 30, duration: this.viewer.scrollAnimeDuration, ease: 'power2.out' });\n\t\t} else {\n\t\t\tgsap.fromTo(cameraPos, { y: 0 }, { y: -30, duration: this.viewer.scrollAnimeDuration, ease: 'power2.out' });\n\t\t}\n\t\tgsap.fromTo(textOpacity, { value: 1 }, { value: 0, duration: 0.5, ease: 'power2.out' });\n\t\tgsap.to(this.animeNameTitleList[this.curAnimeIndex].material.uniforms.opacity, {\n\t\t\tvalue: 0,\n\t\t\tduration: 1,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\tgsap.to(this.arrowBtn, { opacity: 0.0, duration: 0.8, ease: 'power2.out' });\n\t}\n\n\tinitEvent() {\n\t\tif (!this.isMobile) {\n\t\t\tthis.eventHandler.onMouseMoveEvent.bind(this.onMouseMove.bind(this));\n\t\t} else {\n\t\t\tthis.eventHandler.onTouchMoveEvent.bind(this.onMouseMove.bind(this));\n\t\t}\n\t\tthis.intersectsArr.push(this.arrowBtn.hitArea);\n\t\tthis.eventHandler.onClickEvent.bind(this.onClick.bind(this));\n\t}\n\n\tonClick(event) {\n\t\tif (!this.visible) return;\n\t\tif (this.isMobile) {\n\t\t\tlet x = event.clientX;\n\t\t\tlet y = event.clientY;\n\t\t\tthis.clickNDCPos.set((x / window.innerWidth) * 2 - 1, (-y / window.innerHeight) * 2 + 1);\n\t\t\tconsole.log(this.clickNDCPos);\n\t\t\tthis.raycaster.setFromCamera(this.clickNDCPos, this.uiCamera);\n\t\t\tthis.intersects = this.raycaster.intersectObjects(this.intersectsArr);\n\t\t}\n\t\tif (!this.intersects.length) return;\n\t\tlet intersectsRes = this.intersects[0].object;\n\t\tif (intersectsRes.name === 'arrowButton' && !this.isAnimeChanging) {\n\t\t\tthis.swapAnime();\n\t\t}\n\t}\n\n\tonMouseMove(event) {\n\t\tif (!this.visible) return;\n\t\tlet positionNormX = this.state.pointer.positionNorm[0] - 0.5;\n\t\tlet sceneRoationTarget = positionNormX * this.sceneRotateXLimit;\n\t\tgsap.killTweensOf(this.rotateGroup.rotation);\n\t\tgsap.to(this.rotateGroup.rotation, { y: sceneRoationTarget, duration: 1, ease: 'power2.out' });\n\t\t// Button\n\t\tthis.raycaster.setFromCamera(this.state.pointer.ndcPosition, this.uiCamera);\n\t\tthis.intersects = this.raycaster.intersectObjects(this.intersectsArr);\n\t\tif (this.intersects.length > 0) {\n\t\t\tdocument.body.setAttribute('cursor', 'pointer');\n\t\t} else {\n\t\t\tdocument.body.removeAttribute('cursor');\n\t\t}\n\t}\n\n\tresize(width, height, dpr) {\n\t\tconst pixelWidth = width * dpr;\n\t\tconst pixelHeight = height * dpr;\n\t\tthis.postProcessingMaterial.resize(pixelWidth, pixelHeight);\n\t\tthis.camera.aspect = width / height;\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.uiCamera.left = -width / 2;\n\t\tthis.uiCamera.right = width / 2;\n\t\tthis.uiCamera.top = height / 2;\n\t\tthis.uiCamera.bottom = -height / 2;\n\t\tthis.uiCamera.updateProjectionMatrix();\n\t\tthis.resizeText(width, height);\n\t\tthis.resizeGalleryTextures(width, height);\n\t\tthis.resizeUIPanel(width, height);\n\t}\n\n\trender({ renderer, orthoCamera, target, deltaTime } = {}) {\n\t\tif (!this.visible) return;\n\t\tthis.textMaterial.uniforms.time.value += deltaTime;\n\t\t// BG\n\t\torthoCamera.layers.set(this.layers.BG_LAYER);\n\t\trenderer.render(this.scene, orthoCamera);\n\t\t// Scene\n\t\tthis.camera.layers.set(this.layers.SCENE_LAYER);\n\t\tif (this.particles) this.particles.render(deltaTime);\n\t\trenderer.render(this.scene, this.camera);\n\t\t// Texture\n\t\tthis.camera.layers.set(this.layers.TEX_LAYER);\n\t\tif (this.galleryTextures) this.galleryTextures.forEach(texture => texture.render(deltaTime));\n\t\trenderer.render(this.scene, this.camera);\n\t\t// UI\n\t\tthis.arrowBtn.update(deltaTime);\n\t\tthis.uiCamera.layers.set(this.layers.UI_LAYER);\n\t\trenderer.render(this.uiScene, this.uiCamera);\n\t}\n}\n","import * as THREE from 'three';\n\nconst BGUniformsConfig = {\n\tbaseColor: new THREE.Color('rgb(33,33,33)'),\n\tarea1Color: new THREE.Color('rgb(255,255,255)'),\n\tarea1Radius: 1,\n\tarea1Position: new THREE.Vector2(1, 0),\n\tarea2Color: new THREE.Color('rgb(255,255,255)'),\n\tarea2Radius: 1,\n\tarea2Position: new THREE.Vector2(1, 1)\n};\n\nconst TextUniformConfig = {\n\ttopColor: new THREE.Color('rgb(255,255,255)'),\n\tbottomColor: new THREE.Color('rgb(0,0,255)')\n};\n\nconst TextConfig = {\n\tmainTitle: `Work !`,\n\tsubTitle: `three-viewer`,\n\tcontent: `This is a PBR material implementation based \n\ton pre-processing by envtools. Here You can easily \n\tcompare and test different formulas and effects.`\n};\n\nconst AnimeName = '[ No Game No Life ]';\n\nconst AnimeTitleUniforms = {\n\ttopColor: new THREE.Color('rgb(255,255,255)'),\n\tbottomColor: new THREE.Color('rgb(0,0,255)')\n};\n\nconst diffuseEquation = ['Lambert', 'Burley', 'OrenNayar', 'Gotanda', 'None'];\n\nconst specularFresnelEquation = ['Schlick', 'CookTorrance', 'None'];\n\nconst specularNDFEquation = ['GGX', 'BlinnPhong', 'Beckmann'];\n\nconst specularVisEquation = ['SmithJointApprox', 'Implicit', 'Neumann', 'Kelemen', 'Schlick', 'Smith', 'HammonApprox'];\n\nconst specularAOList = ['Seblagarde', 'Marmosetco', 'None'];\n\nconst panelDefinesRegs = /(ENABLE_IBL)|(ENABLE_LIGHT)|(ENABLE_ANISOTROPY)|(ENABLE_CLEARCOAT)|(ENERGY_COMPENSATION)|(DIFFUSE_*)|(F_*)|(NDF_*)|(V_*)|(SPECULAR_AO_*)|(GEOMETRIC_SPECULAR_AA)|(MS_SPECULAR_AO)|(MS_DIFFUSE_AO)/;\n\nexport {\n\tBGUniformsConfig,\n\tTextUniformConfig,\n\tTextConfig,\n\tAnimeName,\n\tAnimeTitleUniforms,\n\tdiffuseEquation,\n\tspecularFresnelEquation,\n\tspecularNDFEquation,\n\tspecularVisEquation,\n\tspecularAOList,\n\tpanelDefinesRegs\n};\n","import * as THREE from 'three';\n\nconst bgDefaultUniforms = {\n\tuEnvBrightness: {\n\t\tvalue: 1.0\n\t},\n\tuEnvironmentTransform: {\n\t\tvalue: new THREE.Matrix3()\n\t}\n};\n\nconst pbrDefaultUniforms = {\n\troughness: {\n\t\tvalue: 0.5\n\t},\n\tmetalness: {\n\t\tvalue: 1\n\t},\n\tcolor: {\n\t\tvalue: new THREE.Color(0xffffff)\n\t},\n\temissive: {\n\t\tvalue: new THREE.Color(0x000000)\n\t},\n\tuEnvironmentTransform: {\n\t\tvalue: new THREE.Matrix3()\n\t},\n\tuEnvBrightness: {\n\t\tvalue: 1.0\n\t},\n\tuSpecularAAVariance: {\n\t\tvalue: 0.1\n\t},\n\tuSpecularAAThreshold: {\n\t\tvalue: 1.0\n\t},\n\t// Anisotropy\n\tuAnisotropyRotation: {\n\t\tvalue: 0\n\t},\n\tuAnisotropyFactor: {\n\t\tvalue: 0.5\n\t},\n\t// ClearCoat\n\tuClearCoatRoughness: {\n\t\tvalue: 0.5\n\t},\n\tuClearCoat: {\n\t\tvalue: 0.5\n\t}\n};\n\nconst pbrDefaultDefines = {\n\tENABLE_IBL: 1,\n\tENABLE_LIGHT: 1,\n\tENERGY_COMPENSATION: 1,\n\tDIFFUSE_LAMBERT: 1,\n\tNDF_GGX: 1,\n\tF_SCHLICK: 1,\n\tV_SMITHJOINTAPPROX: 1,\n\t// ENABLE_ANISOTROPY: 1,\n\t// ENABLE_CLEARCOAT: 1,\n\t// GEOMETRIC_SPECULAR_AA: 1\n\tSPECULAR_AO_SEBLAGARDE: 1,\n\tMS_SPECULAR_AO: 1,\n\tMS_DIFFUSE_AO: 1\n};\n\nexport { pbrDefaultUniforms, bgDefaultUniforms, pbrDefaultDefines };\n","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\nattribute vec2 uv;\\n\\nuniform vec2 resolution;\\nuniform vec2 imageResolution;\\n\\nvarying vec2 vUv;\\n\\nvoid main(void) {\\n\\t// source ratio / full image ratio => uv.x * ratio.x to set full screen image\\n\\tvec2 ratio = vec2(\\n\\t\\tmin((resolution.x / resolution.y) / (imageResolution.x / imageResolution.y), 1.0),\\n\\t\\tmin((resolution.y / resolution.x) / (imageResolution.y / imageResolution.x), 1.0)\\n\\t);\\n\\n\\t// Center\\n\\tvec2 updateUv = vec2(\\n\\t\\tuv.x * ratio.x + (1.0 - ratio.x) * 0.5,\\n\\t\\tuv.y * ratio.y + (1.0 - ratio.y) * 0.5\\n\\t);\\n\\n\\tvUv = updateUv;\\n\\tgl_Position = vec4(position.xy, 1.0, 1.0);\\n}\\n\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform float time;\\nuniform sampler2D texture;\\nuniform vec2 resolution;\\nuniform float progress;\\nvarying vec2 vUv;\\nuniform bool isNext;\\nuniform vec2 uvTransformSpeed; // [down, up]\\nuniform float opacity;\\n\\nuniform float vignetteDarkness;\\nuniform float vignetteOffset;\\n\\nvoid main(void) {\\n\\tvec2 uv = vUv;\\n\\n\\tfloat y = gl_FragCoord.y / resolution.y; // [0, 1]\\n\\tfloat offset = progress;\\n\\tif(isNext){\\n        offset = 1. - progress;\\n\\t\\tuv.y += offset / uvTransformSpeed.x;\\n    }else{\\n\\t\\tuv.y -= offset / uvTransformSpeed.y;\\n\\t}\\n\\tvec4 texColor = texture2D(texture, uv);\\n\\n\\t// Vignette\\n\\tconst vec2 center = vec2(0.5);\\n\\tfloat d = distance(uv, center);\\n\\ttexColor *= smoothstep(0.8, vignetteOffset * 0.799, d * (vignetteDarkness + vignetteOffset));\\n\\n\\ttexColor.a *= opacity;\\n\\t\\n\\tgl_FragColor = texColor;\\n}\\n\";","import * as THREE from 'three';\nimport vertexShader from './shaders/image.vs';\nimport fragmentShader from './shaders/image.fs';\n\nexport class TextureBG extends THREE.Mesh {\n\tconstructor(texture, ppMaterial, opts = {}) {\n\t\tlet imageWidth = texture.image.width;\n\t\tlet imageHeight = texture.image.height;\n\t\tconst geometry = new THREE.PlaneBufferGeometry(2, 2);\n\t\tconst material = new THREE.RawShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\ttime: {\n\t\t\t\t\ttype: 'f',\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\tprogress: {\n\t\t\t\t\ttype: 'f',\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\tresolution: {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: new THREE.Vector2(window.innerWidth, window.innerHeight)\n\t\t\t\t},\n\t\t\t\timageResolution: {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: new THREE.Vector2(imageWidth, imageHeight)\n\t\t\t\t},\n\t\t\t\ttexture: {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: texture\n\t\t\t\t},\n\t\t\t\tisNext: { value: false },\n\t\t\t\tuvTransformSpeed: {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: opts.uvTransformSpeed || new THREE.Vector2(2, 2)\n\t\t\t\t},\n\t\t\t\topacity: { value: 1.0 },\n\t\t\t\tvignetteDarkness: { value: 1 },\n\t\t\t\tvignetteOffset: { value: 0.2 }\n\t\t\t},\n\t\t\tvertexShader,\n\t\t\tfragmentShader,\n\t\t\ttransparent: true,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\tsuper(geometry, material);\n\t\tthis.name = 'TextureBGMesh';\n\n\t\t// Sync postProcessingMaterial\n\t\tmaterial.uniforms.progress = ppMaterial.uniforms.progress;\n\t\tmaterial.uniforms.isNext = ppMaterial.uniforms.isNext;\n\t}\n\n\tupdate(time) {\n\t\tthis.material.uniforms.time.value += time;\n\t}\n\n\tresize(width, height) {\n\t\tthis.material.uniforms.resolution.value.set(width, height);\n\t}\n}\n","export default \"#define GLSLIFY 1\\nvarying vec3 vViewNormal;\\n\\nvoid main() {\\n    vViewNormal = position;\\n    vec4 pos = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    // pos.z = 1.;\\n    gl_Position = pos;\\n}\\n\";","export default \"#define GLSLIFY 1\\nuniform samplerCube envMap;\\nuniform mat3 uEnvironmentTransform;\\nuniform float uEnvBrightness;\\nuniform vec2 uEnvironmentSize;\\nuniform float opacity;\\n\\nvarying vec3 vViewNormal;\\n\\nvec3 cubemapSeamlessFixDirection(const in vec3 direction, const in float scale ){\\n    vec3 dir = direction;\\n    // http://seblagarde.wordpress.com/2012/06/10/amd-cubemapgen-for-physically-based-rendering/\\n    float M = max(max(abs(dir.x), abs(dir.y)), abs(dir.z));\\n\\n    if (abs(dir.x) != M) dir.x *= scale;\\n    if (abs(dir.y) != M) dir.y *= scale;\\n    if (abs(dir.z) != M) dir.z *= scale;\\n\\n    return dir;\\n}\\n\\nvec4 textureCubemap(const in samplerCube tex, const in vec3 dir){\\n    vec4 rgba = textureCube(tex, dir);\\n    return LogLuvToLinear(rgba);\\n}\\n\\n// Seamless cubemap for background\\nvec4 textureCubeFixed(const in samplerCube tex, const in vec3 direction){\\n    // http://seblagarde.wordpress.com/2012/06/10/amd-cubemapgen-for-physically-based-rendering/\\n    float scale = 1.0 - 1.0 / uEnvironmentSize[0];\\n    vec3 dir = cubemapSeamlessFixDirection(direction, scale);\\n    return textureCubemap(tex, dir);\\n}\\n\\nvoid main(){\\n    vec3 direction = normalize(vViewNormal);\\n    direction = uEnvironmentTransform * direction;\\n    vec4 samplerColor = uEnvBrightness * textureCubeFixed(envMap, direction);\\n    samplerColor.a *= opacity;\\n    gl_FragColor = samplerColor;\\n    #include <tonemapping_fragment>\\n    #include <encodings_fragment>\\n}\\n\";","import * as THREE from 'three';\nimport backgroundVS from './shaders/backgroundVS';\nimport backgroundFS from './shaders/backgroundFS';\n\nclass BackgroundMaterial extends THREE.ShaderMaterial {\n\tconstructor(options) {\n\t\tlet { envMap, uBGEnvironmentSize } = options;\n\t\tlet uniforms = {\n\t\t\tenvMap: { value: envMap },\n\t\t\tuEnvironmentSize: { value: uBGEnvironmentSize },\n\t\t\tuEnvBrightness: { value: 1.0 },\n\t\t\tuEnvironmentTransform: { value: new THREE.Matrix3() },\n\t\t\topacity: { value: 0.0 }\n\t\t};\n\t\tsuper({\n\t\t\tuniforms,\n\t\t\tvertexShader: backgroundVS,\n\t\t\tfragmentShader: backgroundFS,\n\t\t\tside: THREE.DoubleSide,\n\t\t\ttransparent: true\n\t\t});\n\t}\n}\n\nexport { BackgroundMaterial };\n","import * as THREE from 'three';\nimport { BackgroundMaterial } from './BackgroundMaterial';\n\nclass Background extends THREE.Mesh {\n\tconstructor(uniforms, size = 1000) {\n\t\tconst radius = size / 2;\n\t\tlet sphere = new THREE.SphereGeometry(radius, 20, 20);\n\t\tlet material = new BackgroundMaterial(uniforms);\n\t\tsuper(sphere, material);\n\t\tthis.radius = radius;\n\t\tthis.sphere = sphere;\n\t}\n\n\tget envMap() {\n\t\treturn this.material.envMap;\n\t}\n\n\tset envMap(envMap) {\n\t\tthis.material.envMap = envMap;\n\t}\n\n\tget mesh() {\n\t\treturn this.sphere;\n\t}\n\n\tsetSize(size) {\n\t\tlet scale = size / this.radius;\n\t\t// Half\n\t\tthis.scale.setScalar(scale);\n\t}\n}\n\nexport { Background };\n","import * as THREE from 'three';\nimport { Section } from '../common/Section';\nimport { AnimeNameTitle } from '../common/AnimeNameTitle';\nimport {\n\tTextUniformConfig,\n\tTextConfig,\n\tAnimeName,\n\tAnimeTitleUniforms,\n\tdiffuseEquation,\n\tspecularFresnelEquation,\n\tspecularNDFEquation,\n\tspecularVisEquation,\n\tspecularAOList,\n\tpanelDefinesRegs\n} from './const/config';\nimport { pbrDefaultDefines, pbrDefaultUniforms } from './const/defaultParams';\nimport { computeMeshBoundingBox, clamp } from 'JS/Utils';\n// Modules\nimport { TextureBG } from 'MODULES/TextureBG/TextureBG';\nimport { PBRMaterial, PBRProgram } from 'MODULES/PBRMaterial/';\nimport { Background } from 'MODULES/CubeBG/Background';\nimport { RingButton, CloseButton } from 'MODULES/Button/';\n\nimport { gsap } from 'gsap';\nimport * as dat from 'dat.gui';\n// Test\nimport { OrbitControls } from 'LIB/threejs/controls/OrbitControls';\nimport { initAnimeTitleGUI } from '../common/InitGUI';\n\nexport class WorkSection extends Section {\n\tconstructor(viewer) {\n\t\tsuper(viewer);\n\t\tthis.name = 'WorkSection';\n\t\tthis.debug = 0;\n\t\tthis.visible = true;\n\t\tthis.pbrProgram = new PBRProgram();\n\n\t\tthis.cameraInitPos = new THREE.Vector3(0, 0, 3);\n\t\tthis.cameraLookAtPos = new THREE.Vector3(0, 0, 0);\n\n\t\tthis.intersectsArr = [];\n\t\tthis.intersects = []; // intersect result\n\t\tthis.raycaster = new THREE.Raycaster();\n\t\tthis.raycaster.layers.set(this.layers.UI_LAYER);\n\t\tthis.isModelViewing = false;\n\n\t\t// Env param\n\t\tthis.envRotation = 0;\n\t\tthis.envRotationFromPanel = new THREE.Matrix4().makeRotationY(this.envRotation);\n\t\tthis.envRotationMat4 = new THREE.Matrix4().copy(this.envRotationFromPanel);\n\t\tthis.envRotationMat = { value: new THREE.Matrix3().setFromMatrix4(this.envRotationMat4) };\n\t\tthis.envRotationMatBG = { value: new THREE.Matrix3().copy(this.envRotationMat.value) };\n\t\tthis.envBrightness = { value: 1.0 };\n\t\tthis.sunLightPanelRotateMat = new THREE.Matrix4();\n\t\tthis.cameraRotationMatrix = new THREE.Matrix4();\n\n\t\t// Model init transform\n\t\tthis.modelInitScale = 0.08;\n\t\tthis.modelInitPosY = -0.3;\n\t\tthis.modelInitRotationZ = -Math.PI / 15;\n\n\t\tthis.modelViewingScale = 0.1;\n\t\tthis.modelViewingPosY = -0.5;\n\t\tthis.modelViewingRotateZ = 0;\n\n\t\tthis.clickNDCPos = new THREE.Vector2();\n\t}\n\n\tinit() {\n\t\tthis.initBackground();\n\t\tlet environment = this.assetLibrary.get('EnvMap-Milkyway'); // Milkyway Industrial\n\t\tlet { sunlightInfo, backgroundEnv, uBGEnvironmentSize } = environment;\n\t\tthis.loadSunLight(sunlightInfo);\n\t\tthis.sunLightStartPos = this.sunLight.position.clone();\n\t\tthis.loadCubeBackground(backgroundEnv, uBGEnvironmentSize);\n\t\tthis.initCamera();\n\t\t// Load Model\n\t\tlet gltfScene = (this.gltfScene = this.assetLibrary.get('Model-Chess').scene);\n\t\tgltfScene.scale.setScalar(this.modelInitScale);\n\t\tgltfScene.position.y = this.modelInitPosY;\n\t\tgltfScene.rotation.z = this.modelInitRotationZ;\n\t\tthis.scene.add(gltfScene);\n\t\t// Load Shader\n\t\tlet { pbrVS, pbrFS } = this.pbrProgram.getPBRShader();\n\t\t// Replace PBR Material\n\t\tgltfScene.traverse(child => {\n\t\t\tif (child.isMesh) {\n\t\t\t\tchild.material = new PBRMaterial(child, environment, {\n\t\t\t\t\tpbrVS,\n\t\t\t\t\tpbrFS\n\t\t\t\t});\n\t\t\t\tchild.material.uniforms.uEnvironmentTransform = this.envRotationMat;\n\t\t\t\tchild.material.uniforms.uEnvBrightness = this.envBrightness;\n\t\t\t}\n\t\t});\n\t\tthis.initText();\n\t\tthis.initUIPanel();\n\t\tthis.initEvent();\n\n\t\tif (this.debug) this.initGUI();\n\t}\n\n\tinitGUI() {\n\t\tconst gui = new dat.GUI();\n\t\tinitAnimeTitleGUI(gui, this.animeNameTitle.material);\n\t\tlet textMaterial = this.textMaterial;\n\t\tconsole.log(this.textMaterial);\n\t\tlet params = {\n\t\t\t// Text\n\t\t\ttextTopColor: textMaterial.uniforms.topColor.value.getStyle(),\n\t\t\ttextBottomColor: textMaterial.uniforms.bottomColor.value.getStyle()\n\t\t};\n\t\t// Text\n\t\tconst textFolder = gui.addFolder('Text');\n\t\ttextFolder\n\t\t\t.addColor(params, 'textTopColor')\n\t\t\t.name('topColor')\n\t\t\t.onChange(value => {\n\t\t\t\ttextMaterial.uniforms.topColor.value.setStyle(value);\n\t\t\t});\n\t\ttextFolder\n\t\t\t.addColor(params, 'textBottomColor')\n\t\t\t.name('bottomColor')\n\t\t\t.onChange(value => {\n\t\t\t\ttextMaterial.uniforms.bottomColor.value.setStyle(value);\n\t\t\t});\n\t\ttextFolder.open();\n\t}\n\n\tinitPanelGUI() {\n\t\t// Control gui\n\t\tconst gui = new dat.GUI();\n\t\tlet gltfScene = this.gltfScene;\n\t\tif(this.isMobile) gui.close();\n\t\tlet params = (this.guiParams = {\n\t\t\tenableIBL: !!pbrDefaultDefines.ENABLE_IBL,\n\t\t\tenableLight: !!pbrDefaultDefines.ENABLE_LIGHT,\n\t\t\tenvRotation: this.envRotation,\n\t\t\tenvBrightness: this.envBrightness.value,\n\t\t\tmetalness: pbrDefaultUniforms.metalness.value,\n\t\t\troughness: pbrDefaultUniforms.roughness.value,\n\t\t\t// Equations\n\t\t\tdiffuseEquation: diffuseEquation[0],\n\t\t\tspecularFresnelEquation: specularFresnelEquation[0],\n\t\t\tspecularNDFEquation: specularNDFEquation[0],\n\t\t\tspecularVisEquation: specularVisEquation[0],\n\t\t\t// Anisotropy\n\t\t\tenableAnisotropy: !!pbrDefaultDefines.ENABLE_ANISOTROPY,\n\t\t\tanisotropyFactor: pbrDefaultUniforms.uAnisotropyFactor.value,\n\t\t\tanisotropyRotation: pbrDefaultUniforms.uAnisotropyRotation.value,\n\t\t\t// ClearCoat\n\t\t\tenableClearCoat: !!pbrDefaultDefines.ENABLE_CLEARCOAT,\n\t\t\tclearCoatRoughness: pbrDefaultUniforms.uClearCoatRoughness.value,\n\t\t\tclearCoat: pbrDefaultUniforms.uClearCoat.value,\n\t\t\t// Advance\n\t\t\tenableCompensation: !!pbrDefaultDefines.ENERGY_COMPENSATION,\n\t\t\tenableSpecularAA: !!pbrDefaultDefines.GEOMETRIC_SPECULAR_AA,\n\t\t\tspecularAAVariance: pbrDefaultUniforms.uSpecularAAVariance.value,\n\t\t\tspecularAAThreshold: pbrDefaultUniforms.uSpecularAAThreshold.value,\n\t\t\tspecularAO: specularAOList[0],\n\t\t\tenableMSSpecularAO: !!pbrDefaultDefines.MS_SPECULAR_AO,\n\t\t\tenableMSDiffuseAO: !!pbrDefaultDefines.MS_DIFFUSE_AO\n\t\t});\n\t\t// PBR\n\t\tconst pbrFolder = gui.addFolder('PBR');\n\t\tpbrFolder.add(params, 'enableIBL').onChange(value => {\n\t\t\tthis.guiParams.enableIBL = value;\n\t\t\tthis.reCompileShader();\n\t\t});\n\t\tpbrFolder\n\t\t\t.add(params, 'enableLight')\n\t\t\t.name('enableSunLight')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.enableLight = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tpbrFolder\n\t\t\t.add(params, 'envRotation', -Math.PI, Math.PI)\n\t\t\t.step(0.1)\n\t\t\t.onChange(value => {\n\t\t\t\tthis.envRotation = value;\n\t\t\t});\n\t\tpbrFolder\n\t\t\t.add(params, 'envBrightness', 0, 2)\n\t\t\t.step(0.1)\n\t\t\t.onChange(value => {\n\t\t\t\tthis.envBrightness.value = value;\n\t\t\t});\n\t\tpbrFolder\n\t\t\t.add(params, 'metalness', 0, 1)\n\t\t\t.step(0.01)\n\t\t\t.onChange(value => {\n\t\t\t\tgltfScene.traverse(child => {\n\t\t\t\t\tif (child.isMesh) {\n\t\t\t\t\t\tchild.material.uniforms.metalness.value = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\tpbrFolder\n\t\t\t.add(params, 'roughness', 0, 1)\n\t\t\t.step(0.01)\n\t\t\t.onChange(value => {\n\t\t\t\tgltfScene.traverse(child => {\n\t\t\t\t\tif (child.isMesh) {\n\t\t\t\t\t\tchild.material.uniforms.roughness.value = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\tpbrFolder.open();\n\n\t\t// Equations\n\t\tconst equationsFolder = gui.addFolder('Equations');\n\t\tequationsFolder\n\t\t\t.add(params, 'diffuseEquation', diffuseEquation)\n\t\t\t.name('diffuse')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.diffuseEquation = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tequationsFolder\n\t\t\t.add(params, 'specularFresnelEquation', specularFresnelEquation)\n\t\t\t.name('fresnel')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.specularFresnelEquation = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tequationsFolder\n\t\t\t.add(params, 'specularNDFEquation', specularNDFEquation)\n\t\t\t.name('NDF')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.specularNDFEquation = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tequationsFolder\n\t\t\t.add(params, 'specularVisEquation', specularVisEquation)\n\t\t\t.name('geometry')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.specularVisEquation = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tequationsFolder.open();\n\n\t\t// Anisotropy\n\t\tlet anisotropyFolader = gui.addFolder('Anisotropy');\n\t\tanisotropyFolader\n\t\t\t.add(params, 'enableAnisotropy')\n\t\t\t.name('enable')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.enableAnisotropy = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tanisotropyFolader\n\t\t\t.add(params, 'anisotropyRotation', -3.14, 3.14)\n\t\t\t.step(0.01)\n\t\t\t.name('rotation')\n\t\t\t.onChange(value => {\n\t\t\t\tgltfScene.traverse(child => {\n\t\t\t\t\tif (child.isMesh) {\n\t\t\t\t\t\tchild.material.uniforms.uAnisotropyRotation.value = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\tanisotropyFolader\n\t\t\t.add(params, 'anisotropyFactor', 0, 1)\n\t\t\t.name('factor')\n\t\t\t.step(0.01)\n\t\t\t.onChange(value => {\n\t\t\t\tgltfScene.traverse(child => {\n\t\t\t\t\tif (child.isMesh) {\n\t\t\t\t\t\tchild.material.uniforms.uAnisotropyFactor.value = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t// ClearCoat\n\t\tlet clearCoatFolader = gui.addFolder('ClearCoat');\n\t\tclearCoatFolader\n\t\t\t.add(params, 'enableClearCoat')\n\t\t\t.name('enable')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.enableClearCoat = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tclearCoatFolader\n\t\t\t.add(params, 'clearCoat', 0, 1)\n\t\t\t.step(0.01)\n\t\t\t.name('clearCoat')\n\t\t\t.onChange(value => {\n\t\t\t\tgltfScene.traverse(child => {\n\t\t\t\t\tif (child.isMesh) {\n\t\t\t\t\t\tchild.material.uniforms.uClearCoat.value = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\tclearCoatFolader\n\t\t\t.add(params, 'clearCoatRoughness', 0, 1)\n\t\t\t.step(0.01)\n\t\t\t.name('roughness')\n\t\t\t.onChange(value => {\n\t\t\t\tgltfScene.traverse(child => {\n\t\t\t\t\tif (child.isMesh) {\n\t\t\t\t\t\tchild.material.uniforms.uClearCoatRoughness.value = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t// Advance\n\t\tconst advanceFolder = gui.addFolder('Advance');\n\t\tadvanceFolder\n\t\t\t.add(params, 'enableCompensation')\n\t\t\t.name('compensation')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.enableCompensation = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tadvanceFolder\n\t\t\t.add(params, 'enableSpecularAA')\n\t\t\t.name('specularAA')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.enableSpecularAA = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tadvanceFolder\n\t\t\t.add(params, 'specularAAVariance', 0, 1)\n\t\t\t.name('sAAVariance')\n\t\t\t.step(0.01)\n\t\t\t.onChange(value => {\n\t\t\t\tgltfScene.traverse(child => {\n\t\t\t\t\tif (child.isMesh) {\n\t\t\t\t\t\tchild.material.uniforms.uSpecularAAVariance.value = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\tadvanceFolder\n\t\t\t.add(params, 'enableMSSpecularAO')\n\t\t\t.name('msSpecularAO')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.enableMSSpecularAO = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tadvanceFolder\n\t\t\t.add(params, 'enableMSDiffuseAO')\n\t\t\t.name('msDiffuseAO')\n\t\t\t.onChange(value => {\n\t\t\t\tthis.guiParams.enableMSDiffuseAO = value;\n\t\t\t\tthis.reCompileShader();\n\t\t\t});\n\t\tadvanceFolder.add(params, 'specularAO', specularAOList).onChange(value => {\n\t\t\tthis.guiParams.specularAO = value;\n\t\t\tthis.reCompileShader();\n\t\t});\n\t}\n\n\tsetDefinesFromGUI(defines) {\n\t\tlet guiParams = this.guiParams;\n\t\t// Clean\n\t\tlet reg = panelDefinesRegs;\n\t\tObject.keys(defines).map(key => {\n\t\t\tif (reg.test(key)) {\n\t\t\t\tdelete defines[key];\n\t\t\t}\n\t\t});\n\t\t// Reset\n\t\tif (guiParams.enableIBL) defines.ENABLE_IBL = 1;\n\t\tif (guiParams.enableLight) defines.ENABLE_LIGHT = 1;\n\t\tif (guiParams.enableAnisotropy) defines.ENABLE_ANISOTROPY = 1;\n\t\tif (guiParams.enableClearCoat) defines.ENABLE_CLEARCOAT = 1;\n\t\tif (guiParams.enableCompensation) defines.ENERGY_COMPENSATION = 1;\n\t\tif (guiParams.enableSpecularAA) defines.GEOMETRIC_SPECULAR_AA = 1;\n\t\tif (guiParams.enableMSSpecularAO) defines.MS_SPECULAR_AO = 1;\n\t\tif (guiParams.enableMSDiffuseAO) defines.MS_DIFFUSE_AO = 1;\n\n\t\tdefines[`DIFFUSE_${guiParams.diffuseEquation.toUpperCase()}`] = 1;\n\t\tdefines[`F_${guiParams.specularFresnelEquation.toUpperCase()}`] = 1;\n\t\tdefines[`NDF_${guiParams.specularNDFEquation.toUpperCase()}`] = 1;\n\t\tdefines[`V_${guiParams.specularVisEquation.toUpperCase()}`] = 1;\n\t\tdefines[`SPECULAR_AO_${guiParams.specularAO.toUpperCase()}`] = 1;\n\t\treturn defines;\n\t}\n\n\treCompileShader() {\n\t\tthis.gltfScene.traverse(child => {\n\t\t\tif (child.isMesh && child.material) {\n\t\t\t\tthis.setDefinesFromGUI(child.material.defines);\n\t\t\t\tchild.material.needsUpdate = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tinitUIPanel() {\n\t\t// Click Btn\n\t\tthis.ringBtn = new RingButton(this, this.layers.UI_LAYER, 'Click');\n\t\tthis.ringBtn.container.position.set(30, 0, 0);\n\t\tthis.uiScene.add(this.ringBtn.container);\n\t\t// Close Btn\n\t\tthis.closeBtn = new CloseButton(this, this.layers.UI_LAYER);\n\t\tlet closeContainer = this.closeBtn.container;\n\t\tconst closeBtnScale = 0.45;\n\t\tthis.closeBtnBox = computeMeshBoundingBox(this.closeBtn.mesh).length.multiplyScalar(closeBtnScale);\n\t\tcloseContainer.scale.setScalar(closeBtnScale);\n\t\tthis.uiScene.add(closeContainer);\n\t\tthis.resizeUIPanel(this.width, this.height);\n\t\t// Panel gui\n\t\tthis.initPanelGUI();\n\t}\n\n\tresizeUIPanel(width, height) {\n\t\tlet closeContainer = this.closeBtn.container;\n\t\tconst topOffset = height / 2 - this.closeBtnBox.y / 2 - 20;\n\t\tconst leftOffset = -width / 2 + this.closeBtnBox.x / 2 + 20;\n\t\tcloseContainer.position.set(leftOffset, topOffset, 0);\n\t}\n\n\tloadSunLight(sunlightInfo) {\n\t\tif (!this.sunLight) this.sunLight = new THREE.DirectionalLight(0xffffff, 0.1);\n\t\tthis.sunLight.position.copy(sunlightInfo.position);\n\t\tthis.scene.add(this.sunLight);\n\t}\n\n\tloadCubeBackground(backgroundEnv, uBGEnvironmentSize) {\n\t\tlet cubeBackground = (this.cubeBackground = new Background(\n\t\t\t{\n\t\t\t\tenvMap: backgroundEnv.texture,\n\t\t\t\tuBGEnvironmentSize\n\t\t\t},\n\t\t\t500\n\t\t));\n\t\tcubeBackground.material.uniforms.uEnvironmentTransform = this.envRotationMatBG;\n\t\tcubeBackground.material.uniforms.uEnvBrightness = this.envBrightness;\n\t\tthis.scene.add(cubeBackground);\n\t}\n\n\tinitCamera() {\n\t\tthis.camera.position.copy(this.cameraInitPos);\n\t\tthis.camera.lookAt(this.cameraLookAtPos);\n\t\t// Test\n\t\tthis.control = new OrbitControls(this.camera, this.viewer.container);\n\t\tthis.control.enabled = false;\n\t\tthis.control.enablePan = false;\n\t\tthis.control.minDistance = 1;\n\t\tthis.control.maxDistance = 5;\n\t}\n\n\tinitText() {\n\t\tlet material = (this.textMaterial = this.fontGenerator.createFontMaterial(1));\n\t\tmaterial.uniforms.time = { value: 0.0 };\n\t\t// Apply text color\n\t\tObject.keys(TextUniformConfig).map(key => {\n\t\t\tmaterial.uniforms[`${key}`] = { value: TextUniformConfig[key].clone() };\n\t\t});\n\n\t\tthis.titleMesh = this.initTextMesh(TextConfig.mainTitle, material);\n\t\tthis.subTitleMesh = this.initTextMesh(TextConfig.subTitle, material);\n\t\tthis.contentMesh = this.initTextMesh(TextConfig.content, material);\n\t\tthis.animeNameTitle = new AnimeNameTitle(this, AnimeName, AnimeTitleUniforms);\n\t\tthis.resizeText(this.width, this.height);\n\t}\n\n\tresizeText(width, height) {\n\t\tif (!this.isMobile) {\n\t\t\tthis.resizeTextForPC(width, height);\n\t\t} else {\n\t\t\tthis.resizeTextForMobile(width, height);\n\t\t}\n\n\t\tthis.animeNameTitle.resize(width, height);\n\t}\n\n\tresizeTextForPC(width, height) {\n\t\tlet { titleMesh, subTitleMesh, contentMesh } = this;\n\t\tconst topOffset = height / 4;\n\t\tconst leftOffset = -width / 2.25;\n\t\tconst titleScale = clamp(width / 1000, 1.2, 1.4);\n\t\ttitleMesh.scale.setScalar(titleScale);\n\t\ttitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\tconst subTitleScale = clamp(width / 1500, 0.8, 1.1);\n\t\tlet subBBox = computeMeshBoundingBox(subTitleMesh).length.multiplyScalar(subTitleScale);\n\t\tsubTitleMesh.scale.setScalar(subTitleScale);\n\t\tsubTitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\tconst contentScale = clamp(width / 2000, 0.4, 0.6);\n\t\tlet contentBBox = computeMeshBoundingBox(contentMesh).length.multiplyScalar(contentScale);\n\t\tcontentMesh.scale.setScalar(contentScale);\n\t\tcontentMesh.position.set(leftOffset, topOffset, 0);\n\n\t\t// Gap between title and subtitle\n\t\tsubTitleMesh.position.y = topOffset - subBBox.y - 20;\n\t\tcontentMesh.position.y = subTitleMesh.position.y - contentBBox.y - 20;\n\t}\n\n\tresizeTextForMobile(width, height) {\n\t\tlet { titleMesh, subTitleMesh, contentMesh } = this;\n\t\tconst topOffset = height / 2.4;\n\t\tconst leftOffset = -width / 2.25;\n\t\tconst titleScale = clamp(width / 500, 0.7, 0.9);\n\t\ttitleMesh.scale.setScalar(titleScale);\n\t\ttitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\tconst subTitleScale = clamp(width / 800, 0.4, 0.5);\n\t\tlet subBBox = computeMeshBoundingBox(subTitleMesh).length.multiplyScalar(subTitleScale);\n\t\tsubTitleMesh.scale.setScalar(subTitleScale);\n\t\tsubTitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\tconst contentScale = clamp(width / 1000, 0.3, 0.4);\n\t\tlet contentBBox = computeMeshBoundingBox(contentMesh).length.multiplyScalar(contentScale);\n\t\tcontentMesh.scale.setScalar(contentScale);\n\t\tcontentMesh.position.set(leftOffset, topOffset, 0);\n\n\t\t// Gap between title and subtitle\n\t\tsubTitleMesh.position.y = topOffset - subBBox.y - 10;\n\t\tcontentMesh.position.y = subTitleMesh.position.y - contentBBox.y - 10;\n\t}\n\n\tinitBackground() {\n\t\tlet texture = this.assetLibrary.get('Texture-NGNL1');\n\t\tlet bgMesh = (this.bgMesh = new TextureBG(texture, this.postProcessingMaterial));\n\t\tbgMesh.layers.set(this.layers.BG_LAYER);\n\t\tthis.scene.add(bgMesh);\n\t}\n\n\tupdateEnvironmentRotation(value) {\n\t\t// Get panel rotation\n\t\tthis.envRotationFromPanel.makeRotationY(value);\n\t\t// Sync camera roatation\n\t\tthis.cameraRotationMatrix.makeRotationFromQuaternion(this.camera.quaternion);\n\t\tthis.envRotationMat4.multiplyMatrices(this.envRotationFromPanel, this.cameraRotationMatrix);\n\t\tthis.envRotationMat.value.setFromMatrix4(this.envRotationMat4);\n\t\tthis.envRotationMatBG.value.setFromMatrix4(this.envRotationFromPanel);\n\t\t// Direction compute by position\n\t\tlet resultSunlight = this.sunLightStartPos.clone();\n\t\tthis.sunLightPanelRotateMat.getInverse(this.envRotationFromPanel);\n\t\tresultSunlight.applyMatrix4(this.sunLightPanelRotateMat);\n\t\tthis.sunLight.position.copy(resultSunlight);\n\t}\n\n\topenModelViewer() {\n\t\tif (this.isModelViewing) return;\n\t\tthis.isModelViewing = true;\n\t\tconst duration = 1;\n\t\t// 1.Reset Model Transform(Tween)\n\t\tgsap.to(this.gltfScene.rotation, { z: this.modelViewingRotateZ, duration, ease: 'power2.out' });\n\t\tgsap.to(this.gltfScene.scale, {\n\t\t\tx: this.modelViewingScale,\n\t\t\ty: this.modelViewingScale,\n\t\t\tz: this.modelViewingScale,\n\t\t\tduration,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\tgsap.to(this.gltfScene.position, { y: this.modelViewingPosY, duration, ease: 'power2.out' });\n\t\t// 2.Background change\n\t\tgsap.to(this.bgMesh.material.uniforms.opacity, {\n\t\t\tvalue: 0,\n\t\t\tduration,\n\t\t\tease: 'power2.out',\n\t\t\tonComplete: () => {\n\t\t\t\tthis.bgMesh.visible = false;\n\t\t\t}\n\t\t});\n\t\tthis.cubeBackground.visible = true;\n\t\tgsap.to(this.cubeBackground.material.uniforms.opacity, { value: 1, duration, ease: 'power2.out' });\n\t\t// 3.Control change\n\t\tthis.control.enabled = true;\n\t\t// 4.Panel\n\t\tdocument.querySelector('.dg.main').setAttribute('style', 'display: block');\n\t\tgsap.fromTo('.dg.main', { opacity: 0 }, { opacity: 1, duration, ease: 'power2.out' });\n\t\t// 5.Button animation\n\t\tgsap.to(this.ringBtn, {\n\t\t\topacity: 0,\n\t\t\tduration,\n\t\t\tease: 'power2.out',\n\t\t\tonComplete: () => {\n\t\t\t\tthis.ringBtn.visible = false;\n\t\t\t}\n\t\t});\n\t\tthis.closeBtn.visible = true;\n\t\tgsap.to(this.closeBtn, { opacity: 0.5, duration, ease: 'power2.out' });\n\t\tthis.intersectsArr = [this.closeBtn.hitArea];\n\t\t// 6.Text\n\t\tlet textOpacity = this.textMaterial.uniforms.opacity;\n\t\tgsap.fromTo(textOpacity, { value: 1 }, { value: 0, duration, ease: 'power2.out' });\n\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, { value: 0, duration, ease: 'power2.out' });\n\t}\n\n\tcloseModelViewer() {\n\t\tif (!this.isModelViewing) return;\n\t\tthis.isModelViewing = false;\n\t\tconst duration = 1;\n\t\t// 1.Resue Model Transform(Tween)\n\t\tgsap.to(this.camera.position, {\n\t\t\tx: this.cameraInitPos.x,\n\t\t\ty: this.cameraInitPos.y,\n\t\t\tz: this.cameraInitPos.z,\n\t\t\tduration,\n\t\t\tease: 'power2.out',\n\t\t\tonUpdate: () => {\n\t\t\t\tthis.camera.lookAt(this.cameraLookAtPos);\n\t\t\t}\n\t\t});\n\t\tgsap.to(this.gltfScene.rotation, { z: -Math.PI / 15, duration, ease: 'power2.out' });\n\t\tgsap.to(this.gltfScene.scale, {\n\t\t\tx: this.modelInitScale,\n\t\t\ty: this.modelInitScale,\n\t\t\tz: this.modelInitScale,\n\t\t\tduration,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\tgsap.to(this.gltfScene.position, { y: this.modelInitPosY, duration, ease: 'power2.out' });\n\t\t// 2.Background change\n\t\tthis.bgMesh.visible = true;\n\t\tgsap.to(this.bgMesh.material.uniforms.opacity, {\n\t\t\tvalue: 1,\n\t\t\tduration,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\tgsap.to(this.cubeBackground.material.uniforms.opacity, {\n\t\t\tvalue: 0,\n\t\t\tduration,\n\t\t\tease: 'power2.out',\n\t\t\tonComplete: () => {\n\t\t\t\tthis.cubeBackground.visible = false;\n\t\t\t}\n\t\t});\n\t\t// 3.Control change\n\t\tthis.control.enabled = false;\n\t\t// 4.Panel Hide\n\t\tgsap.fromTo(\n\t\t\t'.dg.main',\n\t\t\t{ opacity: 1 },\n\t\t\t{\n\t\t\t\topacity: 0,\n\t\t\t\tduration,\n\t\t\t\tease: 'power2.out',\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tdocument.querySelector('.dg.main').setAttribute('style', 'display: none');\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// 5.Button animation\n\t\tthis.ringBtn.visible = true;\n\t\tgsap.to(this.ringBtn, {\n\t\t\topacity: 0.5,\n\t\t\tduration,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\tgsap.to(this.closeBtn, {\n\t\t\topacity: 0,\n\t\t\tduration,\n\t\t\tease: 'power2.out',\n\t\t\tonComplete: () => {\n\t\t\t\tthis.closeBtn.visible = false;\n\t\t\t}\n\t\t});\n\t\tthis.intersectsArr = [this.ringBtn.hitArea];\n\t\t// 6.Text\n\t\tlet textOpacity = this.textMaterial.uniforms.opacity;\n\t\tgsap.fromTo(textOpacity, { value: 0 }, { value: 1, duration, ease: 'power2.out' });\n\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, { value: 1, duration, ease: 'power2.out' });\n\t}\n\n\twhileVisible(order) {\n\t\tlet cameraPos = this.camera.position;\n\t\tlet modelRotation = this.gltfScene.rotation;\n\t\tlet textOpacity = this.textMaterial.uniforms.opacity;\n\t\tgsap.killTweensOf(cameraPos);\n\t\tif (order === 'pre') {\n\t\t\tgsap.fromTo(cameraPos, { y: -0.5 }, { y: 0, duration: this.viewer.scrollAnimeDuration });\n\t\t} else {\n\t\t\tgsap.fromTo(cameraPos, { y: 0.5 }, { y: 0, duration: this.viewer.scrollAnimeDuration });\n\t\t\tgsap.fromTo(\n\t\t\t\tmodelRotation,\n\t\t\t\t{ z: -Math.PI / 15 },\n\t\t\t\t{ z: -Math.PI / 10, duration: this.viewer.scrollAnimeDuration / 2 }\n\t\t\t);\n\t\t}\n\t\tgsap.fromTo(textOpacity, { value: 0 }, { value: 1, duration: 1.5, delay: 0.5, ease: 'power2.out' });\n\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, { value: 1, duration: 1, delay: 1, ease: 'power2.out' });\n\t\tgsap.to(this.ringBtn, { opacity: 0.5, duration: 1.5, delay: 0.5, ease: 'power2.out' });\n\t\tgsap.fromTo(\n\t\t\tthis.bgMesh.material.uniforms.vignetteDarkness,\n\t\t\t{ value: 1 },\n\t\t\t{ value: 0.6, duration: 1.5, delay: 0.8, ease: 'power2.out' }\n\t\t);\n\t}\n\n\twhileNoVisible(order) {\n\t\tlet cameraPos = this.camera.position;\n\t\tlet textOpacity = this.textMaterial.uniforms.opacity;\n\t\tgsap.killTweensOf(cameraPos);\n\t\tif (order === 'pre') {\n\t\t\tgsap.fromTo(cameraPos, { y: 0 }, { y: 0.5, duration: this.viewer.scrollAnimeDuration });\n\t\t} else {\n\t\t\tgsap.fromTo(cameraPos, { y: 0 }, { y: -0.5, duration: this.viewer.scrollAnimeDuration });\n\t\t}\n\t\tgsap.fromTo(textOpacity, { value: 1 }, { value: 0, duration: 0.5, ease: 'power2.out' });\n\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, { value: 0, duration: 1, ease: 'power2.out' });\n\t\tgsap.to(this.ringBtn, { opacity: 0.0, duration: 0.5, ease: 'power2.out' });\n\t}\n\n\tinitEvent() {\n\t\tif(!this.isMobile) this.eventHandler.onMouseMoveEvent.bind(this.onMouseMove.bind(this));\n\t\tthis.intersectsArr.push(this.ringBtn.hitArea);\n\t\tthis.eventHandler.onClickEvent.bind(this.onClick.bind(this));\n\t}\n\n\tonClick() {\n\t\tif (!this.visible) return;\n\t\tif (this.isMobile) {\n\t\t\tlet x = event.clientX;\n\t\t\tlet y = event.clientY;\n\t\t\tthis.clickNDCPos.set((x / window.innerWidth) * 2 - 1, (-y / window.innerHeight) * 2 + 1);\n\t\t\tthis.raycaster.setFromCamera(this.clickNDCPos, this.uiCamera);\n\t\t\tthis.intersects = this.raycaster.intersectObjects(this.intersectsArr);\n\t\t}\n\t\tif (!this.intersects.length) return;\n\t\tlet intersectsRes = this.intersects[0].object;\n\t\tif (intersectsRes.name === 'ringButton') {\n\t\t\tthis.openModelViewer();\n\t\t} else if (intersectsRes.name === 'closeButton') {\n\t\t\tthis.closeModelViewer();\n\t\t}\n\t}\n\n\tonMouseMove() {\n\t\tif (!this.visible) return;\n\t\tthis.raycaster.setFromCamera(this.state.pointer.ndcPosition, this.uiCamera);\n\t\tthis.intersects = this.raycaster.intersectObjects(this.intersectsArr);\n\t\tif (this.intersects.length > 0) {\n\t\t\tdocument.body.setAttribute('cursor', 'pointer');\n\t\t} else {\n\t\t\tdocument.body.removeAttribute('cursor');\n\t\t}\n\t}\n\n\tresize(width, height, dpr) {\n\t\tconst pixelWidth = width * dpr;\n\t\tconst pixelHeight = height * dpr;\n\t\tthis.postProcessingMaterial.resize(pixelWidth, pixelHeight);\n\t\tthis.camera.aspect = width / height;\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.uiCamera.left = -width / 2;\n\t\tthis.uiCamera.right = width / 2;\n\t\tthis.uiCamera.top = height / 2;\n\t\tthis.uiCamera.bottom = -height / 2;\n\t\tthis.uiCamera.updateProjectionMatrix();\n\t\tthis.bgMesh.resize(width, height);\n\t\tthis.resizeText(width, height);\n\t\tthis.resizeUIPanel(width, height);\n\t}\n\n\trender({ renderer, orthoCamera, target, deltaTime } = {}) {\n\t\tif (!this.visible) return;\n\t\tthis.updateEnvironmentRotation(this.envRotation);\n\t\t// BG\n\t\torthoCamera.layers.set(this.layers.BG_LAYER);\n\t\trenderer.render(this.scene, orthoCamera);\n\t\t// Scene\n\t\trenderer.render(this.scene, this.camera);\n\t\t// UI\n\t\tif (this.isModelViewing) {\n\t\t\tthis.closeBtn.update(deltaTime);\n\t\t} else {\n\t\t\tthis.ringBtn.update(deltaTime);\n\t\t}\n\t\tif (this.isModelViewing) this.control.update();\n\t\tthis.uiCamera.layers.set(this.layers.UI_LAYER);\n\t\trenderer.render(this.uiScene, this.uiCamera);\n\t}\n}\n","import * as THREE from 'three';\n\nconst BGUniformsConfig = {\n\tbaseColor: new THREE.Color('#000000'),\n\tarea1Color: new THREE.Color('#FFFFFF'),\n\tarea2Color: new THREE.Color('#FFFFFF'),\n\tarea1Position: new THREE.Vector2(0.2, 0.2),\n\tarea2Position: new THREE.Vector2(0.9, 0.9)\n};\n\nconst TextUniformConfig = {\n\ttopColor: new THREE.Color('rgb(245,230,255)'),\n\tbottomColor: new THREE.Color('rgb(255,255,255)')\n};\n\nconst TextConfig = {\n\tmainTitle: `About !`,\n\tsubTitle: `Hi! You can call me Gang! \n    I am a web front-end developer, \n\tmainly focusing on Web3D. If you also \n\tlike anime or have some good ideas, please \n    contact me for a pleasant discussion! Haha!`\n};\nconst AnimeName = '[ One-Punch Man ]';\n\nconst AnimeTitleUniforms = {\n\ttopColor: new THREE.Color('rgb(245,230,255)'),\n\tbottomColor: new THREE.Color('rgb(255,255,255)')\n};\n\nexport { BGUniformsConfig, TextUniformConfig, TextConfig, AnimeName, AnimeTitleUniforms };\n","export default \"#define GLSLIFY 1\\nattribute float aSize;\\nattribute float aAlpha;\\n\\nvarying vec3 vPosition;\\nvarying float vPreAlpha;\\n\\nvoid main() {\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\tgl_PointSize = aSize * (300.0 / - mvPosition.z);\\n\\t\\n\\tvPosition = vec3(mvPosition.xyz);\\n\\tvPreAlpha = aAlpha;\\n}\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nvarying vec3 vPosition;\\nvarying float vPreAlpha;\\n\\nuniform vec3 innerColor;\\nuniform vec3 outerColor;\\n\\nfloat ndot(vec2 a, vec2 b) { return a.x*b.x - a.y*b.y; }\\nfloat sdRhombus(in vec2 p, in vec2 b) {\\n    vec2 q = abs(p);\\n\\n    float h = clamp( (-2.0*ndot(q,b) + ndot(b,b) )/dot(b,b), -1.0, 1.0 );\\n    float d = length( q - 0.5*b*vec2(1.0-h,1.0+h) );\\n    d *= sign( q.x*b.y + q.y*b.x - b.x*b.y );\\n    \\n\\treturn d;\\n}\\n\\nvoid main() {\\n\\tvec2 st = (gl_PointCoord - vec2(0.5, 0.5)) * 2.0; // [-1,1]\\n\\tfloat r = sdRhombus(st, vec2(0.6, 0.2));\\n\\tfloat alpha = 1. - sign(r);\\n\\tvec3 col;\\n\\tcol = mix(innerColor, outerColor, r);\\n\\tgl_FragColor = vec4(col, alpha * vPreAlpha);\\n}\";","// Todo: Common Particle\nimport * as THREE from 'three';\nimport { Particle } from 'MODULES/Particle/Particle';\nimport vertexShader from './shaders/particle.vs';\nimport fragmentShader from './shaders/particle.fs';\nimport { symmetryRandom } from 'JS/Utils';\n\nexport class ParticleChip {\n\tconstructor(scene) {\n\t\tthis.scene = scene;\n\t\tthis.deltaTime = 0;\n\t\tthis.particleControl = {\n\t\t\tparticleNum: 200,\n\t\t\tarea: [3.0, 2.0, 4.0]\n\t\t};\n\t\t// Data\n\t\tthis.geometry = new THREE.BufferGeometry();\n\t\tthis.positions = new Float32Array(this.particleControl.particleNum * 3);\n\t\tthis.sizes = new Float32Array(this.particleControl.particleNum);\n\t\tthis.alphas = new Float32Array(this.particleControl.particleNum);\n\t\tthis.initParticle();\n\t}\n\n\tget mesh() {\n\t\treturn this.points;\n\t}\n\n\tinitParticle() {\n\t\tlet { particleControl } = this;\n\t\tlet { particleNum, area } = particleControl;\n\t\tparticleControl.particles = new Array(particleNum);\n\t\tlet tempVec3 = new THREE.Vector3();\n\t\tlet tempVelocity = 0;\n\t\tfor (let i = 0; i < particleNum; i++) {\n\t\t\tparticleControl.particles[i] = new Particle();\n\t\t\tlet particle = particleControl.particles[i];\n\t\t\t// Init Transform\n\t\t\ttempVec3.x = symmetryRandom() * 0.3 - 5.8;\n\t\t\ttempVec3.y = symmetryRandom() * 0.2 - 0.1;\n\t\t\ttempVec3.z = symmetryRandom() * 0.3 - 1;\n\t\t\ttempVec3.normalize();\n\t\t\ttempVelocity = 2.0 + Math.random() * 1.0;\n\t\t\ttempVec3.multiplyScalar(tempVelocity);\n\t\t\t// Velocity\n\t\t\tparticle.setVelocity(tempVec3.x, tempVec3.y, tempVec3.z - 1);\n\t\t\t// Position\n\t\t\tparticle.setPosition(symmetryRandom() * area[0], symmetryRandom() * area[1], symmetryRandom() * area[2]);\n\t\t\t// Size\n\t\t\tparticle.setSize(Math.random() / 5);\n\t\t\t// Alpha\n\t\t\tparticle.setAlpha(Math.random());\n\t\t}\n\t\t// Attributes\n\t\tthis.geometry.setAttribute('position', new THREE.BufferAttribute(this.positions, 3));\n\t\tthis.geometry.setAttribute('aSize', new THREE.BufferAttribute(this.sizes, 1));\n\t\tthis.geometry.setAttribute('aAlpha', new THREE.BufferAttribute(this.alphas, 1));\n\n\t\t// Uniforms\n\t\tthis.uniforms = {\n\t\t\tfar: {\n\t\t\t\ttype: 'f',\n\t\t\t\tvalue: area[2]\n\t\t\t},\n\t\t\tinnerColor: { value: new THREE.Color('#FFFFFF') },\n\t\t\touterColor: { value: new THREE.Color('#EEEEEE') }\n\t\t};\n\t\tthis.points = new THREE.Points(\n\t\t\tthis.geometry,\n\t\t\tnew THREE.ShaderMaterial({\n\t\t\t\tuniforms: this.uniforms,\n\t\t\t\tvertexShader,\n\t\t\t\tfragmentShader,\n\t\t\t\tblending: THREE.AdditiveBlending,\n\t\t\t\ttransparent: true\n\t\t\t})\n\t\t);\n\t\tthis.scene.add(this.points);\n\t}\n\n\t// Cycle Position\n\trepeatPos(particle, area) {\n\t\tfor (let index = 0; index < 3; index++) {\n\t\t\tlet limit = area[index];\n\t\t\tif (Math.abs(particle.position[index]) - particle.size * 0.5 > limit) {\n\t\t\t\t// Out Of Area\n\t\t\t\tif (particle.position[index] > 0) {\n\t\t\t\t\tparticle.position[index] -= limit * 2.0;\n\t\t\t\t} else {\n\t\t\t\t\tparticle.position[index] += limit * 2.0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trenderParticle() {\n\t\tlet { particleNum, area, particles } = this.particleControl;\n\t\t// Update Data\n\t\tfor (let i = 0; i < particleNum; i++) {\n\t\t\tlet particle = particles[i];\n\t\t\tparticle.update(this.deltaTime);\n\t\t\tthis.repeatPos(particle, area);\n\t\t\t// Position\n\t\t\tthis.positions[i * 3] = particle.position[0];\n\t\t\tthis.positions[i * 3 + 1] = particle.position[1];\n\t\t\tthis.positions[i * 3 + 2] = particle.position[2];\n\t\t\t// Size\n\t\t\tthis.sizes[i] = particle.size;\n\t\t\t// Alpha\n\t\t\tthis.alphas[i] = particle.alpha;\n\t\t}\n\t\tthis.geometry.attributes['position'].needsUpdate = true;\n\t\tthis.geometry.attributes['aSize'].needsUpdate = true;\n\t}\n\n\trender(time) {\n\t\tthis.deltaTime = time;\n\t\tthis.renderParticle();\n\t}\n}\n","import * as THREE from 'three';\nimport { Section } from '../common/Section';\nimport { AnimeNameTitle } from '../common/AnimeNameTitle';\nimport { TextUniformConfig, TextConfig, AnimeName, AnimeTitleUniforms } from './const/config';\nimport { computeMeshBoundingBox, clamp } from 'JS/Utils';\n// Modules\nimport { TextureBG } from 'MODULES/TextureBG/TextureBG';\nimport { ParticleChip } from 'MODULES/ParticleChip/ParticleChip';\nimport { RectangleButton, CloseButton } from 'MODULES/Button/';\nimport { BlurMaterial } from 'MODULES/PostProcessing/';\nimport { gsap } from 'gsap';\n// Test\nimport { OrbitControls } from 'LIB/threejs/controls/OrbitControls';\nimport { initAnimeTitleGUI } from '../common/InitGUI';\nimport * as dat from 'dat.gui';\n\nexport class AboutSection extends Section {\n\tconstructor(viewer) {\n\t\tsuper(viewer);\n\t\tthis.name = 'AboutSection';\n\t\tthis.debug = 0;\n\n\t\tthis.cameraInitPos = new THREE.Vector3(0, 0, 2);\n\t\tthis.cameraLookAtPos = new THREE.Vector3(0, 0, 0);\n\n\t\tthis.intersectsArr = [];\n\t\tthis.intersects = []; // intersect result\n\t\tthis.raycaster = new THREE.Raycaster();\n\t\tthis.raycaster.layers.set(this.layers.UI_LAYER);\n\t\tthis.isOpenContactPanel = false;\n\t\tthis.blurIterations = {\n\t\t\tstart: 0,\n\t\t\ttarget: 3,\n\t\t\tvalue: 0\n\t\t};\n\n\t\tthis.clickNDCPos = new THREE.Vector2();\n\t}\n\n\tinit() {\n\t\tthis.initCamera();\n\t\tthis.initBackground();\n\t\tthis.initParticleChip();\n\t\tthis.initText();\n\t\tthis.initUIPanel();\n\t\tthis.initPostprocessing();\n\t\tthis.initEvent();\n\n\t\tif (this.debug) this.initGUI();\n\t}\n\n\tinitGUI() {\n\t\tconst gui = new dat.GUI();\n\t\tinitAnimeTitleGUI(gui, this.animeNameTitle.material);\n\t\tlet textMaterial = this.textMaterial;\n\t\tconsole.log(this.textMaterial);\n\t\tlet params = {\n\t\t\t// Text\n\t\t\ttextTopColor: textMaterial.uniforms.topColor.value.getStyle(),\n\t\t\ttextBottomColor: textMaterial.uniforms.bottomColor.value.getStyle()\n\t\t};\n\t\t// Text\n\t\tconst textFolder = gui.addFolder('Text');\n\t\ttextFolder\n\t\t\t.addColor(params, 'textTopColor')\n\t\t\t.name('topColor')\n\t\t\t.onChange(value => {\n\t\t\t\ttextMaterial.uniforms.topColor.value.setStyle(value);\n\t\t\t});\n\t\ttextFolder\n\t\t\t.addColor(params, 'textBottomColor')\n\t\t\t.name('bottomColor')\n\t\t\t.onChange(value => {\n\t\t\t\ttextMaterial.uniforms.bottomColor.value.setStyle(value);\n\t\t\t});\n\t\ttextFolder.open();\n\t}\n\n\tinitPostprocessing() {\n\t\tthis.postScene = new THREE.Scene();\n\t\tthis.postCamera = this.viewer.postCamera;\n\t\tthis.postRenderTarget = this.viewer.postRenderTarget.clone();\n\t\tthis.postScreenMesh = new THREE.Mesh(this.viewer.screenGeometry);\n\t\tthis.postScreenMesh.frustumCulled = false;\n\t\tthis.postScene.add(this.postScreenMesh);\n\n\t\tthis.blurVerticalMaterial = new BlurMaterial({\n\t\t\tdirection: new THREE.Vector2(0, 1)\n\t\t});\n\t\tthis.blurHorizontalMaterial = new BlurMaterial({\n\t\t\tdirection: new THREE.Vector2(1, 0)\n\t\t});\n\t}\n\n\trenderPost(renderTarget) {\n\t\t// if(!this.isOpenContactPanel) return;\n\t\tlet blurIterations = this.blurIterations.value;\n\t\tif (blurIterations < 0.1) return;\n\t\tfor (let i = 0; i < blurIterations; i++) {\n\t\t\tlet inputTexture = renderTarget.texture;\n\t\t\tthis.blurVerticalMaterial.uniforms.inputBuffer.value = inputTexture;\n\t\t\tthis.blurVerticalMaterial.uniforms.direction.value.setY(blurIterations - i + 1);\n\t\t\tthis.postScene.overrideMaterial = this.blurVerticalMaterial;\n\t\t\tthis.renderer.setRenderTarget(this.postRenderTarget);\n\t\t\tthis.renderer.render(this.postScene, this.postCamera);\n\n\t\t\tthis.blurHorizontalMaterial.uniforms.inputBuffer.value = this.postRenderTarget.texture;\n\t\t\tthis.blurHorizontalMaterial.uniforms.direction.value.setX(blurIterations - i + 1);\n\t\t\tthis.postScene.overrideMaterial = this.blurHorizontalMaterial;\n\t\t\tthis.renderer.setRenderTarget(renderTarget);\n\t\t\tthis.renderer.render(this.postScene, this.postCamera);\n\t\t}\n\t}\n\n\tinitUIPanel() {\n\t\t// Contact Button\n\t\tthis.contactBtn = new RectangleButton(this, this.layers.UI_LAYER, 'Contact Me');\n\t\tthis.contactBtn.container.scale.setScalar(0.8);\n\t\tthis.uiScene.add(this.contactBtn.container);\n\t\t// Close Btn\n\t\tthis.closeBtn = new CloseButton(this, this.layers.UI_LAYER);\n\t\tlet closeContainer = this.closeBtn.container;\n\t\tconst closeBtnScale = 0.45;\n\t\tthis.closeBtnBox = computeMeshBoundingBox(this.closeBtn.mesh).length.multiplyScalar(closeBtnScale);\n\t\tcloseContainer.scale.setScalar(closeBtnScale);\n\n\t\tthis.uiScene.add(closeContainer);\n\t\tthis.resizeUIPanel(this.width, this.height);\n\t}\n\n\tresizeUIPanel(width, height) {\n\t\tif(!this.isMobile){\n\t\t\tthis.contactBtn.container.position.set(-width / 3, -height / 4, 0);\n\t\t}else{\n\t\t\tthis.contactBtn.container.position.set(-width / 3.5, height / 2.5, 0);\n\t\t}\n\t\tlet closeContainer = this.closeBtn.container;\n\t\tconst topOffset = height / 2 - this.closeBtnBox.y / 2 - 20;\n\t\tconst leftOffset = width / 2 - this.closeBtnBox.x / 2 - 20;\n\t\tcloseContainer.position.set(leftOffset, topOffset, 0);\n\t}\n\n\tinitCamera() {\n\t\tthis.camera.position.copy(this.cameraInitPos);\n\t\tthis.camera.lookAt(this.cameraLookAtPos);\n\t\t// Test\n\t\t// this.control = new OrbitControls(this.camera, this.viewer.container);\n\t}\n\n\tinitParticleChip() {\n\t\tthis.particleChip = new ParticleChip(this.scene);\n\t}\n\n\tinitText() {\n\t\tlet material = (this.textMaterial = this.fontGenerator.createFontMaterial(1));\n\t\tmaterial.uniforms.time = { value: 0.0 };\n\t\t// Apply text color\n\t\tObject.keys(TextUniformConfig).map(key => {\n\t\t\tmaterial.uniforms[`${key}`] = { value: TextUniformConfig[key].clone() };\n\t\t});\n\n\t\tthis.titleMesh = this.initTextMesh(TextConfig.mainTitle, material);\n\t\tthis.subTitleMesh = this.initTextMesh(TextConfig.subTitle, material);\n\t\tthis.animeNameTitle = new AnimeNameTitle(this, AnimeName, AnimeTitleUniforms);\n\t\tthis.resizeText(this.width, this.height);\n\t}\n\n\tresizeText(width, height) {\n\t\tif (!this.isMobile) {\n\t\t\tthis.resizeTextForPC(width, height);\n\t\t} else {\n\t\t\tthis.resizeTextForMobile(width, height);\n\t\t}\n\n\t\tthis.animeNameTitle.resize(width, height);\n\t}\n\n\tresizeTextForPC(width, height) {\n\t\tlet { titleMesh, subTitleMesh } = this;\n\t\tconst topOffset = height / 4;\n\t\tconst leftOffset = -width / 2.25;\n\t\tconst titleScale = clamp(width / 1000, 1.2, 1.4);\n\t\ttitleMesh.scale.setScalar(titleScale);\n\t\ttitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\tconst subTitleScale = clamp(width / 2000, 0.4, 0.6);\n\t\tlet subBBox = computeMeshBoundingBox(subTitleMesh).length.multiplyScalar(subTitleScale);\n\t\tsubTitleMesh.scale.setScalar(subTitleScale);\n\t\tsubTitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\t// Gap between title and subtitle\n\t\tsubTitleMesh.position.y = topOffset - subBBox.y - 20;\n\t}\n\n\tresizeTextForMobile(width, height) {\n\t\tlet { titleMesh, subTitleMesh } = this;\n\t\tconst topOffset = -height / 5;\n\t\tconst leftOffset = -width / 2.25;\n\t\tconst titleScale = clamp(width / 500, 0.7, 0.9);\n\t\ttitleMesh.scale.setScalar(titleScale);\n\t\ttitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\tconst subTitleScale = clamp(width / 1000, 0.35, 0.45);\n\t\tlet subBBox = computeMeshBoundingBox(subTitleMesh).length.multiplyScalar(subTitleScale);\n\t\tsubTitleMesh.scale.setScalar(subTitleScale);\n\t\tsubTitleMesh.position.set(leftOffset, topOffset, 0);\n\n\t\t// Gap between title and subtitle\n\t\tsubTitleMesh.position.y = topOffset - subBBox.y - 20;\n\t}\n\n\tinitBackground() {\n\t\tlet texture = this.assetLibrary.get('Texture-OnePunch1');\n\t\t// let texture = this.assetLibrary.get('Texture-Wuyu1');\n\t\tlet bgMesh = (this.bgMesh = new TextureBG(texture, this.postProcessingMaterial));\n\t\tbgMesh.layers.set(this.layers.BG_LAYER);\n\t\tthis.scene.add(bgMesh);\n\t}\n\n\twhileVisible(order) {\n\t\tlet cameraPos = this.camera.position;\n\t\tlet textOpacity = this.textMaterial.uniforms.opacity;\n\t\tgsap.killTweensOf(cameraPos);\n\t\tif (order === 'pre') {\n\t\t\tgsap.fromTo(cameraPos, { y: -0.5 }, { y: 0, duration: this.viewer.scrollAnimeDuration });\n\t\t} else {\n\t\t\tgsap.fromTo(cameraPos, { y: 0.5 }, { y: 0, duration: this.viewer.scrollAnimeDuration });\n\t\t}\n\t\tgsap.fromTo(textOpacity, { value: 0 }, { value: 1, duration: 1.5, delay: 0.5, ease: 'power2.out' });\n\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, { value: 1, duration: 1, delay: 1, ease: 'power2.out' });\n\t\tgsap.fromTo(\n\t\t\tthis.bgMesh.material.uniforms.vignetteDarkness,\n\t\t\t{ value: 1 },\n\t\t\t{ value: 0.6, duration: 1.5, delay: 0.8, ease: 'power2.out' }\n\t\t);\n\t\tgsap.to(this.contactBtn, { opacity: 0.8, duration: 1.5, delay: 0.5, ease: 'power2.out' });\n\t}\n\n\twhileNoVisible(order) {\n\t\tlet cameraPos = this.camera.position;\n\t\tlet textOpacity = this.textMaterial.uniforms.opacity;\n\t\tgsap.killTweensOf(cameraPos);\n\t\tif (order === 'pre') {\n\t\t\tgsap.fromTo(cameraPos, { y: 0 }, { y: 0.5, duration: this.viewer.scrollAnimeDuration });\n\t\t} else {\n\t\t\tgsap.fromTo(cameraPos, { y: 0 }, { y: -0.5, duration: this.viewer.scrollAnimeDuration });\n\t\t}\n\t\tgsap.fromTo(textOpacity, { value: 1 }, { value: 0, duration: 0.5, ease: 'power2.out' });\n\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, { value: 0, duration: 1, ease: 'power2.out' });\n\t\tgsap.to(this.contactBtn, { opacity: 0.0, duration: 0.8, ease: 'power2.out' });\n\t\t// Close\n\t\tif (this.isOpenContactPanel) this.closeContactPanel();\n\t}\n\n\topenContactPanel() {\n\t\tif (this.isOpenContactPanel) return;\n\t\tthis.isOpenContactPanel = true;\n\t\tconst duration = 1;\n\t\t// 1.Blur BG\n\t\tgsap.fromTo(\n\t\t\tthis.blurIterations,\n\t\t\t{ value: this.blurIterations.start },\n\t\t\t{ value: this.blurIterations.target, duration, ease: 'power2.out' }\n\t\t);\n\t\t// 2.Button Animation\n\t\tgsap.to(this.contactBtn, {\n\t\t\topacity: 0,\n\t\t\tduration,\n\t\t\tease: 'power2.out',\n\t\t\tonComplete: () => {\n\t\t\t\tthis.contactBtn.visible = false;\n\t\t\t}\n\t\t});\n\t\tthis.closeBtn.visible = true;\n\t\tgsap.to(this.closeBtn, { opacity: 0.5, duration, ease: 'power2.out' });\n\t\tthis.intersectsArr = [this.closeBtn.hitArea];\n\t\t// 3.Text\n\t\tlet textOpacity = this.textMaterial.uniforms.opacity;\n\t\tgsap.fromTo(textOpacity, { value: 1 }, { value: 0, duration, ease: 'power2.out' });\n\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, { value: 0, duration, ease: 'power2.out' });\n\t\t// 4.2D\n\t\tthis.viewer.toggleConactPanle(true);\n\t}\n\n\tcloseContactPanel() {\n\t\tif (!this.isOpenContactPanel) return;\n\t\tthis.isOpenContactPanel = false;\n\t\tconst duration = 1;\n\t\t// 1.Blur BG\n\t\tgsap.fromTo(\n\t\t\tthis.blurIterations,\n\t\t\t{ value: this.blurIterations.target },\n\t\t\t{ value: this.blurIterations.start, duration, ease: 'power2.out' }\n\t\t);\n\t\t// 2.Button Animation\n\t\tthis.contactBtn.visible = true;\n\t\tgsap.to(this.contactBtn, {\n\t\t\topacity: 0.8,\n\t\t\tduration,\n\t\t\tease: 'power2.out'\n\t\t});\n\t\tgsap.to(this.closeBtn, {\n\t\t\topacity: 0,\n\t\t\tduration,\n\t\t\tease: 'power2.out',\n\t\t\tonComplete: () => {\n\t\t\t\tthis.closeBtn.visible = false;\n\t\t\t}\n\t\t});\n\t\tthis.intersectsArr = [this.contactBtn.hitArea];\n\t\t// 3.Text\n\t\tlet textOpacity = this.textMaterial.uniforms.opacity;\n\t\tgsap.fromTo(textOpacity, { value: 0 }, { value: 1, duration, ease: 'power2.out' });\n\t\tgsap.to(this.animeNameTitle.material.uniforms.opacity, { value: 1, duration, ease: 'power2.out' });\n\t\t// 4.2D\n\t\tthis.viewer.toggleConactPanle(false);\n\t}\n\n\tinitEvent() {\n\t\tif (!this.isMobile) this.eventHandler.onMouseMoveEvent.bind(this.onMouseMove.bind(this));\n\t\tthis.intersectsArr.push(this.contactBtn.hitArea);\n\t\tthis.eventHandler.onClickEvent.bind(this.onClick.bind(this));\n\t}\n\n\tonClick() {\n\t\tif (!this.visible) return;\n\t\tif (this.isMobile) {\n\t\t\tlet x = event.clientX;\n\t\t\tlet y = event.clientY;\n\t\t\tthis.clickNDCPos.set((x / window.innerWidth) * 2 - 1, (-y / window.innerHeight) * 2 + 1);\n\t\t\tconsole.log(this.clickNDCPos);\n\t\t\tthis.raycaster.setFromCamera(this.clickNDCPos, this.uiCamera);\n\t\t\tthis.intersects = this.raycaster.intersectObjects(this.intersectsArr);\n\t\t}\n\t\tif (!this.intersects.length) return;\n\t\tlet intersectsRes = this.intersects[0].object;\n\t\tif (intersectsRes.name === 'rectangleButton') {\n\t\t\tthis.openContactPanel();\n\t\t} else if (intersectsRes.name === 'closeButton') {\n\t\t\tthis.closeContactPanel();\n\t\t}\n\t}\n\n\tonMouseMove() {\n\t\tif (!this.visible) return;\n\t\tthis.raycaster.setFromCamera(this.state.pointer.ndcPosition, this.uiCamera);\n\t\tthis.intersects = this.raycaster.intersectObjects(this.intersectsArr);\n\t\tif (this.intersects.length > 0) {\n\t\t\tdocument.body.setAttribute('cursor', 'pointer');\n\t\t} else {\n\t\t\tdocument.body.removeAttribute('cursor');\n\t\t}\n\t}\n\n\tresize(width, height, dpr) {\n\t\tconst pixelWidth = width * dpr;\n\t\tconst pixelHeight = height * dpr;\n\t\tthis.postProcessingMaterial.resize(pixelWidth, pixelHeight);\n\t\tthis.postRenderTarget.setSize(pixelWidth, pixelHeight);\n\t\tthis.camera.aspect = width / height;\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.uiCamera.left = -width / 2;\n\t\tthis.uiCamera.right = width / 2;\n\t\tthis.uiCamera.top = height / 2;\n\t\tthis.uiCamera.bottom = -height / 2;\n\t\tthis.uiCamera.updateProjectionMatrix();\n\t\tthis.bgMesh.resize(width, height);\n\t\tthis.resizeText(width, height);\n\t\tthis.resizeUIPanel(width, height);\n\t}\n\n\trender({ renderer, orthoCamera, target, deltaTime } = {}) {\n\t\tif (!this.visible) return;\n\t\t// BG\n\t\torthoCamera.layers.set(this.layers.BG_LAYER);\n\t\trenderer.render(this.scene, orthoCamera);\n\t\t// Scene\n\t\tif (this.particleChip) this.particleChip.render(deltaTime);\n\t\trenderer.render(this.scene, this.camera);\n\n\t\tthis.renderPost(target);\n\t\t// UI\n\t\tif (this.isOpenContactPanel) {\n\t\t\tthis.closeBtn.update(deltaTime);\n\t\t} else {\n\t\t\tthis.contactBtn.update(deltaTime);\n\t\t}\n\t\tthis.uiCamera.layers.set(this.layers.UI_LAYER);\n\t\trenderer.render(this.uiScene, this.uiCamera);\n\t}\n}\n","export default class Signal {\n\tconstructor() {\n\t\tthis._listeners = [];\n\t\tthis._lookUp = new Map();\n\t}\n\n\tbind(event, self) {\n\t\tthis._lookUp.set(event, this._listeners.length);\n\t\tlet resFun = self ? event.bind(self) : event;\n\t\tthis._listeners.push(resFun);\n\t}\n\n\tunbind(key) {\n\t\tlet pos = this._lookUp.get(key);\n\t\t// Delete\n\t\tthis._listeners.splice(pos, 1);\n\t\tthis._lookUp.delete(key);\n\t}\n\n\tdispatch(key) {\n\t\tfor (let len = this._listeners.length, i = 0; i < len; i++) this._listeners[i](key);\n\t}\n\n\tget hasListeners() {\n\t\treturn this._listeners.length > 0;\n\t}\n}\n","import * as THREE from 'three';\nimport Signal from 'JS/Signal';\nimport normalizeWheel from 'normalize-wheel';\n\nexport class EventHandler {\n\tconstructor(isMobile) {\n\t\tthis.isMobile = isMobile;\n\t\tthis.initEvent();\n\t\tthis.time = +new Date();\n\t\tthis.lastTime = null;\n\t\tthis.touchStartPos = new THREE.Vector2();\n\t\tthis.touchMovePos = new THREE.Vector2();\n\t}\n\n\tinitEvent() {\n\t\tif (!this.isMobile) {\n\t\t\t// PC\n\t\t\tthis.onMouseMoveEvent = new Signal();\n\t\t\tthis.onScrollEvent = new Signal();\n\t\t\tdocument.addEventListener('mousemove', this.onMouseMove.bind(this), { passive: true });\n\t\t\tdocument.addEventListener('wheel', this.onScroll.bind(this), { passive: false });\n\t\t} else {\n\t\t\t// Mobile\n\t\t\tthis.onTouchMoveEvent = new Signal();\n\t\t\tdocument.addEventListener('touchstart', this.onTouchStart.bind(this));\n\t\t\tdocument.addEventListener('touchmove', this.onTouchMove.bind(this));\n\t\t}\n\t\tthis.onClickEvent = new Signal();\n\t\tdocument.addEventListener('click', this.onClick.bind(this));\n\t}\n\n\tonClick(event) {\n\t\tthis.onClickEvent.dispatch(event);\n\t}\n\n\tonMouseMove(event) {\n\t\tthis.onMouseMoveEvent.dispatch(event);\n\t}\n\n\tonScroll(event) {\n\t\t// 禁止滚动回弹\n\t\tevent.preventDefault();\n\t\tthis.time = +new Date();\n\t\t// 节流缓解神奇的触控板延后触发\n\t\tif (this.time - this.lastTime > 1400 || !this.lastTime) {\n\t\t\tlet normalEvent = normalizeWheel(event);\n\t\t\tthis.onScrollEvent.dispatch(normalEvent);\n\t\t\tthis.lastTime = this.time;\n\t\t}\n\t}\n\n\tonTouchStart(event) {\n\t\tthis.touchStartPos.set(event.touches[0].clientX, event.touches[0].clientY);\n\t}\n\n\tonTouchMove(event) {\n\t\tthis.touchMovePos.set(event.touches[0].clientX, event.touches[0].clientY);\n\t\tlet offset = {\n\t\t\tx: this.touchMovePos.x,\n\t\t\ty: this.touchMovePos.y,\n\t\t\toffsetX: this.touchMovePos.x - this.touchStartPos.x,\n\t\t\toffsetY: this.touchMovePos.y - this.touchStartPos.y\n\t\t};\n\t\tthis.onTouchMoveEvent.dispatch(offset);\n\t}\n}\n","export default \"#define GLSLIFY 1\\nattribute vec2 uv;\\nattribute vec4 position;\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\nvarying vec2 vUv;\\nuniform float time;\\n\\nvoid main() {\\n  vUv = uv;\\n  vec3 p = vec3(position.x, position.y, position.z);\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\\n}\";","export default \"#define GLSLIFY 1\\nattribute vec2 uv;\\nattribute vec4 position;\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\nvarying vec2 vUv;\\nuniform float time;\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\\n\\nfloat mod289(float x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nfloat permute(float x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat taylorInvSqrt(float r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec4 grad4(float j, vec4 ip)\\n  {\\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\\n  vec4 p,s;\\n\\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\\n  s = vec4(lessThan(p, vec4(0.0)));\\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\\n\\n  return p;\\n  }\\n\\n// (sqrt(5) - 1)/4 = F4, used once below\\n#define F4 0.309016994374947451\\n\\nfloat snoise(vec4 v)\\n  {\\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\\n                        0.276393202250021,  // 2 * G4\\n                        0.414589803375032,  // 3 * G4\\n                       -0.447213595499958); // -1 + 4 * G4\\n\\n// First corner\\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\\n  vec4 x0 = v -   i + dot(i, C.xxxx);\\n\\n// Other corners\\n\\n// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\\n  vec4 i0;\\n  vec3 isX = step( x0.yzw, x0.xxx );\\n  vec3 isYZ = step( x0.zww, x0.yyz );\\n//  i0.x = dot( isX, vec3( 1.0 ) );\\n  i0.x = isX.x + isX.y + isX.z;\\n  i0.yzw = 1.0 - isX;\\n//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\\n  i0.y += isYZ.x + isYZ.y;\\n  i0.zw += 1.0 - isYZ.xy;\\n  i0.z += isYZ.z;\\n  i0.w += 1.0 - isYZ.z;\\n\\n  // i0 now contains the unique values 0,1,2,3 in each channel\\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\\n\\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\\n  vec4 x1 = x0 - i1 + C.xxxx;\\n  vec4 x2 = x0 - i2 + C.yyyy;\\n  vec4 x3 = x0 - i3 + C.zzzz;\\n  vec4 x4 = x0 + C.wwww;\\n\\n// Permutations\\n  i = mod289(i);\\n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\\n  vec4 j1 = permute( permute( permute( permute (\\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\\n\\n// Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\\n// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\\n\\n  vec4 p0 = grad4(j0,   ip);\\n  vec4 p1 = grad4(j1.x, ip);\\n  vec4 p2 = grad4(j1.y, ip);\\n  vec4 p3 = grad4(j1.z, ip);\\n  vec4 p4 = grad4(j1.w, ip);\\n\\n// Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n  p4 *= taylorInvSqrt(dot(p4,p4));\\n\\n// Mix contributions from the five corners\\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\\n  m0 = m0 * m0;\\n  m1 = m1 * m1;\\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\\n\\n  }\\n\\nvoid main() {\\n  vUv = uv;\\n  vec3 p = vec3(position.x, position.y, position.z);\\n  float n = snoise(vec4(p, 1.0 + time * 0.5)) * 2.0;\\n  p.y += n * 0.5;\\n  p.z += n * 0.5;\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\\n}\";","export default \"#define GLSLIFY 1\\nattribute vec2 uv;\\nattribute vec4 position;\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\nvarying vec2 vUv;\\nuniform float time;\\n\\nvoid main() {\\n  vUv = uv;\\n  vec3 p = vec3(position.x, position.y, position.z);\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\\n}\";","export default \"#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nuniform float opacity;\\nuniform vec3 color;\\nuniform sampler2D map;\\nvarying vec2 vUv;\\nuniform float time;\\nuniform vec2 resolution;\\n\\nuniform vec3 color1;\\nuniform vec3 color2;\\nuniform vec3 color3;\\nuniform vec3 color4;\\n\\n// https://iquilezles.org/www/articles/palettes/palettes.htm\\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ) {\\n  return a + b*cos( 6.28318*(c*t+d) );\\n}\\n\\nfloat median(float r, float g, float b) {\\n  return max(min(r, g), min(max(r, g), b));\\n}\\n\\nvoid main() {\\n  vec3 sample = texture2D(map, vUv).rgb;\\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\\n  float alpha = clamp(sigDist/abs(dFdx(sigDist)) + abs(dFdy(sigDist)) + 0.5, 0.0, 1.0);\\n\\n  float speed = .5;\\n  vec2 p = gl_FragCoord.xy * 0.01 + 0.5;\\n  p.x *= .3;\\n  p.y *= .8;\\n  // float scale = 10.0;\\n  // vec2 p = vUv * scale + 0.5;\\n\\n  for(int i = 1; i < 10; i++) {\\n    p.x += 0.45 / float(i) * sin(float(i) * 3.0 * p.y + time * speed);\\n    p.y += 0.45 / float(i) * cos(float(i) * 3.0 * p.x + time * speed);\\n  }\\n\\n  float r = cos(p.x + p.y + 1.0) * .5 + 0.5;\\n\\n  // Color mixing\\n  vec3 palette = palette(r, color1, color2, color3, color4);\\n\\n  gl_FragColor = vec4(palette, alpha * opacity);\\n  if (gl_FragColor.a < 0.0001) discard;\\n}\";","export default \"#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nuniform float opacity;\\nuniform vec3 color;\\nuniform sampler2D map;\\nvarying vec2 vUv;\\nuniform float time;\\nuniform vec2 resolution;\\n\\nuniform vec3 topColor;\\nuniform vec3 bottomColor;\\n\\nfloat median(float r, float g, float b) {\\n  return max(min(r, g), min(max(r, g), b));\\n}\\n\\nvoid main() {\\n  vec3 sample = texture2D(map, vUv).rgb;\\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\\n  float alpha = clamp(sigDist/fwidth(sigDist) + 0.5, 0.0, 1.0);\\n\\n  vec3 newColor = mix(bottomColor, topColor, vUv.y);\\n\\n  // gl_FragColor = vec4(color.xyz, alpha * opacity);\\n  gl_FragColor = vec4(newColor, alpha * opacity);\\n  \\n  if (gl_FragColor.a < 0.0001) discard;\\n}\";","export default \"#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nuniform float opacity;\\nuniform vec3 color;\\nuniform sampler2D map;\\nvarying vec2 vUv;\\nuniform float time;\\n\\nfloat median(float r, float g, float b) {\\n  return max(min(r, g), min(max(r, g), b));\\n}\\n\\nvoid main() {\\n  vec3 sample = texture2D(map, vUv).rgb;\\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\\n  float alpha = clamp(sigDist/fwidth(sigDist) + 0.5, 0.0, 1.0);\\n  gl_FragColor = vec4(color.xyz, alpha * opacity);\\n  if (gl_FragColor.a < 0.0001) discard;\\n}\";","import vertex1 from './vertex/fontType1.glsl';\nimport vertex2 from './vertex/fontType2.glsl';\nimport vertex3 from './vertex/fontType3.glsl';\n\nimport fragment1 from './fragment/fontType1.glsl';\nimport fragment2 from './fragment/fontType2.glsl';\nimport fragment3 from './fragment/fontType3.glsl';\n\nexport const fontShaders = [\n\t{ vertex: vertex1, fragment: fragment1 },\n\t{ vertex: vertex2, fragment: fragment2 },\n\t{ vertex: vertex3, fragment: fragment3 }\n];\n","import * as THREE from 'three';\nimport createGeometry from 'three-bmfont-text';\nimport MSDFShader from 'three-bmfont-text/shaders/msdf';\nimport { fontShaders } from 'MODULES/FontShaders/';\n\nexport class FontGenerator {\n\tconstructor(assetLibrary) {\n\t\tthis.fontTexture = assetLibrary.get('Texture-Lato');\n\t\tthis.font = assetLibrary.get('Font-Lato');\n\t}\n\n\tcreateFontMaterial(fontShadersKey, opts) {\n\t\tlet material = new THREE.RawShaderMaterial(\n\t\t\tMSDFShader({\n\t\t\t\tvertexShader: fontShaders[fontShadersKey].vertex,\n\t\t\t\tfragmentShader: fontShaders[fontShadersKey].fragment,\n\t\t\t\tmap: this.fontTexture,\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\ttransparent: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tnegate: false,\n\t\t\t\topacity: 0 // Through animation to 1\n\t\t\t})\n\t\t);\n\t\tmaterial.uniforms.resolution = { value: new THREE.Vector2(window.innerWidth, window.innerHeight) };\n\t\treturn material;\n\t}\n\n\tcreateFontMesh(text, material) {\n\t\tconst geometry = createGeometry({ font: this.font, text });\n\t\treturn new THREE.Mesh(geometry, material);\n\t}\n}\n","// Todo:\n// 0.性能差距怎么这么大？！\n// 1.国内访问加速(Nettfy什么鬼的)\n// 2.移动端专用图片配置\n\nimport * as THREE from 'three';\nimport { HomeSection, AnimeSection, WorkSection, AboutSection } from './sections/index';\nimport { EventHandler } from 'JS/EventHandler';\n// Text\nimport { FontGenerator } from './sections/common/FontGenerator';\nimport { gsap } from 'gsap';\n\nexport default class ScenesViewer {\n\tconstructor(mainScene) {\n\t\tthis.mainScene = mainScene;\n\t\tthis.renderer = mainScene.renderer;\n\t\tthis.isMobile = mainScene.isMobile;\n\t\tthis.scene = mainScene.scene;\n\t\tthis.clock = mainScene.clock;\n\t\tthis.assetLibrary = mainScene.assetLibrary;\n\t\tthis.fontGenerator = new FontGenerator(this.assetLibrary);\n\t\tthis.container = mainScene.container;\n\t\tthis.scene = mainScene.scene;\n\t\tthis.camera = mainScene.camera;\n\t\t// Viewport\n\t\tthis.width = mainScene.width;\n\t\tthis.height = mainScene.height;\n\t\tthis.dpr = mainScene.dpr;\n\n\t\tthis.scrollMultiplier = 1.2;\n\t\tthis.isSectionChanging = false;\n\t\tthis.scrollAnimeDuration = 1.4;\n\n\t\tthis.state = {\n\t\t\tpreloadFinished: false,\n\t\t\tscissors: [\n\t\t\t\t[0, window.innerHeight],\n\t\t\t\t[0, window.innerHeight]\n\t\t\t],\n\t\t\t// Section\n\t\t\tvisibleSections: [0],\n\t\t\tcurrentScetionIndex: 0,\n\t\t\tnextSectionIndex: null,\n\t\t\t// Mouse move\n\t\t\tpointer: {\n\t\t\t\tposition: [0, 0],\n\t\t\t\tpositionNorm: [0, 0],\n\t\t\t\tndcPosition: new THREE.Vector2()\n\t\t\t},\n\t\t\t// Scroll\n\t\t\tscrollDirection: '',\n\t\t\tscroll: {\n\t\t\t\tprogress: 0\n\t\t\t}\n\t\t};\n\n\t\tthis.initEvent();\n\n\t\t// Reuse Geometry\n\t\tlet screenGeometry = (this.screenGeometry = new THREE.BufferGeometry());\n\t\tlet posVertices = new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]);\n\t\tlet uvVertices = new Float32Array([0, 0, 2, 0, 0, 2]);\n\t\tscreenGeometry.setAttribute('position', new THREE.BufferAttribute(posVertices, 3));\n\t\tscreenGeometry.setAttribute('uv', new THREE.BufferAttribute(uvVertices, 2));\n\n\t\tthis.init();\n\t\tthis.initPostprocessing();\n\t\tthis.initSection();\n\t}\n\n\tinitEvent() {\n\t\tthis.eventHandler = new EventHandler(this.isMobile);\n\t\tif(!this.isMobile){\n\t\t\tthis.eventHandler.onMouseMoveEvent.bind(this.onMouseMove.bind(this));\n\t\t\tthis.eventHandler.onScrollEvent.bind(this.onScroll.bind(this));\n\t\t}else{\n\t\t\tthis.eventHandler.onTouchMoveEvent.bind(this.onTouchMoveEvent.bind(this));\n\t\t}\n\t}\n\n\tinit() {\n\t\t// 复用RenderTarget\n\t\tthis.targets = new Array(2).fill().map(() => {\n\t\t\tlet quad = new THREE.Mesh(this.screenGeometry);\n\t\t\tquad.frustumCulled = false;\n\t\t\tthis.scene.add(quad);\n\t\t\tlet target = new THREE.WebGLRenderTarget(this.width, this.height);\n\t\t\ttarget.texture.encoding = this.renderer.outputEncoding;\n\t\t\ttarget.texture.generateMipmaps = false;\n\t\t\treturn {\n\t\t\t\ttarget,\n\t\t\t\tquad\n\t\t\t};\n\t\t});\n\n\t\tthis.camera = new THREE.PerspectiveCamera(45, 1, 1, 700);\n\t\tthis.camera.position.z = 10;\n\t\tthis.scene.add(this.camera);\n\n\t\tthis.orthoCamera = new THREE.OrthographicCamera(1, 1, 1, 1, 0, 1000);\n\t\tthis.orthoCamera.position.z = 10;\n\t\tthis.scene.add(this.orthoCamera);\n\t}\n\n\tinitSection() {\n\t\tthis.sections = [];\n\t\tthis.sections[0] = new HomeSection(this);\n\t\tthis.sections[1] = new AnimeSection(this);\n\t\tthis.sections[2] = new WorkSection(this);\n\t\tthis.sections[3] = new AboutSection(this);\n\t\t// Init every section\n\t\tthis.sections.forEach((section, index) => {\n\t\t\tsection.visible = this.state.currentScetionIndex === index ? true : false;\n\t\t\tthis.state.visibleSections = [this.state.currentScetionIndex];\n\t\t\tsection.init();\n\t\t\tsection.postProcessingMaterial.map = this.targets[0].target.texture;\n\t\t\tthis.targets[0].quad.material = section.postProcessingMaterial;\n\t\t\tsection.precompile();\n\t\t});\n\t}\n\n\tinitPostprocessing() {\n\t\tthis.postCamera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\t\tthis.postRenderTarget = new THREE.WebGLRenderTarget(this.width, this.height, {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthBuffer: false\n\t\t});\n\t\tthis.postRenderTarget.texture.generateMipmaps = false;\n\t}\n\n\tentryAnime() {\n\t\t// Todo:\n\t\t// 1.router\n\t\t// 2.Every Section has their own entry anime\n\t\tthis.sections[0].entryAnime(() => {\n\t\t\tthis.preloadFinished = true;\n\t\t});\n\t}\n\n\ttoggleConactPanle(status) {\n\t\tthis.mainScene.toggleConactCallback(status);\n\t}\n\n\tonMouseMove(event) {\n\t\tthis.setPointerPos({\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY\n\t\t});\n\t}\n\n\tonTouchMoveEvent(event) {\n\t\tconst offsetY = event.offsetY;\n\t\tconst offsetX = event.offsetX;\n\t\t// Y\n\t\tif (Math.abs(offsetX) < Math.abs(offsetY) && Math.abs(offsetY) > 50) {\n\t\t\tthis.state.scrollDirection = offsetY > 0 ? 'Up' : 'Down';\n\t\t\tthis.swapSection();\n\t\t}\n\t\t// X\n\t\tthis.setPointerPos({\n\t\t\tx: event.x,\n\t\t\ty: event.y\n\t\t});\n\t}\n\n\tsetPointerPos({ x, y } = {}) {\n\t\t// Record to state\n\t\tthis.state.pointer.position = [x, y];\n\t\tthis.state.pointer.positionNorm = [x / window.innerWidth, y / window.innerHeight];\n\t\tthis.state.pointer.ndcPosition.set(\n\t\t\tthis.state.pointer.positionNorm[0] * 2 - 1,\n\t\t\t-this.state.pointer.positionNorm[1] * 2 + 1\n\t\t);\n\t}\n\n\tonScroll(event) {\n\t\tthis.state.scrollDirection = event.pixelY > 0 ? 'Down' : 'Up';\n\t\tthis.swapSection();\n\t}\n\n\tswapSection() {\n\t\tlet state = this.state;\n\t\tif (this.isSectionChanging) return;\n\t\tthis.isSectionChanging = true;\n\t\tconst isUpScroll = state.scrollDirection === 'Up';\n\n\t\t// Infinite loop\n\t\tif (isUpScroll) {\n\t\t\tif (state.currentScetionIndex === 0) {\n\t\t\t\tstate.nextSectionIndex = this.sections.length - 1;\n\t\t\t} else {\n\t\t\t\tstate.nextSectionIndex = state.currentScetionIndex - 1;\n\t\t\t}\n\t\t} else {\n\t\t\tstate.nextSectionIndex = (state.currentScetionIndex + 1) % this.sections.length;\n\t\t}\n\t\tstate.visibleSections = [state.currentScetionIndex, state.nextSectionIndex];\n\t\tlet currentSection = this.sections[state.currentScetionIndex];\n\t\tlet nextSection = this.sections[state.nextSectionIndex];\n\t\t// Reset visible status\n\t\tthis.sections.forEach((section, index) => {\n\t\t\tif (state.currentScetionIndex === index || state.nextSectionIndex === index) {\n\t\t\t\tsection.visible = true;\n\t\t\t} else {\n\t\t\t\tsection.visible = false;\n\t\t\t}\n\t\t});\n\t\t// Hooks\n\t\tcurrentSection.whileNoVisible(isUpScroll ? 'pre' : 'next');\n\t\tnextSection.whileVisible(isUpScroll ? 'pre' : 'next');\n\t\t// Animation\n\t\tlet curScissors = state.scissors[0];\n\t\tlet nextScissors = state.scissors[1];\n\t\tgsap.killTweensOf(state.scroll);\n\t\tgsap.fromTo(\n\t\t\tstate.scroll,\n\t\t\t{ progress: 0 },\n\t\t\t{\n\t\t\t\tprogress: 1,\n\t\t\t\tduration: this.scrollAnimeDuration,\n\t\t\t\tease: 'power2.out',\n\t\t\t\tonUpdate: () => {\n\t\t\t\t\tlet progress = state.scroll.progress;\n\t\t\t\t\tif (isUpScroll) progress = 1 - progress;\n\t\t\t\t\tcurrentSection.postProcessingMaterial.progress = progress;\n\t\t\t\t\tcurrentSection.postProcessingMaterial.isNext = isUpScroll ? true : false;\n\t\t\t\t\tnextSection.postProcessingMaterial.progress = progress;\n\t\t\t\t\tnextSection.postProcessingMaterial.isNext = isUpScroll ? false : true;\n\t\t\t\t\t// Scissors optimize\n\t\t\t\t\tcurScissors[0] = isUpScroll ? 0 : this.height * progress;\n\t\t\t\t\tcurScissors[1] = isUpScroll ? this.height * progress : this.height - curScissors[0];\n\n\t\t\t\t\tnextScissors[0] = isUpScroll ? this.height * progress : 0; // Down Scroll\n\t\t\t\t\tnextScissors[1] = isUpScroll ? this.height - nextScissors[0] : this.height * progress;\n\t\t\t\t},\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tthis.sections[state.currentScetionIndex].visible = false;\n\t\t\t\t\tstate.currentScetionIndex = state.nextSectionIndex;\n\t\t\t\t\tstate.nextSectionIndex = null;\n\t\t\t\t\tstate.visibleSections = [state.currentScetionIndex];\n\t\t\t\t\tthis.isSectionChanging = false;\n\t\t\t\t\tcurScissors[0] = 0;\n\t\t\t\t\tcurScissors[1] = this.height;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tresize(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tlet dpr = this.renderer.getPixelRatio();\n\t\tthis.camera.aspect = width / height;\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.sections.forEach(section => {\n\t\t\tsection.resize(width, height, dpr);\n\t\t});\n\n\t\tconst pixelWidth = width * dpr;\n\t\tconst pixelHeight = height * dpr;\n\t\tthis.targets.forEach(target => {\n\t\t\tlet renderTarget = target.target;\n\t\t\trenderTarget.setSize(pixelWidth, pixelHeight);\n\t\t});\n\t\tthis.postRenderTarget.setSize(pixelWidth, pixelHeight);\n\t}\n\n\tupdate() {\n\t\tlet deltaTime = this.clock.getDelta();\n\t\tlet { dpr, width, height, renderer, scene, orthoCamera } = this;\n\t\t// Clear before rendering\n\t\tthis.targets.forEach(target => {\n\t\t\tthis.renderer.setRenderTarget(target.target);\n\t\t\tthis.renderer.clear();\n\t\t});\n\t\t// Render each sections scene to quad\n\t\tthis.state.visibleSections.forEach((item, index) => {\n\t\t\tlet section = this.sections[item];\n\t\t\tif (section.render) {\n\t\t\t\tlet scissor = this.state.scissors[index];\n\t\t\t\tlet scissorY = scissor[0];\n\t\t\t\tlet scissorHeight = scissor[1];\n\n\t\t\t\tlet target = this.targets[index];\n\t\t\t\tlet renderTarget = target.target;\n\t\t\t\tlet quad = target.quad;\n\n\t\t\t\tif(this.isSectionChanging){\n\t\t\t\t\trenderTarget.scissorTest = true;\n\t\t\t\t\t// From left corner\n\t\t\t\t\trenderTarget.scissor.set(0, scissorY * dpr, width * dpr, scissorHeight * dpr);\n\t\t\t\t}\n\n\t\t\t\tquad.material = section.postProcessingMaterial;\n\t\t\t\tquad.material.map = renderTarget.texture;\n\n\t\t\t\trenderer.setRenderTarget(renderTarget);\n\t\t\t\tsection.render({\n\t\t\t\t\trenderer,\n\t\t\t\t\torthoCamera,\n\t\t\t\t\ttarget: renderTarget,\n\t\t\t\t\tdeltaTime\n\t\t\t\t});\n\t\t\t\trenderTarget.scissorTest = false;\n\t\t\t}\n\t\t});\n\t\t// Render quads\n\t\tthis.orthoCamera.layers.set(0);\n\t\tthis.renderer.setRenderTarget(null);\n\t\tthis.renderer.clear();\n\t\tthis.renderer.render(this.scene, this.orthoCamera);\n\t}\n}\n","/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternionKeyframeTrack,\n\tRGBAFormat,\n\tRGBFormat,\n\tRepeatWrapping,\n\tScene,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTangentSpaceNormalMap,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tVertexColors,\n\tsRGBEncoding\n} from 'three';\n\nvar GLTFLoader = (function () {\n\tfunction GLTFLoader(manager) {\n\t\tLoader.call(this, manager);\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\t}\n\n\tGLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function (url, onLoad, onProgress, onError) {\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif (this.resourcePath !== '') {\n\t\t\t\tresourcePath = this.resourcePath;\n\t\t\t} else if (this.path !== '') {\n\t\t\t\tresourcePath = this.path;\n\t\t\t} else {\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase(url);\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart(url);\n\n\t\t\tvar _onError = function (e) {\n\t\t\t\tif (onError) {\n\t\t\t\t\tonError(e);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader(scope.manager);\n\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setResponseType('arraybuffer');\n\n\t\t\tif (scope.crossOrigin === 'use-credentials') {\n\t\t\t\tloader.setWithCredentials(true);\n\t\t\t}\n\n\t\t\tloader.load(\n\t\t\t\turl,\n\t\t\t\tfunction (data) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tscope.parse(\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tresourcePath,\n\t\t\t\t\t\t\tfunction (gltf) {\n\t\t\t\t\t\t\t\tonLoad(gltf);\n\n\t\t\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t_onError\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t_onError(e);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonProgress,\n\t\t\t\t_onError\n\t\t\t);\n\t\t},\n\n\t\tsetDRACOLoader: function (dracoLoader) {\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\t\t},\n\n\t\tsetDDSLoader: function (ddsLoader) {\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\t\t},\n\n\t\tparse: function (data, path, onLoad, onError) {\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif (typeof data === 'string') {\n\t\t\t\tcontent = data;\n\t\t\t} else {\n\t\t\t\tvar magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n\t\t\t\tif (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\textensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (onError) onError(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n\t\t\t\t} else {\n\t\t\t\t\tcontent = LoaderUtils.decodeText(new Uint8Array(data));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar json = JSON.parse(content);\n\n\t\t\tif (json.asset === undefined || json.asset.version[0] < 2) {\n\t\t\t\tif (onError)\n\t\t\t\t\tonError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (json.extensionsUsed) {\n\t\t\t\tfor (var i = 0; i < json.extensionsUsed.length; ++i) {\n\t\t\t\t\tvar extensionName = json.extensionsUsed[i];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch (extensionName) {\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[extensionName] = new GLTFLightsExtension(json);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[extensionName] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[extensionName] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[extensionName] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (extensionsRequired.indexOf(extensionName) >= 0) {\n\t\t\t\t\t\t\t\tconsole.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser(json, extensions, {\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\t\t\t});\n\n\t\t\tparser.parse(onLoad, onError);\n\t\t}\n\t});\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\t\tvar objects = {};\n\n\t\treturn {\n\t\t\tget: function (key) {\n\t\t\t\treturn objects[key];\n\t\t\t},\n\n\t\t\tadd: function (key, object) {\n\t\t\t\tobjects[key] = object;\n\t\t\t},\n\n\t\t\tremove: function (key) {\n\t\t\t\tdelete objects[key];\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\t\t\t\tobjects = {};\n\t\t\t}\n\t\t};\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension(ddsLoader) {\n\t\tif (!ddsLoader) {\n\t\t\tthrow new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension(json) {\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n\t\tvar lightDef = this.lightDefs[lightIndex];\n\t\tvar lightNode;\n\n\t\tvar color = new Color(0xffffff);\n\t\tif (lightDef.color !== undefined) color.fromArray(lightDef.color);\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch (lightDef.type) {\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight(color);\n\t\t\t\tlightNode.target.position.set(0, 0, -1);\n\t\t\t\tlightNode.add(lightNode.target);\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight(color);\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight(color);\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle =\n\t\t\t\t\tlightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle =\n\t\t\t\t\tlightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set(0, 0, -1);\n\t\t\t\tlightNode.add(lightNode.target);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set(0, 0, 0);\n\n\t\tlightNode.decay = 2;\n\n\t\tif (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || 'light_' + lightIndex;\n\n\t\treturn Promise.resolve(lightNode);\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\t\treturn MeshBasicMaterial;\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color(1.0, 1.0, 1.0);\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif (metallicRoughness) {\n\t\t\tif (Array.isArray(metallicRoughness.baseColorFactor)) {\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray(array);\n\t\t\t\tmaterialParams.opacity = array[3];\n\t\t\t}\n\n\t\t\tif (metallicRoughness.baseColorTexture !== undefined) {\n\t\t\t\tpending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all(pending);\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\n\n\tfunction GLTFBinaryExtension(data) {\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n\t\t\tversion: headerView.getUint32(4, true),\n\t\t\tlength: headerView.getUint32(8, true)\n\t\t};\n\n\t\tif (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n\t\t\tthrow new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n\t\t} else if (this.header.version < 2.0) {\n\t\t\tthrow new Error('THREE.GLTFLoader: Legacy binary file detected.');\n\t\t}\n\n\t\tvar chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n\t\tvar chunkIndex = 0;\n\n\t\twhile (chunkIndex < chunkView.byteLength) {\n\t\t\tvar chunkLength = chunkView.getUint32(chunkIndex, true);\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32(chunkIndex, true);\n\t\t\tchunkIndex += 4;\n\n\t\t\tif (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n\t\t\t\tvar contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n\t\t\t\tthis.content = LoaderUtils.decodeText(contentArray);\n\t\t\t} else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice(byteOffset, byteOffset + chunkLength);\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\t\t}\n\n\t\tif (this.content === null) {\n\t\t\tthrow new Error('THREE.GLTFLoader: JSON content not found.');\n\t\t}\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n\t\tif (!dracoLoader) {\n\t\t\tthrow new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[this.name].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[this.name].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor (var attributeName in gltfAttributeMap) {\n\t\t\tvar threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n\t\t}\n\n\t\tfor (attributeName in primitive.attributes) {\n\t\t\tvar threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n\t\t\tif (gltfAttributeMap[attributeName] !== undefined) {\n\t\t\t\tvar accessorDef = json.accessors[primitive.attributes[attributeName]];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n\t\t\t\tattributeTypeMap[threeAttributeName] = componentType;\n\t\t\t\tattributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n\t\t\t}\n\t\t}\n\n\t\treturn parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n\t\t\treturn new Promise(function (resolve) {\n\t\t\t\tdracoLoader.decodeDracoFile(\n\t\t\t\t\tbufferView,\n\t\t\t\t\tfunction (geometry) {\n\t\t\t\t\t\tfor (var attributeName in geometry.attributes) {\n\t\t\t\t\t\t\tvar attribute = geometry.attributes[attributeName];\n\t\t\t\t\t\t\tvar normalized = attributeNormalizedMap[attributeName];\n\n\t\t\t\t\t\t\tif (normalized !== undefined) attribute.normalized = normalized;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve(geometry);\n\t\t\t\t\t},\n\t\t\t\t\tthreeAttributeMap,\n\t\t\t\t\tattributeTypeMap\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n\t\ttexture = texture.clone();\n\n\t\tif (transform.offset !== undefined) {\n\t\t\ttexture.offset.fromArray(transform.offset);\n\t\t}\n\n\t\tif (transform.rotation !== undefined) {\n\t\t\ttexture.rotation = transform.rotation;\n\t\t}\n\n\t\tif (transform.scale !== undefined) {\n\t\t\ttexture.repeat.fromArray(transform.scale);\n\t\t}\n\n\t\tif (transform.texCoord !== undefined) {\n\t\t\tconsole.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial(params) {\n\t\tMeshStandardMaterial.call(this);\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join(\n\t\t\t'\\n'\n\t\t);\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join('\\n');\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join('\\n');\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join('\\n');\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;'\n\t\t].join('\\n');\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new Color().setHex(0xffffff) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function (shader) {\n\t\t\tfor (var uniformName in uniforms) {\n\t\t\t\tshader.uniforms[uniformName] = uniforms[uniformName];\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;');\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\n\t\t\t\t'uniform float metalness;',\n\t\t\t\t'uniform float glossiness;'\n\t\t\t);\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\n\t\t\t\t'#include <roughnessmap_pars_fragment>',\n\t\t\t\tspecularMapParsFragmentChunk\n\t\t\t);\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\n\t\t\t\t'#include <metalnessmap_pars_fragment>',\n\t\t\t\tglossinessMapParsFragmentChunk\n\t\t\t);\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\n\t\t\t\t'#include <roughnessmap_fragment>',\n\t\t\t\tspecularMapFragmentChunk\n\t\t\t);\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\n\t\t\t\t'#include <metalnessmap_fragment>',\n\t\t\t\tglossinessMapFragmentChunk\n\t\t\t);\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\n\t\t\t\t'#include <lights_physical_fragment>',\n\t\t\t\tlightPhysicalFragmentChunk\n\t\t\t);\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(this, {\n\t\t\tspecular: {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn uniforms.specular.value;\n\t\t\t\t},\n\t\t\t\tset: function (v) {\n\t\t\t\t\tuniforms.specular.value = v;\n\t\t\t\t}\n\t\t\t},\n\t\t\tspecularMap: {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn uniforms.specularMap.value;\n\t\t\t\t},\n\t\t\t\tset: function (v) {\n\t\t\t\t\tuniforms.specularMap.value = v;\n\t\t\t\t}\n\t\t\t},\n\t\t\tglossiness: {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn uniforms.glossiness.value;\n\t\t\t\t},\n\t\t\t\tset: function (v) {\n\t\t\t\t\tuniforms.glossiness.value = v;\n\t\t\t\t}\n\t\t\t},\n\t\t\tglossinessMap: {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn uniforms.glossinessMap.value;\n\t\t\t\t},\n\t\t\t\tset: function (v) {\n\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\tif (v) {\n\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues(params);\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n\t\tMeshStandardMaterial.prototype.copy.call(this, source);\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy(source.specular);\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\t\treturn {\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio'\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\t\t\t},\n\n\t\t\textendParams: function (materialParams, materialDef, parser) {\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[this.name];\n\n\t\t\t\tmaterialParams.color = new Color(1.0, 1.0, 1.0);\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray(array);\n\t\t\t\t\tmaterialParams.opacity = array[3];\n\t\t\t\t}\n\n\t\t\t\tif (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n\t\t\t\t\tpending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color(0.0, 0.0, 0.0);\n\t\t\t\tmaterialParams.glossiness =\n\t\t\t\t\tpbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color(1.0, 1.0, 1.0);\n\n\t\t\t\tif (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n\t\t\t\t\tmaterialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n\t\t\t\t}\n\n\t\t\t\tif (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\n\t\t\t\t\tpending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all(pending);\n\t\t\t},\n\n\t\t\tcreateMaterial: function (materialParams) {\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial(materialParams);\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif (materialParams.normalScale) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap =\n\t\t\t\t\tmaterialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\tInterpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor (var i = 0; i !== valueSize; i++) {\n\t\t\tresult[i] = values[offset + i];\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = (t - t0) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = -2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor (var i = 0; i !== stride; i++) {\n\t\t\tvar p0 = values[offset0 + i + stride]; // splineVertex_k\n\t\t\tvar m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[offset1 + i + stride]; // splineVertex_k+1\n\t\t\tvar m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\tSCALAR: 1,\n\t\tVEC2: 2,\n\t\tVEC3: 3,\n\t\tVEC4: 4,\n\t\tMAT2: 4,\n\t\tMAT3: 9,\n\t\tMAT4: 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex'\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t// keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL(url, path) {\n\t\t// Invalid URL\n\t\tif (typeof url !== 'string' || url === '') return '';\n\n\t\t// Host Relative URL\n\t\tif (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n\t\t\tpath = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif (/^(https?:)?\\/\\//i.test(url)) return url;\n\n\t\t// Data URI\n\t\tif (/^data:.*,.*$/i.test(url)) return url;\n\n\t\t// Blob URL\n\t\tif (/^blob:.*$/i.test(url)) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial(cache) {\n\t\tif (cache['DefaultMaterial'] === undefined) {\n\t\t\tcache['DefaultMaterial'] = new MeshStandardMaterial({\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t});\n\t\t}\n\n\t\treturn cache['DefaultMaterial'];\n\t}\n\n\tfunction addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor (var name in objectDef.extensions) {\n\t\t\tif (knownExtensions[name] === undefined) {\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[name] = objectDef.extensions[name];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData(object, gltfDef) {\n\t\tif (gltfDef.extras !== undefined) {\n\t\t\tif (typeof gltfDef.extras === 'object') {\n\t\t\t\tObject.assign(object.userData, gltfDef.extras);\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets(geometry, targets, parser) {\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor (var i = 0, il = targets.length; i < il; i++) {\n\t\t\tvar target = targets[i];\n\n\t\t\tif (target.POSITION !== undefined) hasMorphPosition = true;\n\t\t\tif (target.NORMAL !== undefined) hasMorphNormal = true;\n\n\t\t\tif (hasMorphPosition && hasMorphNormal) break;\n\t\t}\n\n\t\tif (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor (var i = 0, il = targets.length; i < il; i++) {\n\t\t\tvar target = targets[i];\n\n\t\t\tif (hasMorphPosition) {\n\t\t\t\tvar pendingAccessor =\n\t\t\t\t\ttarget.POSITION !== undefined\n\t\t\t\t\t\t? parser.getDependency('accessor', target.POSITION)\n\t\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push(pendingAccessor);\n\t\t\t}\n\n\t\t\tif (hasMorphNormal) {\n\t\t\t\tvar pendingAccessor =\n\t\t\t\t\ttarget.NORMAL !== undefined\n\t\t\t\t\t\t? parser.getDependency('accessor', target.NORMAL)\n\t\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push(pendingAccessor);\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (\n\t\t\taccessors\n\t\t) {\n\t\t\tvar morphPositions = accessors[0];\n\t\t\tvar morphNormals = accessors[1];\n\n\t\t\tif (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n\t\t\tif (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\t\t});\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets(mesh, meshDef) {\n\t\tmesh.updateMorphTargets();\n\n\t\tif (meshDef.weights !== undefined) {\n\t\t\tfor (var i = 0, il = meshDef.weights.length; i < il; i++) {\n\t\t\t\tmesh.morphTargetInfluences[i] = meshDef.weights[i];\n\t\t\t}\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif (mesh.morphTargetInfluences.length === targetNames.length) {\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor (var i = 0, il = targetNames.length; i < il; i++) {\n\t\t\t\t\tmesh.morphTargetDictionary[targetNames[i]] = i;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction createPrimitiveKey(primitiveDef) {\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n\t\tvar geometryKey;\n\n\t\tif (dracoExtension) {\n\t\t\tgeometryKey =\n\t\t\t\t'draco:' +\n\t\t\t\tdracoExtension.bufferView +\n\t\t\t\t':' +\n\t\t\t\tdracoExtension.indices +\n\t\t\t\t':' +\n\t\t\t\tcreateAttributesKey(dracoExtension.attributes);\n\t\t} else {\n\t\t\tgeometryKey =\n\t\t\t\tprimitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n\t\t}\n\n\t\treturn geometryKey;\n\t}\n\n\tfunction createAttributesKey(attributes) {\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys(attributes).sort();\n\n\t\tfor (var i = 0, il = keys.length; i < il; i++) {\n\t\t\tattributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n\t\t}\n\n\t\treturn attributesKey;\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser(json, extensions, options) {\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new TextureLoader(this.options.manager);\n\t\tthis.textureLoader.setCrossOrigin(this.options.crossOrigin);\n\n\t\tthis.fileLoader = new FileLoader(this.options.manager);\n\t\tthis.fileLoader.setResponseType('arraybuffer');\n\n\t\tif (this.options.crossOrigin === 'use-credentials') {\n\t\t\tthis.fileLoader.setWithCredentials(true);\n\t\t}\n\t}\n\n\tGLTFParser.prototype.parse = function (onLoad, onError) {\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')])\n\t\t\t.then(function (dependencies) {\n\t\t\t\tvar result = {\n\t\t\t\t\tscene: dependencies[0][json.scene || 0],\n\t\t\t\t\tscenes: dependencies[0],\n\t\t\t\t\tanimations: dependencies[1],\n\t\t\t\t\tcameras: dependencies[2],\n\t\t\t\t\tasset: json.asset,\n\t\t\t\t\tparser: parser,\n\t\t\t\t\tuserData: {}\n\t\t\t\t};\n\n\t\t\t\taddUnknownExtensionsToUserData(extensions, result, json);\n\n\t\t\t\tassignExtrasToUserData(result, json);\n\n\t\t\t\tonLoad(result);\n\t\t\t})\n\t\t\t.catch(onError);\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n\t\t\tvar joints = skinDefs[skinIndex].joints;\n\n\t\t\tfor (var i = 0, il = joints.length; i < il; i++) {\n\t\t\t\tnodeDefs[joints[i]].isBone = true;\n\t\t\t}\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n\t\t\tvar nodeDef = nodeDefs[nodeIndex];\n\n\t\t\tif (nodeDef.mesh !== undefined) {\n\t\t\t\tif (meshReferences[nodeDef.mesh] === undefined) {\n\t\t\t\t\tmeshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[nodeDef.mesh]++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif (nodeDef.skin !== undefined) {\n\t\t\t\t\tmeshDefs[nodeDef.mesh].isSkinnedMesh = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function (type, index) {\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get(cacheKey);\n\n\t\tif (!dependency) {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unknown type: ' + type);\n\t\t\t}\n\n\t\t\tthis.cache.add(cacheKey, dependency);\n\t\t}\n\n\t\treturn dependency;\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function (type) {\n\t\tvar dependencies = this.cache.get(type);\n\n\t\tif (!dependencies) {\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n\n\t\t\tdependencies = Promise.all(\n\t\t\t\tdefs.map(function (def, index) {\n\t\t\t\t\treturn parser.getDependency(type, index);\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis.cache.add(type, dependencies);\n\t\t}\n\n\t\treturn dependencies;\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function (bufferIndex) {\n\t\tvar bufferDef = this.json.buffers[bufferIndex];\n\t\tvar loader = this.fileLoader;\n\n\t\tif (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n\t\t\tthrow new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif (bufferDef.uri === undefined && bufferIndex === 0) {\n\t\t\treturn Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tloader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n\t\t\t\treject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n\t\t\t});\n\t\t});\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n\t\tvar bufferViewDef = this.json.bufferViews[bufferViewIndex];\n\n\t\treturn this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t\t});\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function (accessorIndex) {\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[accessorIndex];\n\n\t\tif (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif (accessorDef.bufferView !== undefined) {\n\t\t\tpendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n\t\t} else {\n\t\t\tpendingBufferViews.push(null);\n\t\t}\n\n\t\tif (accessorDef.sparse !== undefined) {\n\t\t\tpendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n\t\t\tpendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n\t\t}\n\n\t\treturn Promise.all(pendingBufferViews).then(function (bufferViews) {\n\t\t\tvar bufferView = bufferViews[0];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride =\n\t\t\t\taccessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif (byteStride && byteStride !== itemBytes) {\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor(byteOffset / byteStride);\n\t\t\t\tvar ibCacheKey =\n\t\t\t\t\t'InterleavedBuffer:' +\n\t\t\t\t\taccessorDef.bufferView +\n\t\t\t\t\t':' +\n\t\t\t\t\taccessorDef.componentType +\n\t\t\t\t\t':' +\n\t\t\t\t\tibSlice +\n\t\t\t\t\t':' +\n\t\t\t\t\taccessorDef.count;\n\t\t\t\tvar ib = parser.cache.get(ibCacheKey);\n\n\t\t\t\tif (!ib) {\n\t\t\t\t\tarray = new TypedArray(\n\t\t\t\t\t\tbufferView,\n\t\t\t\t\t\tibSlice * byteStride,\n\t\t\t\t\t\t(accessorDef.count * byteStride) / elementBytes\n\t\t\t\t\t);\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer(array, byteStride / elementBytes);\n\n\t\t\t\t\tparser.cache.add(ibCacheKey, ib);\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(\n\t\t\t\t\tib,\n\t\t\t\t\titemSize,\n\t\t\t\t\t(byteOffset % byteStride) / elementBytes,\n\t\t\t\t\tnormalized\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (bufferView === null) {\n\t\t\t\t\tarray = new TypedArray(accessorDef.count * itemSize);\n\t\t\t\t} else {\n\t\t\t\t\tarray = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute(array, itemSize, normalized);\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif (accessorDef.sparse !== undefined) {\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices(\n\t\t\t\t\tbufferViews[1],\n\t\t\t\t\tbyteOffsetIndices,\n\t\t\t\t\taccessorDef.sparse.count * itemSizeIndices\n\t\t\t\t);\n\t\t\t\tvar sparseValues = new TypedArray(\n\t\t\t\t\tbufferViews[2],\n\t\t\t\t\tbyteOffsetValues,\n\t\t\t\t\taccessorDef.sparse.count * itemSize\n\t\t\t\t);\n\n\t\t\t\tif (bufferView !== null) {\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute(\n\t\t\t\t\t\tbufferAttribute.array.slice(),\n\t\t\t\t\t\tbufferAttribute.itemSize,\n\t\t\t\t\t\tbufferAttribute.normalized\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, il = sparseIndices.length; i < il; i++) {\n\t\t\t\t\tvar index = sparseIndices[i];\n\n\t\t\t\t\tbufferAttribute.setX(index, sparseValues[i * itemSize]);\n\t\t\t\t\tif (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n\t\t\t\t\tif (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n\t\t\t\t\tif (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n\t\t\t\t\tif (itemSize >= 5)\n\t\t\t\t\t\tthrow new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\t\t});\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function (textureIndex) {\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[textureIndex];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n\t\t\tsource = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n\t\t} else {\n\t\t\tsource = json.images[textureDef.source];\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif (source.bufferView !== undefined) {\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob([bufferView], { type: source.mimeType });\n\t\t\t\tsourceURI = URL.createObjectURL(blob);\n\t\t\t\treturn sourceURI;\n\t\t\t});\n\t\t}\n\n\t\treturn Promise.resolve(sourceURI)\n\t\t\t.then(function (sourceURI) {\n\t\t\t\t// Load Texture resource.\n\n\t\t\t\tvar loader = options.manager.getHandler(sourceURI);\n\n\t\t\t\tif (!loader) {\n\t\t\t\t\tloader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]\n\t\t\t\t\t\t? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader\n\t\t\t\t\t\t: textureLoader;\n\t\t\t\t}\n\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tloader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(function (texture) {\n\t\t\t\t// Clean up resources and configure Texture.\n\n\t\t\t\tif (isObjectURL === true) {\n\t\t\t\t\tURL.revokeObjectURL(sourceURI);\n\t\t\t\t}\n\n\t\t\t\ttexture.flipY = false;\n\n\t\t\t\tif (textureDef.name !== undefined) texture.name = textureDef.name;\n\n\t\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\t\tif (source.mimeType in MIME_TYPE_FORMATS) {\n\t\t\t\t\ttexture.format = MIME_TYPE_FORMATS[source.mimeType];\n\t\t\t\t}\n\n\t\t\t\tvar samplers = json.samplers || {};\n\t\t\t\tvar sampler = samplers[textureDef.sampler] || {};\n\n\t\t\t\ttexture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n\t\t\t\ttexture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n\t\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n\t\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n\n\t\t\t\treturn texture;\n\t\t\t});\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n\t\tvar parser = this;\n\n\t\treturn this.getDependency('texture', mapDef.index).then(function (texture) {\n\t\t\tif (!texture.isCompressedTexture) {\n\t\t\t\tswitch (mapName) {\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif (\n\t\t\t\tmapDef.texCoord !== undefined &&\n\t\t\t\tmapDef.texCoord != 0 &&\n\t\t\t\t!(mapName === 'aoMap' && mapDef.texCoord == 1)\n\t\t\t) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'THREE.GLTFLoader: Custom UV set ' +\n\t\t\t\t\t\tmapDef.texCoord +\n\t\t\t\t\t\t' for texture ' +\n\t\t\t\t\t\tmapName +\n\t\t\t\t\t\t' not yet supported.'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n\t\t\t\tvar transform =\n\t\t\t\t\tmapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n\n\t\t\t\tif (transform) {\n\t\t\t\t\ttexture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmaterialParams[mapName] = texture;\n\t\t});\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function (mesh) {\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\t\tvar extensions = this.extensions;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif (mesh.isPoints) {\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get(cacheKey);\n\n\t\t\tif (!pointsMaterial) {\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call(pointsMaterial, material);\n\t\t\t\tpointsMaterial.color.copy(material.color);\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add(cacheKey, pointsMaterial);\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\t\t} else if (mesh.isLine) {\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get(cacheKey);\n\n\t\t\tif (!lineMaterial) {\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call(lineMaterial, material);\n\t\t\t\tlineMaterial.color.copy(material.color);\n\n\t\t\t\tthis.cache.add(cacheKey, lineMaterial);\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n\t\t\tif (useSkinning) cacheKey += 'skinning:';\n\t\t\tif (useVertexTangents) cacheKey += 'vertex-tangents:';\n\t\t\tif (useVertexColors) cacheKey += 'vertex-colors:';\n\t\t\tif (useFlatShading) cacheKey += 'flat-shading:';\n\t\t\tif (useMorphTargets) cacheKey += 'morph-targets:';\n\t\t\tif (useMorphNormals) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get(cacheKey);\n\n\t\t\tif (!cachedMaterial) {\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif (useSkinning) cachedMaterial.skinning = true;\n\t\t\t\tif (useVertexTangents) cachedMaterial.vertexTangents = true;\n\t\t\t\tif (useVertexColors) cachedMaterial.vertexColors = VertexColors;\n\t\t\t\tif (useFlatShading) cachedMaterial.flatShading = true;\n\t\t\t\tif (useMorphTargets) cachedMaterial.morphTargets = true;\n\t\t\t\tif (useMorphNormals) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add(cacheKey, cachedMaterial);\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n\t\t\tgeometry.setAttribute('uv2', new BufferAttribute(geometry.attributes.uv.array, 2));\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif (material.normalScale && !useVertexTangents) {\n\t\t\tmaterial.normalScale.y = -material.normalScale.y;\n\t\t}\n\n\t\tmesh.material = material;\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function (materialIndex) {\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[materialIndex];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n\t\t\tvar sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n\t\t} else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n\t\t\tvar kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n\t\t} else {\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color(1.0, 1.0, 1.0);\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif (Array.isArray(metallicRoughness.baseColorFactor)) {\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray(array);\n\t\t\t\tmaterialParams.opacity = array[3];\n\t\t\t}\n\n\t\t\tif (metallicRoughness.baseColorTexture !== undefined) {\n\t\t\t\tpending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n\t\t\t}\n\n\t\t\tmaterialParams.metalness =\n\t\t\t\tmetallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness =\n\t\t\t\tmetallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif (metallicRoughness.metallicRoughnessTexture !== undefined) {\n\t\t\t\tpending.push(\n\t\t\t\t\tparser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture)\n\t\t\t\t);\n\t\t\t\tpending.push(\n\t\t\t\t\tparser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (materialDef.doubleSided === true) {\n\t\t\tmaterialParams.side = DoubleSide;\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif (alphaMode === ALPHA_MODES.BLEND) {\n\t\t\tmaterialParams.transparent = true;\n\t\t} else {\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif (alphaMode === ALPHA_MODES.MASK) {\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\t\t\t}\n\t\t}\n\n\t\tif (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n\t\t\tpending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n\n\t\t\tmaterialParams.normalScale = new Vector2(1, 1);\n\n\t\t\tif (materialDef.normalTexture.scale !== undefined) {\n\t\t\t\tmaterialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n\t\t\t}\n\t\t}\n\n\t\tif (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n\t\t\tpending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n\n\t\t\tif (materialDef.occlusionTexture.strength !== undefined) {\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\t\t\t}\n\t\t}\n\n\t\tif (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n\t\t\tmaterialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n\t\t}\n\n\t\tif (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n\t\t\tpending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n\t\t}\n\n\t\treturn Promise.all(pending).then(function () {\n\t\t\tvar material;\n\n\t\t\tif (materialType === GLTFMeshStandardSGMaterial) {\n\t\t\t\tmaterial = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n\t\t\t} else {\n\t\t\t\tmaterial = new materialType(materialParams);\n\t\t\t}\n\n\t\t\tif (materialDef.name !== undefined) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif (material.map) material.map.encoding = sRGBEncoding;\n\t\t\tif (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData(material, materialDef);\n\n\t\t\tif (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n\n\t\t\treturn material;\n\t\t});\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds(geometry, primitiveDef, parser) {\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif (attributes.POSITION !== undefined) {\n\t\t\tvar accessor = parser.json.accessors[attributes.POSITION];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif (min !== undefined && max !== undefined) {\n\t\t\t\tbox.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif (targets !== undefined) {\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor (var i = 0, il = targets.length; i < il; i++) {\n\t\t\t\tvar target = targets[i];\n\n\t\t\t\tif (target.POSITION !== undefined) {\n\t\t\t\t\tvar accessor = parser.json.accessors[target.POSITION];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif (min !== undefined && max !== undefined) {\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n\t\t\t\t\t\tvector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n\t\t\t\t\t\tvector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\n\n\t\t\t\t\t\tbox.expandByVector(vector);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter(sphere.center);\n\t\tsphere.radius = box.min.distanceTo(box.max) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes(geometry, primitiveDef, parser) {\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor(accessorIndex, attributeName) {\n\t\t\treturn parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n\t\t\t\tgeometry.setAttribute(attributeName, accessor);\n\t\t\t});\n\t\t}\n\n\t\tfor (var gltfAttributeName in attributes) {\n\t\t\tvar threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif (threeAttributeName in geometry.attributes) continue;\n\n\t\t\tpending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n\t\t}\n\n\t\tif (primitiveDef.indices !== undefined && !geometry.index) {\n\t\t\tvar accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n\t\t\t\tgeometry.setIndex(accessor);\n\t\t\t});\n\n\t\t\tpending.push(accessor);\n\t\t}\n\n\t\tassignExtrasToUserData(geometry, primitiveDef);\n\n\t\tcomputeBounds(geometry, primitiveDef, parser);\n\n\t\treturn Promise.all(pending).then(function () {\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets(geometry, primitiveDef.targets, parser)\n\t\t\t\t: geometry;\n\t\t});\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode(geometry, drawMode) {\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif (index === null) {\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute('position');\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tfor (var i = 0; i < position.count; i++) {\n\t\t\t\t\tindices.push(i);\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex(indices);\n\t\t\t\tindex = geometry.getIndex();\n\t\t\t} else {\n\t\t\t\tconsole.error(\n\t\t\t\t\t'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.'\n\t\t\t\t);\n\t\t\t\treturn geometry;\n\t\t\t}\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif (drawMode === TriangleFanDrawMode) {\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor (var i = 1; i <= numberOfTriangles; i++) {\n\t\t\t\tnewIndices.push(index.getX(0));\n\t\t\t\tnewIndices.push(index.getX(i));\n\t\t\t\tnewIndices.push(index.getX(i + 1));\n\t\t\t}\n\t\t} else {\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor (var i = 0; i < numberOfTriangles; i++) {\n\t\t\t\tif (i % 2 === 0) {\n\t\t\t\t\tnewIndices.push(index.getX(i));\n\t\t\t\t\tnewIndices.push(index.getX(i + 1));\n\t\t\t\t\tnewIndices.push(index.getX(i + 2));\n\t\t\t\t} else {\n\t\t\t\t\tnewIndices.push(index.getX(i + 2));\n\t\t\t\t\tnewIndices.push(index.getX(i + 1));\n\t\t\t\t\tnewIndices.push(index.getX(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newIndices.length / 3 !== numberOfTriangles) {\n\t\t\tconsole.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex(newIndices);\n\n\t\treturn newGeometry;\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function (primitives) {\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive(primitive) {\n\t\t\treturn extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\n\t\t\t\t.decodePrimitive(primitive, parser)\n\t\t\t\t.then(function (geometry) {\n\t\t\t\t\treturn addPrimitiveAttributes(geometry, primitive, parser);\n\t\t\t\t});\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor (var i = 0, il = primitives.length; i < il; i++) {\n\t\t\tvar primitive = primitives[i];\n\t\t\tvar cacheKey = createPrimitiveKey(primitive);\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[cacheKey];\n\n\t\t\tif (cached) {\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push(cached.promise);\n\t\t\t} else {\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive(primitive);\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[cacheKey] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push(geometryPromise);\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all(pending);\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function (meshIndex) {\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[meshIndex];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor (var i = 0, il = primitives.length; i < il; i++) {\n\t\t\tvar material =\n\t\t\t\tprimitives[i].material === undefined\n\t\t\t\t\t? createDefaultMaterial(this.cache)\n\t\t\t\t\t: this.getDependency('material', primitives[i].material);\n\n\t\t\tpending.push(material);\n\t\t}\n\n\t\tpending.push(parser.loadGeometries(primitives));\n\n\t\treturn Promise.all(pending).then(function (results) {\n\t\t\tvar materials = results.slice(0, results.length - 1);\n\t\t\tvar geometries = results[results.length - 1];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor (var i = 0, il = geometries.length; i < il; i++) {\n\t\t\t\tvar geometry = geometries[i];\n\t\t\t\tvar primitive = primitives[i];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[i];\n\n\t\t\t\tif (\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined\n\t\t\t\t) {\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh =\n\t\t\t\t\t\tmeshDef.isSkinnedMesh === true\n\t\t\t\t\t\t\t? new SkinnedMesh(geometry, material)\n\t\t\t\t\t\t\t: new Mesh(geometry, material);\n\n\t\t\t\t\tif (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\n\t\t\t\t\t} else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\n\t\t\t\t\t}\n\t\t\t\t} else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n\t\t\t\t\tmesh = new LineSegments(geometry, material);\n\t\t\t\t} else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n\t\t\t\t\tmesh = new Line(geometry, material);\n\t\t\t\t} else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n\t\t\t\t\tmesh = new LineLoop(geometry, material);\n\t\t\t\t} else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n\t\t\t\t\tmesh = new Points(geometry, material);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n\t\t\t\t}\n\n\t\t\t\tif (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n\t\t\t\t\tupdateMorphTargets(mesh, meshDef);\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || 'mesh_' + meshIndex;\n\n\t\t\t\tif (geometries.length > 1) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData(mesh, meshDef);\n\n\t\t\t\tparser.assignFinalMaterial(mesh);\n\n\t\t\t\tmeshes.push(mesh);\n\t\t\t}\n\n\t\t\tif (meshes.length === 1) {\n\t\t\t\treturn meshes[0];\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor (var i = 0, il = meshes.length; i < il; i++) {\n\t\t\t\tgroup.add(meshes[i]);\n\t\t\t}\n\n\t\t\treturn group;\n\t\t});\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function (cameraIndex) {\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[cameraIndex];\n\t\tvar params = cameraDef[cameraDef.type];\n\n\t\tif (!params) {\n\t\t\tconsole.warn('THREE.GLTFLoader: Missing camera parameters.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (cameraDef.type === 'perspective') {\n\t\t\tcamera = new PerspectiveCamera(\n\t\t\t\tMathUtils.radToDeg(params.yfov),\n\t\t\t\tparams.aspectRatio || 1,\n\t\t\t\tparams.znear || 1,\n\t\t\t\tparams.zfar || 2e6\n\t\t\t);\n\t\t} else if (cameraDef.type === 'orthographic') {\n\t\t\tcamera = new OrthographicCamera(\n\t\t\t\tparams.xmag / -2,\n\t\t\t\tparams.xmag / 2,\n\t\t\t\tparams.ymag / 2,\n\t\t\t\tparams.ymag / -2,\n\t\t\t\tparams.znear,\n\t\t\t\tparams.zfar\n\t\t\t);\n\t\t}\n\n\t\tif (cameraDef.name !== undefined) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData(camera, cameraDef);\n\n\t\treturn Promise.resolve(camera);\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function (skinIndex) {\n\t\tvar skinDef = this.json.skins[skinIndex];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif (skinDef.inverseBindMatrices === undefined) {\n\t\t\treturn Promise.resolve(skinEntry);\n\t\t}\n\n\t\treturn this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\t\t});\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function (animationIndex) {\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[animationIndex];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor (var i = 0, il = animationDef.channels.length; i < il; i++) {\n\t\t\tvar channel = animationDef.channels[i];\n\t\t\tvar sampler = animationDef.samplers[channel.sampler];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n\t\t\tvar output =\n\t\t\t\tanimationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n\n\t\t\tpendingNodes.push(this.getDependency('node', name));\n\t\t\tpendingInputAccessors.push(this.getDependency('accessor', input));\n\t\t\tpendingOutputAccessors.push(this.getDependency('accessor', output));\n\t\t\tpendingSamplers.push(sampler);\n\t\t\tpendingTargets.push(target);\n\t\t}\n\n\t\treturn Promise.all([\n\t\t\tPromise.all(pendingNodes),\n\t\t\tPromise.all(pendingInputAccessors),\n\t\t\tPromise.all(pendingOutputAccessors),\n\t\t\tPromise.all(pendingSamplers),\n\t\t\tPromise.all(pendingTargets)\n\t\t]).then(function (dependencies) {\n\t\t\tvar nodes = dependencies[0];\n\t\t\tvar inputAccessors = dependencies[1];\n\t\t\tvar outputAccessors = dependencies[2];\n\t\t\tvar samplers = dependencies[3];\n\t\t\tvar targets = dependencies[4];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor (var i = 0, il = nodes.length; i < il; i++) {\n\t\t\t\tvar node = nodes[i];\n\t\t\t\tvar inputAccessor = inputAccessors[i];\n\t\t\t\tvar outputAccessor = outputAccessors[i];\n\t\t\t\tvar sampler = samplers[i];\n\t\t\t\tvar target = targets[i];\n\n\t\t\t\tif (node === undefined) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch (PATH_PROPERTIES[target.path]) {\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation =\n\t\t\t\t\tsampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse(function (object) {\n\t\t\t\t\t\tif (object.isMesh === true && object.morphTargetInfluences) {\n\t\t\t\t\t\t\ttargetNames.push(object.name ? object.name : object.uuid);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttargetNames.push(targetName);\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif (outputAccessor.normalized) {\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif (outputArray.constructor === Int8Array) {\n\t\t\t\t\t\tscale = 1 / 127;\n\t\t\t\t\t} else if (outputArray.constructor === Uint8Array) {\n\t\t\t\t\t\tscale = 1 / 255;\n\t\t\t\t\t} else if (outputArray.constructor == Int16Array) {\n\t\t\t\t\t\tscale = 1 / 32767;\n\t\t\t\t\t} else if (outputArray.constructor === Uint16Array) {\n\t\t\t\t\t\tscale = 1 / 65535;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array(outputArray.length);\n\n\t\t\t\t\tfor (var j = 0, jl = outputArray.length; j < jl; j++) {\n\t\t\t\t\t\tscaled[j] = outputArray[j] * scale;\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\t\t\t\t}\n\n\t\t\t\tfor (var j = 0, jl = targetNames.length; j < jl; j++) {\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[j] + '.' + PATH_PROPERTIES[target.path],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif (sampler.interpolation === 'CUBICSPLINE') {\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant(\n\t\t\t\t\t\t\t\tthis.times,\n\t\t\t\t\t\t\t\tthis.values,\n\t\t\t\t\t\t\t\tthis.getValueSize() / 3,\n\t\t\t\t\t\t\t\tresult\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push(track);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip(name, undefined, tracks);\n\t\t});\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function (nodeIndex) {\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[nodeIndex];\n\n\t\treturn (function () {\n\t\t\tvar pending = [];\n\n\t\t\tif (nodeDef.mesh !== undefined) {\n\t\t\t\tpending.push(\n\t\t\t\t\tparser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n\t\t\t\t\t\tvar node;\n\n\t\t\t\t\t\tif (meshReferences[nodeDef.mesh] > 1) {\n\t\t\t\t\t\t\tvar instanceNum = meshUses[nodeDef.mesh]++;\n\n\t\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode = mesh;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\t\tif (nodeDef.weights !== undefined) {\n\t\t\t\t\t\t\tnode.traverse(function (o) {\n\t\t\t\t\t\t\t\tif (!o.isMesh) return;\n\n\t\t\t\t\t\t\t\tfor (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n\t\t\t\t\t\t\t\t\to.morphTargetInfluences[i] = nodeDef.weights[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (nodeDef.camera !== undefined) {\n\t\t\t\tpending.push(parser.getDependency('camera', nodeDef.camera));\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tnodeDef.extensions &&\n\t\t\t\tnodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] &&\n\t\t\t\tnodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined\n\t\t\t) {\n\t\t\t\tpending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\n\t\t\t}\n\n\t\t\treturn Promise.all(pending);\n\t\t})().then(function (objects) {\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif (nodeDef.isBone === true) {\n\t\t\t\tnode = new Bone();\n\t\t\t} else if (objects.length > 1) {\n\t\t\t\tnode = new Group();\n\t\t\t} else if (objects.length === 1) {\n\t\t\t\tnode = objects[0];\n\t\t\t} else {\n\t\t\t\tnode = new Object3D();\n\t\t\t}\n\n\t\t\tif (node !== objects[0]) {\n\t\t\t\tfor (var i = 0, il = objects.length; i < il; i++) {\n\t\t\t\t\tnode.add(objects[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nodeDef.name !== undefined) {\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n\t\t\t}\n\n\t\t\tassignExtrasToUserData(node, nodeDef);\n\n\t\t\tif (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n\t\t\tif (nodeDef.matrix !== undefined) {\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray(nodeDef.matrix);\n\t\t\t\tnode.applyMatrix4(matrix);\n\t\t\t} else {\n\t\t\t\tif (nodeDef.translation !== undefined) {\n\t\t\t\t\tnode.position.fromArray(nodeDef.translation);\n\t\t\t\t}\n\n\t\t\t\tif (nodeDef.rotation !== undefined) {\n\t\t\t\t\tnode.quaternion.fromArray(nodeDef.rotation);\n\t\t\t\t}\n\n\t\t\t\tif (nodeDef.scale !== undefined) {\n\t\t\t\t\tnode.scale.fromArray(nodeDef.scale);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t});\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = (function () {\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy(nodeId, parentObject, json, parser) {\n\t\t\tvar nodeDef = json.nodes[nodeId];\n\n\t\t\treturn parser\n\t\t\t\t.getDependency('node', nodeId)\n\t\t\t\t.then(function (node) {\n\t\t\t\t\tif (nodeDef.skin === undefined) return node;\n\n\t\t\t\t\t// build skeleton here as well\n\n\t\t\t\t\tvar skinEntry;\n\n\t\t\t\t\treturn parser\n\t\t\t\t\t\t.getDependency('skin', nodeDef.skin)\n\t\t\t\t\t\t.then(function (skin) {\n\t\t\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\t\t\tfor (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n\t\t\t\t\t\t\t\tpendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn Promise.all(pendingJoints);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(function (jointNodes) {\n\t\t\t\t\t\t\tnode.traverse(function (mesh) {\n\t\t\t\t\t\t\t\tif (!mesh.isMesh) return;\n\n\t\t\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\t\t\tfor (var j = 0, jl = jointNodes.length; j < jl; j++) {\n\t\t\t\t\t\t\t\t\tvar jointNode = jointNodes[j];\n\n\t\t\t\t\t\t\t\t\tif (jointNode) {\n\t\t\t\t\t\t\t\t\t\tbones.push(jointNode);\n\n\t\t\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t\tif (skinEntry.inverseBindMatrices !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tmat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tboneInverses.push(mat);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t\t\t\t'THREE.GLTFLoader: Joint \"%s\" could not be found.',\n\t\t\t\t\t\t\t\t\t\t\tskinEntry.joints[j]\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tmesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function (node) {\n\t\t\t\t\t// build node hierachy\n\n\t\t\t\t\tparentObject.add(node);\n\n\t\t\t\t\tvar pending = [];\n\n\t\t\t\t\tif (nodeDef.children) {\n\t\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\t\tfor (var i = 0, il = children.length; i < il; i++) {\n\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\tpending.push(buildNodeHierachy(child, node, json, parser));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all(pending);\n\t\t\t\t});\n\t\t}\n\n\t\treturn function loadScene(sceneIndex) {\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[sceneIndex];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new Scene();\n\t\t\tif (sceneDef.name !== undefined) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData(scene, sceneDef);\n\n\t\t\tif (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor (var i = 0, il = nodeIds.length; i < il; i++) {\n\t\t\t\tpending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n\t\t\t}\n\n\t\t\treturn Promise.all(pending).then(function () {\n\t\t\t\treturn scene;\n\t\t\t});\n\t\t};\n\t})();\n\n\treturn GLTFLoader;\n})();\n\nexport { GLTFLoader };\n","const zlib = window.Zlib;\n\nfunction isGunzipBuffer(arrayBuffer) {\n\tlet typedArray = new Uint8Array(arrayBuffer);\n\treturn typedArray[0] === 0x1f && typedArray[1] === 0x8b;\n}\n\nfunction gunzip(arrayBuffer) {\n\tlet typedArray = new Uint8Array(arrayBuffer);\n\tif (!zlib) {\n\t\tconsole.error(\n\t\t\t'Lack of necessary dependencies: gunzip.min.js.\\n You can add this vendors to enable this feature or get it at https://github.com/imaya/zlib.js/blob/master/bin/gunzip.min.js'\n\t\t);\n\t\treturn;\n\t}\n\tlet zdec = new zlib.Gunzip(typedArray);\n\tlet result = zdec.decompress();\n\treturn result.buffer;\n}\n\nexport { isGunzipBuffer, gunzip };\n","import * as THREE from 'three';\nimport { isGunzipBuffer, gunzip } from './zlib';\n\nexport default class CubeMapEnv {\n\tconstructor(data, size, options) {\n\t\tthis._options = options || {};\n\t\tthis._size = size;\n\t\tthis._data = data;\n\t}\n\n\t// Convert to RGBA Buffer\n\tdeinterleaveImage4(size, src, dst) {\n\t\tlet npixel = size * size;\n\t\tlet npixel2 = 2 * size * size;\n\t\tlet npixel3 = 3 * size * size;\n\t\tlet idx = 0;\n\t\tfor (let i = 0; i < npixel; i++) {\n\t\t\tdst[idx++] = src[i];\n\t\t\tdst[idx++] = src[i + npixel];\n\t\t\tdst[idx++] = src[i + npixel2];\n\t\t\tdst[idx++] = src[i + npixel3];\n\t\t}\n\t}\n\n\tloadPacked() {\n\t\tlet readInputArray = inputArray => {\n\t\t\tlet data = inputArray;\n\t\t\tif (isGunzipBuffer(data)) data = gunzip(data);\n\n\t\t\tconst maxLevel = Math.log(this._size) / Math.LN2;\n\t\t\tlet offset = 0;\n\t\t\tlet images = {};\n\t\t\t// Load cube mipmaps data\n\t\t\t// Per mipmaps level => 6 faces data\n\t\t\tfor (let i = 0; i <= maxLevel; i++) {\n\t\t\t\tlet size = Math.pow(2, maxLevel - i);\n\t\t\t\tlet byteSize;\n\t\t\t\tif (offset >= data.byteLength) break;\n\t\t\t\tfor (let face = 0; face < 6; face++) {\n\t\t\t\t\t// Add entry if does not exist\n\t\t\t\t\tif (!images[face]) images[face] = [];\n\t\t\t\t\tlet imageData;\n\t\t\t\t\tlet deinterleave;\n\n\t\t\t\t\t// RGBA\n\t\t\t\t\tbyteSize = size * size * 4;\n\t\t\t\t\t// Read a block of data\n\t\t\t\t\timageData = new Uint8Array(data, offset, byteSize);\n\t\t\t\t\t// Split it\n\t\t\t\t\tdeinterleave = new Uint8Array(byteSize);\n\t\t\t\t\t// Todo: deinterleave all just once\n\t\t\t\t\tthis.deinterleaveImage4(size, imageData, deinterleave);\n\n\t\t\t\t\timageData = deinterleave;\n\t\t\t\t\timages[face].push(imageData);\n\t\t\t\t\t// Next block\n\t\t\t\t\toffset += byteSize;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._packedImages = images;\n\t\t\tthis.createRGBA8Packed();\n\t\t};\n\n\t\treturn readInputArray(this._data);\n\t}\n\n\tcreateRGBA8Packed() {\n\t\tlet cubeTextures = (this.cubeTextures = []);\n\t\tlet size = this._size;\n\t\tlet packedImages = this._packedImages;\n\t\t// CubeTexture Mipmap\n\t\tconst numMips = packedImages[0].length;\n\t\t// Todo: encoding\n\t\tlet textureEncoding = THREE.LogLuvEncoding;\n\n\t\tfor (let mip = 0; mip < numMips; mip++) {\n\t\t\tlet cubeTexture = new THREE.CubeTexture();\n\t\t\tcubeTextures.push(cubeTexture);\n\t\t\tcubeTexture.format = THREE.RGBAFormat;\n\t\t\tcubeTexture.encoding = textureEncoding;\n\t\t\t// Todo: cubeTexture.type\n\t\t\tcubeTexture.minFilter = THREE.LinearMipMapLinearFilter;\n\t\t\tcubeTexture.magFilter = THREE.LinearFilter;\n\t\t\tcubeTexture.generateMipmaps = false;\n\n\t\t\t// Get per face data\n\t\t\tfor (let face = 0; face < 6; face++) {\n\t\t\t\tlet dataTexture = new THREE.DataTexture(packedImages[face][mip], size, size, THREE.RGBAFormat);\n\t\t\t\tdataTexture.format = cubeTexture.format;\n\t\t\t\tdataTexture.encoding = textureEncoding;\n\t\t\t\tdataTexture.type = cubeTexture.type;\n\t\t\t\tdataTexture.generateMipmaps = false;\n\t\t\t\tcubeTexture.images[face] = dataTexture;\n\t\t\t\tcubeTexture.needsUpdate = true;\n\t\t\t}\n\t\t\tcubeTexture.needsUpdate = true;\n\t\t\tsize = size / 2;\n\t\t}\n\t\t// Integrate\n\t\tthis.texture = new THREE.CubeTexture();\n\t\tthis.texture.format = THREE.RGBAFormat;\n\t\tthis.texture.encoding = textureEncoding;\n\t\tthis.texture.minFilter = this._options.minFilter || THREE.LinearMipMapLinearFilter;\n\t\tthis.texture.magFilter = this._options.magFilter || THREE.LinearFilter;\n\t\tthis.texture.generateMipmaps = false;\n\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tthis.texture.image[i] = this.cubeTextures[0].images[i];\n\t\t\tfor (let m = 1; m < numMips; m++) {\n\t\t\t\tthis.texture.mipmaps[m - 1] = this.cubeTextures[m];\n\t\t\t\tthis.cubeTextures[m].needsUpdate = true;\n\t\t\t}\n\t\t}\n\t\tthis.texture.needsUpdate = true;\n\t}\n}\n","import * as THREE from 'three';\nimport { isGunzipBuffer, gunzip } from './zlib';\n\nexport default class PanoramaEnv {\n\tconstructor(data, size, options) {\n\t\tthis._options = options || {};\n\t\tthis._size = size;\n\t\tthis._data = data;\n\t\tthis._texture = null;\n\t}\n\n\tget texture() {\n\t\treturn this._texture;\n\t}\n\n\t// Convert to RGBA Buffer\n\tdeinterleaveImage4(size, src, dst) {\n\t\tlet npixel = size * size;\n\t\tlet npixel2 = 2 * size * size;\n\t\tlet npixel3 = 3 * size * size;\n\t\tlet idx = 0;\n\t\tfor (let i = 0; i < npixel; i++) {\n\t\t\tdst[idx++] = src[i];\n\t\t\tdst[idx++] = src[i + npixel];\n\t\t\tdst[idx++] = src[i + npixel2];\n\t\t\tdst[idx++] = src[i + npixel3];\n\t\t}\n\t}\n\n\tloadPacked() {\n\t\tlet readInputArray = inputArray => {\n\t\t\tlet data = inputArray;\n\t\t\tif (isGunzipBuffer(data)) data = gunzip(data);\n\n\t\t\tlet size = this._size;\n\t\t\tlet imageData, deinterleave;\n\n\t\t\timageData = new Uint8Array(data);\n\t\t\tdeinterleave = new Uint8Array(data.byteLength);\n\t\t\tthis.deinterleaveImage4(size, imageData, deinterleave);\n\n\t\t\timageData = deinterleave;\n\n\t\t\tlet dataTexture = new THREE.DataTexture(imageData, size, size, THREE.RGBAFormat);\n\t\t\tdataTexture.encoding = THREE.LogLuvEncoding;\n\t\t\tdataTexture.flipY = true;\n\t\t\tdataTexture.needsUpdate = true;\n\t\t\tthis._texture = dataTexture;\n\t\t};\n\n\t\treturn readInputArray(this._data);\n\t}\n}\n","import * as THREE from 'three';\nimport { isGunzipBuffer, gunzip } from './zlib';\n\nexport default class IntegrateBRDF {\n\tconstructor(data, size) {\n\t\tthis._data = data;\n\t\tthis._size = size;\n\t}\n\n\tloadPacked() {\n\t\tlet readInputArray = inputArray => {\n\t\t\tlet size = this._size;\n\t\t\tlet data = inputArray;\n\t\t\tif (isGunzipBuffer(data)) data = gunzip(data);\n\n\t\t\tlet byteSize = size * size * 4;\n\t\t\tlet imageData = new Uint8Array(data, 0, byteSize);\n\t\t\tlet _texture = new THREE.DataTexture(imageData, size, size, THREE.RGBAFormat);\n\t\t\treturn _texture;\n\t\t};\n\n\t\treturn readInputArray(this._data);\n\t}\n}\n","export default class EnvironmentSphericalHarmonics {\n\tconstructor(file) {\n\t\tthis._file = file;\n\t\tthis.initSHCoef(file);\n\t}\n\n\tinitSHCoef(sphCoef) {\n\t\t// use spherical harmonics with 9 coef\n\t\tthis._sphCoef = sphCoef.slice(0, 9 * 3);\n\n\t\tlet coef0 = 1.0 / (2.0 * Math.sqrt(Math.PI));\n\t\tlet coef1 = -(Math.sqrt(3.0 / Math.PI) * 0.5);\n\t\tlet coef2 = -coef1;\n\t\tlet coef3 = coef1;\n\t\tlet coef4 = Math.sqrt(15.0 / Math.PI) * 0.5;\n\t\tlet coef5 = -coef4;\n\t\tlet coef6 = Math.sqrt(5.0 / Math.PI) * 0.25;\n\t\tlet coef7 = coef5;\n\t\tlet coef8 = Math.sqrt(15.0 / Math.PI) * 0.25;\n\n\t\tlet coef = [\n\t\t\tcoef0,\n\t\t\tcoef0,\n\t\t\tcoef0,\n\t\t\tcoef1,\n\t\t\tcoef1,\n\t\t\tcoef1,\n\t\t\tcoef2,\n\t\t\tcoef2,\n\t\t\tcoef2,\n\t\t\tcoef3,\n\t\t\tcoef3,\n\t\t\tcoef3,\n\t\t\tcoef4,\n\t\t\tcoef4,\n\t\t\tcoef4,\n\t\t\tcoef5,\n\t\t\tcoef5,\n\t\t\tcoef5,\n\t\t\tcoef6,\n\t\t\tcoef6,\n\t\t\tcoef6,\n\t\t\tcoef7,\n\t\t\tcoef7,\n\t\t\tcoef7,\n\t\t\tcoef8,\n\t\t\tcoef8,\n\t\t\tcoef8\n\t\t];\n\n\t\tthis._sphCoef = coef.map((value, index) => {\n\t\t\treturn value * this._sphCoef[index];\n\t\t});\n\t\tthis._uniformSpherical = new Float32Array(3 * 9);\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tthis._uniformSpherical[i * 3] = this._sphCoef[i * 3];\n\t\t\tthis._uniformSpherical[i * 3 + 1] = this._sphCoef[i * 3 + 1];\n\t\t\tthis._uniformSpherical[i * 3 + 2] = this._sphCoef[i * 3 + 2];\n\t\t}\n\t}\n}\n","function requestFileFromURL(url, options) {\n\treturn new Promise(function (resolve, reject) {\n\t\tvar req = new XMLHttpRequest();\n\t\treq.open('GET', url, true);\n\n\t\tvar responseType = options && options.responseType ? options.responseType.toLowerCase() : undefined;\n\n\t\t// handle responseType\n\t\tif (responseType) req.responseType = responseType;\n\n\t\tif (options && options.progress) {\n\t\t\treq.addEventListener('progress', options.progress, false);\n\t\t}\n\n\t\treq.addEventListener('error', reject, false);\n\n\t\treq.addEventListener('load', function () {\n\t\t\tif (req.responseType === 'arraybuffer' || req.responseType === 'blob') resolve(req.response);\n\t\t\telse resolve(req.responseText);\n\t\t});\n\n\t\treq.send(null);\n\t});\n}\n\nfunction requestFileFromReader(file, options) {\n\treturn new Promise(function (resolve) {\n\t\tvar responseType = options && options.responseType ? options.responseType.toLowerCase() : undefined;\n\t\tvar reader = new window.FileReader();\n\t\treader.onload = function (data) {\n\t\t\tresolve(data.target.result);\n\t\t};\n\t\t// handle responseType\n\t\tif (responseType) {\n\t\t\tif (responseType === 'arraybuffer') reader.readAsArrayBuffer(file);\n\t\t\telse if (responseType === 'blob') resolve(file);\n\t\t\telse if (responseType === 'string') reader.readAsText(file);\n\t\t\telse reader.readAsDataURL(file);\n\t\t} else {\n\t\t\treader.readAsText(file);\n\t\t}\n\t});\n}\n\nfunction requestFile(urlOrFile, options) {\n\tif (typeof urlOrFile === 'string') {\n\t\treturn requestFileFromURL(urlOrFile, options);\n\t} else {\n\t\treturn requestFileFromReader(urlOrFile, options);\n\t}\n}\n\nexport default requestFile;\n","import requestFile from './requestFile.js';\n\nlet mimeTypes = new Map();\n\nvar isString = function (str) {\n\treturn typeof str === 'string' || str instanceof String;\n};\n\nvar isBlobURL = function (str) {\n\treturn str.substr(0, 9) === 'blob:http';\n};\n\nvar isHttpURL = function (str) {\n\treturn str.substr(0, 7) === 'http://' || str.substr(0, 8) === 'https://';\n};\n\nvar isURL = function (str) {\n\tif (!isString(str)) return false;\n\n\treturn isBlobURL(str) || isHttpURL(str);\n};\n\nvar createImageFromURL = function (url) {\n\treturn new Promise(function (resolve, reject) {\n\t\tvar img = new Image();\n\t\timg.onerror = function () {\n\t\t\treject(img);\n\t\t};\n\n\t\timg.onload = function () {\n\t\t\tresolve(img);\n\t\t};\n\t\timg.src = url;\n\t});\n};\n\nvar createImageFromBlob = function (blob) {\n\tvar privateURL = window.URL.createObjectURL(blob);\n\tvar promise = createImageFromURL(privateURL);\n\n\tpromise.finally(function () {\n\t\twindow.URL.revokeObjectURL(privateURL);\n\t});\n\treturn promise;\n};\n\nvar createArrayBufferFromBlob = function (blob) {\n\treturn new Promise(function (resolve, reject) {\n\t\tvar fr = new FileReader();\n\n\t\tfr.onerror = function () {\n\t\t\treject(fr);\n\t\t};\n\n\t\tfr.onload = function () {\n\t\t\tresolve(this.result);\n\t\t};\n\t\tfr.readAsArrayBuffer(blob);\n\t});\n};\n\nvar createArrayBufferFromURL = function (url) {\n\treturn requestFile(url, {\n\t\tresponseType: 'arraybuffer'\n\t});\n};\n\nvar createJSONFromURL = function (url) {\n\treturn requestFile(url).then(function (string) {\n\t\treturn JSON.parse(string);\n\t});\n};\n\nvar createJSONFromString = function (str) {\n\tvar obj = JSON.parse(str);\n\treturn Promise.resolve(obj);\n};\n\nvar fileHelper = {\n\tcreateJSONFromURL: createJSONFromURL,\n\tcreateArrayBufferFromURL: createArrayBufferFromURL,\n\tcreateArrayBufferFromBlob: createArrayBufferFromBlob,\n\tcreateImageFromBlob: createImageFromBlob,\n\tcreateImageFromURL: createImageFromURL,\n\n\trequestURI: requestFile,\n\trequestResource: function (uri, options) {\n\t\tvar extension = fileHelper.getExtension(uri);\n\t\tvar mimetype = fileHelper.getMimeType(extension);\n\n\t\tvar responseType = options && options.responseType ? options.responseType.toLowerCase() : undefined;\n\t\tif (responseType) return requestFile(uri, options);\n\n\t\tif (mimetype) {\n\t\t\tif (mimetype.match('image')) return createImageFromURL(uri);\n\t\t\telse if (mimetype.match('binary')) return createArrayBufferFromURL(uri);\n\t\t\telse if (mimetype.match('json')) return createJSONFromURL(uri);\n\t\t\telse if (mimetype.match('text')) return requestFile(uri);\n\t\t}\n\n\t\treturn requestFile(uri);\n\t},\n\n\t//     file.png :  url          -> fetch/createImage            ->   Image\n\t//     file.png :  blob         -> createImage                  ->   Image\n\t//     file.png :  Image        -> passthroug                   ->   Image\n\t//     file.txt :  blob         -> FileReader                   ->   String\n\t//     file.txt :  string       -> passthroug                   ->   String\n\t//     file.txt :  url          -> fetch                        ->   String\n\t//     file.json:  string       -> JSON.parse                   ->   Object\n\t//     file.json:  url          -> fetch/JSON.parse             ->   Object\n\t//     file.json:  blob         -> FileReader/JSON.parse        ->   Object\n\t//     file.bin :  blob         -> FileReader/readAsArrayBuffer ->   arrayBuffer\n\t//     file.bin :  url          -> fetch as arra yBuffer        ->   arrayBuffer\n\t//     file.bin :  arrayBuffer  -> passthroug                   ->   arrayBuffer\n\tresolveData: function (uri, data) {\n\t\tvar extension = fileHelper.getExtension(uri);\n\t\tvar mimetype = fileHelper.getMimeType(extension);\n\t\tvar createData;\n\n\t\tif (mimetype) {\n\t\t\tif (mimetype.match('image')) {\n\t\t\t\tif (isString(data)) createData = createImageFromURL;\n\t\t\t\telse if (data instanceof Blob) createData = createImageFromBlob;\n\t\t\t} else if (mimetype.match('json')) {\n\t\t\t\tif (isURL(data)) createData = createJSONFromURL;\n\t\t\t\telse createData = createJSONFromString;\n\t\t\t} else if (mimetype.match('binary')) {\n\t\t\t\tif (isString(data)) createData = createArrayBufferFromURL;\n\t\t\t\telse if (data instanceof Blob) createData = createArrayBufferFromBlob;\n\t\t\t}\n\t\t}\n\n\t\tvar promise;\n\t\tif (createData) {\n\t\t\tpromise = createData(data);\n\t\t} else {\n\t\t\tpromise = Promise.resolve(data);\n\t\t}\n\t\treturn promise;\n\t},\n\n\tresolveFilesMap: function (filesMap) {\n\t\tvar promises = [];\n\n\t\tfor (var filename in filesMap) {\n\t\t\tvar data = filesMap[filename];\n\t\t\tvar promise = fileHelper.resolveData(filename, data).then(\n\t\t\t\tfunction (fname, dataResolved) {\n\t\t\t\t\tthis[fname] = dataResolved;\n\t\t\t\t}.bind(filesMap, filename)\n\t\t\t);\n\t\t\tpromises.push(promise);\n\t\t}\n\n\t\treturn Promise.all(promises).then(function () {\n\t\t\treturn filesMap;\n\t\t});\n\t},\n\n\tgetMimeType: function (extension) {\n\t\treturn mimeTypes.get(extension);\n\t},\n\n\tgetExtension: function (url) {\n\t\treturn url.substr(url.lastIndexOf('.') + 1);\n\t},\n\n\taddMimeTypeForExtension: function (extension, mimeType) {\n\t\tif (mimeTypes.has(extension) !== undefined) {\n\t\t\tconsole.warn(\"the '\" + extension + \"' already has a mimetype: \" + mimeTypes.get(extension));\n\t\t}\n\t\tmimeTypes.set(extension, mimeType);\n\t}\n};\n\nmimeTypes.set('bin', 'application/octet-binary');\nmimeTypes.set('b3dm', 'application/octet-binary');\nmimeTypes.set('glb', 'application/octet-binary');\nmimeTypes.set('zip', 'application/octet-binary');\nmimeTypes.set('gz', 'application/octet-binary');\n// Image\nmimeTypes.set('png', 'image/png');\nmimeTypes.set('jpg', 'image/jpeg');\nmimeTypes.set('jpeg', 'image/jpeg');\nmimeTypes.set('gif', 'image/gif');\n// Text\nmimeTypes.set('json', 'application/json');\nmimeTypes.set('gltf', 'application/json');\nmimeTypes.set('osgjs', 'application/json');\nmimeTypes.set('txt', 'text/plain');\nmimeTypes.set('glsl', 'text/plain');\n\nexport default fileHelper;\n","// refer: https://github.com/cedricpinson/osgjs\n\nimport * as THREE from 'three';\nimport EnvironmentCubeMap from './EnvironmentCubeMap';\nimport EnvironmentPanorama from './EnvironmentPanorama';\nimport IntegrateBRDFMap from './IntegrateBRDFMap';\nimport EnvironmentSphericalHarmonics from './EnvironmentSphericalHarmonics';\nimport fileHelper from './fileHelper';\nconst brdfLUTPath = './assets/envMap/brdf_ue4.bin.gz';\n\nclass Environment {\n\tconstructor(assetLibrary) {\n\t\tlet { textureLODSupport, isMobile } = assetLibrary;\n\t\tthis.isMobile = isMobile;\n\t\tthis.textureLODSupport = textureLODSupport;\n\t\tthis.assetLibrary = assetLibrary;\n\t\tthis._config = undefined;\n\t\tthis._files = {};\n\t\tthis.uIntegrateBRDF = assetLibrary.get('uIntegrateBRDF');\n\t}\n\n\tasync loadPackage(url, opts = {}) {\n\t\tthis.url = url;\n\t\tthis.needBG = opts.needBG;\n\t\tconst configSrc = `${url}config.json`;\n\t\tlet config = await fileHelper.requestResource(configSrc);\n\t\treturn await this.init(config);\n\t}\n\n\tgetImage(type, encoding, format) {\n\t\tlet results = this.getTextures(type, encoding, format);\n\t\tif (!results.length) return undefined;\n\t\t// Add limitSize\n\t\tif (results[0].limitSize) results[0].images[0].limitSize = results[0].limitSize;\n\t\treturn results[0].images[0];\n\t}\n\n\t// Filter texture by condition\n\t// Todo: Sync encoding param\n\tgetTextures(type, encoding, format) {\n\t\tlet textures = this._config.textures;\n\t\tlet results = textures.filter(texture => {\n\t\t\treturn texture.encoding === encoding && texture.format === format && texture.type === type;\n\t\t});\n\t\treturn results;\n\t}\n\n\tasync init(config) {\n\t\t// LUV format only (Todo: Support More format)\n\t\tthis._config = config;\n\n\t\tlet envMapFormat = 'panorama';\n\t\tif (this.textureLODSupport) envMapFormat = 'cubemap';\n\n\t\tlet textureData = this.getImage('specular_ue4', 'luv', envMapFormat);\n\t\tlet mapFile = textureData.file;\n\t\tlet mapSize = textureData.width;\n\t\tlet mapData = await fileHelper.requestResource(`${this.url}${mapFile}`);\n\t\tif (envMapFormat === 'cubemap') {\n\t\t\tthis.mapEnv = new EnvironmentCubeMap(mapData, mapSize, config);\n\t\t} else {\n\t\t\tthis.mapEnv = new EnvironmentPanorama(mapData, mapSize, config);\n\t\t}\n\t\tthis.mapEnv.loadPacked();\n\t\tlet minTextureSize = textureData.limitSize;\n\t\tlet nbLod = Math.log(mapSize) / Math.LN2;\n\t\tlet maxLod = nbLod - Math.log(minTextureSize) / Math.LN2;\n\t\tthis.uEnvironmentLodRange = [nbLod, maxLod];\n\t\tthis.uEnvironmentSize = [mapSize, mapSize];\n\n\t\tif (!this.uIntegrateBRDF) {\n\t\t\t// LUT\n\t\t\tlet lutTextureData = this.getImage('brdf_ue4', 'rg16', 'lut');\n\t\t\tlet lutSize = lutTextureData.width;\n\t\t\tlet lutData = await fileHelper.requestResource(brdfLUTPath);\n\t\t\tthis._integrateBRDF = new IntegrateBRDFMap(lutData, lutSize);\n\t\t\tthis.uIntegrateBRDF = this._integrateBRDF.loadPacked();\n\t\t\tthis.assetLibrary.set('uIntegrateBRDF', this.uIntegrateBRDF);\n\t\t}\n\n\t\t// Background\n\t\tif (this.needBG) {\n\t\t\tlet bgTextureData = this.getImage('background', 'luv', 'cubemap');\n\t\t\tlet bgFile = bgTextureData.file;\n\t\t\tlet bgSize = bgTextureData.width;\n\t\t\tlet bgData = await fileHelper.requestResource(`${this.url}${bgFile}`);\n\t\t\tthis.backgroundEnv = new EnvironmentCubeMap(bgData, bgSize, {\n\t\t\t\tminFilter: THREE.LinearFilter,\n\t\t\t\tmagFilter: THREE.LinearFilter\n\t\t\t});\n\t\t\tthis.backgroundEnv.loadPacked();\n\t\t\tthis.uBGEnvironmentSize = [bgSize, bgSize];\n\t\t}\n\n\t\t// EnvironmentSphericalHarmonics\n\t\tthis._spherical = new EnvironmentSphericalHarmonics(config.diffuseSPH);\n\t\tthis.uEnvironmentSphericalHarmonics = this._spherical._uniformSpherical;\n\n\t\t// Light\n\t\tif (config.Lights) {\n\t\t\tlet sunlight = config.Lights[0];\n\t\t\tthis.sunlightInfo = {\n\t\t\t\tcolor: new THREE.Color().fromArray(sunlight.color),\n\t\t\t\tposition: new THREE.Vector3().fromArray(sunlight.direction).negate(),\n\t\t\t\tintensity: sunlight.luminosity\n\t\t\t};\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport { Environment };\n","// Todo: Resolve the conflict with the Environment loading\nimport * as THREE from 'three';\nimport Signal from 'JS/Signal';\nimport { GLTFLoader } from 'LIB/threejs/loaders/GLTFLoader';\nimport { Environment } from 'MODULES/Environment/Environment';\nimport { checkLODSupport } from 'JS/Utils';\nimport loadFont from 'load-bmfont';\n\nexport default class AssetLibrary {\n\tconstructor(isMobile) {\n\t\tthis.loadedNumber = 0;\n\t\tthis.loadQueue = [];\n\t\tthis.assets = {};\n\t\tthis.onCompleteEvent = new Signal();\n\t\tthis.onProgressEvent = new Signal();\n\t\tthis.isMobile = isMobile;\n\t\tthis.textureLODSupport = checkLODSupport();\n\t}\n\n\tget onComplete() {\n\t\treturn this.onCompleteEvent;\n\t}\n\n\tget onProgress() {\n\t\treturn this.onProgressEvent;\n\t}\n\n\tget(key) {\n\t\treturn this.assets[key];\n\t}\n\n\tset(key, value) {\n\t\tthis.assets[key] = value;\n\t}\n\n\taddLoadQueue(key, path, type, parser, opts) {\n\t\tthis.loadQueue.push({ key, filePath: path, type, parser, opts });\n\t}\n\n\tload() {\n\t\tif (this.loadQueue.length === 0) return void this.onComplete.dispatch();\n\t\tlet asset = this.loadQueue[this.loadedNumber];\n\t\tswitch (asset.type) {\n\t\t\tcase 'Texture':\n\t\t\t\tthis.loadTexture(asset.filePath, asset.key, asset.parser);\n\t\t\t\tbreak;\n\t\t\tcase 'Model':\n\t\t\t\tthis.loadModel(asset.filePath, asset.key, asset.parser);\n\t\t\t\tbreak;\n\t\t\tcase 'EnvMap':\n\t\t\t\tthis.loadEnvMap(asset.filePath, asset.key, asset.opts);\n\t\t\t\tbreak;\n\t\t\tcase 'Font':\n\t\t\t\tthis.loadFontAsset(asset.filePath, asset.key);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.error(`No support ${asset.type} type asset!`);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tloadTexture(filePath, key, parser) {\n\t\tlet loader = new (parser || THREE.TextureLoader)();\n\t\tloader.load(filePath, texture => {\n\t\t\tthis.assets[key] = texture;\n\t\t\ttexture.minFilter = THREE.LinearFilter;\n\t\t\tthis.onAssetLoaded();\n\t\t});\n\t}\n\n\tloadModel(filePath, key, parser) {\n\t\tlet loader = new (parser || GLTFLoader)();\n\t\tloader.load(filePath, model => {\n\t\t\tthis.assets[key] = model;\n\t\t\tthis.onAssetLoaded();\n\t\t});\n\t}\n\n\tloadEnvMap(filePath, key, opts) {\n\t\tnew Environment(this).loadPackage(filePath, opts).then(env => {\n\t\t\tthis.assets[key] = env;\n\t\t\tthis.onAssetLoaded();\n\t\t});\n\t}\n\n\tloadFontAsset(filePath, key) {\n\t\tloadFont('./assets/fonts/Lato.fnt', (err, font) => {\n\t\t\tthis.assets[key] = font;\n\t\t\tthis.onAssetLoaded();\n\t\t});\n\t}\n\n\tonAssetLoaded() {\n\t\tthis.loadedNumber += 1;\n\t\tthis.onProgress.dispatch(this.loadedNumber / this.loadQueue.length);\n\t\tif (this.loadedNumber === this.loadQueue.length) {\n\t\t\t// Load Complete\n\t\t\tthis.onComplete.dispatch(this);\n\t\t} else {\n\t\t\t// Or continue load next asset\n\t\t\tthis.load();\n\t\t}\n\t}\n}\n","const commonAssetList = [\n\t// Home Section\n\t{\n\t\tkey: 'EnvMap-Industrial',\n\t\tpath: './assets/envMap/Industrial/',\n\t\ttype: 'EnvMap'\n\t},\n\t{\n\t\tkey: 'Model-FF7',\n\t\tpath: './assets/models/FF7.glb',\n\t\ttype: 'Model'\n\t},\n\t{\n\t\tkey: 'Texture-Cloud',\n\t\tpath: require('../assets/images/Cloud.png'),\n\t\ttype: 'Texture'\n\t},\n\t{\n\t\tkey: 'Texture-Aerith',\n\t\tpath: require('../assets/images/Aerith.png'),\n\t\ttype: 'Texture'\n\t},\n\t{\n\t\tkey: 'Font-Lato',\n\t\tpath: './assets/fonts/Lato.fnt',\n\t\ttype: 'Font'\n\t},\n\t{\n\t\tkey: 'Texture-Lato',\n\t\tpath: './assets/fonts/Lato.png',\n\t\ttype: 'Texture'\n\t},\n\t// Gallery Section\n\t{\n\t\tkey: 'Texture-Diamond1',\n\t\tpath: require('../assets/images/Diamond1.jpg'),\n\t\ttype: 'Texture'\n\t},\n\t{\n\t\tkey: 'Texture-Diamond2',\n\t\tpath: require('../assets/images/Diamond2.jpg'),\n\t\ttype: 'Texture'\n\t},\n\t{\n\t\tkey: 'Texture-Binguo1',\n\t\tpath: require('../assets/images/Binguo1.jpg'),\n\t\ttype: 'Texture'\n\t},\n\t{\n\t\tkey: 'Texture-Binguo2',\n\t\tpath: require('../assets/images/Binguo2.jpg'),\n\t\ttype: 'Texture'\n\t},\n\t{\n\t\tkey: 'Texture-STM1',\n\t\tpath: require('../assets/images/STM1.jpg'),\n\t\ttype: 'Texture'\n\t},\n\t{\n\t\tkey: 'Texture-STM2',\n\t\tpath: require('../assets/images/STM2.jpg'),\n\t\ttype: 'Texture'\n\t},\n\t// Work Section\n\t{\n\t\tkey: 'EnvMap-Milkyway',\n\t\tpath: './assets/envMap/Milkyway/',\n\t\ttype: 'EnvMap',\n\t\topts: {\n\t\t\tneedBG: true\n\t\t}\n\t},\n\t{\n\t\tkey: 'Model-Chess',\n\t\tpath: './assets/models/Chess/scene.gltf',\n\t\ttype: 'Model'\n\t},\n];\n\nconst PCPreloadConfigList = [\n\t{\n\t\tkey: 'Texture-NGNL1',\n\t\tpath: require('../assets/images/NGNL1.jpg'),\n\t\ttype: 'Texture'\n\t},\n\t{\n\t\tkey: 'Texture-OnePunch1',\n\t\tpath: require('../assets/images/OnePunch1.jpg'),\n\t\ttype: 'Texture'\n\t}\n].concat(commonAssetList);\n\nconst MobilePreloadConfigList = [\n\t{\n\t\tkey: 'Texture-NGNL1',\n\t\tpath: require('../assets/images/mobile/NGNL1.jpg'),\n\t\ttype: 'Texture'\n\t},\n\t{\n\t\tkey: 'Texture-OnePunch1',\n\t\tpath: require('../assets/images/mobile/OnePunch1.jpg'),\n\t\ttype: 'Texture'\n\t}\n].concat(commonAssetList);\n\nexport { MobilePreloadConfigList, PCPreloadConfigList };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Stats = function () {\n\tvar mode = 0;\n\n\tvar container = document.createElement('div');\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener(\n\t\t'click',\n\t\tfunction (event) {\n\t\t\tevent.preventDefault();\n\t\t\tshowPanel(++mode % container.children.length);\n\t\t},\n\t\tfalse\n\t);\n\n\t//\n\n\tfunction addPanel(panel) {\n\t\tcontainer.appendChild(panel.dom);\n\t\treturn panel;\n\t}\n\n\tfunction showPanel(id) {\n\t\tfor (var i = 0; i < container.children.length; i++) {\n\t\t\tcontainer.children[i].style.display = i === id ? 'block' : 'none';\n\t\t}\n\n\t\tmode = id;\n\t}\n\n\t//\n\n\tvar beginTime = (performance || Date).now(),\n\t\tprevTime = beginTime,\n\t\tframes = 0;\n\n\tvar fpsPanel = addPanel(new Stats.Panel('FPS', '#0ff', '#002'));\n\tvar msPanel = addPanel(new Stats.Panel('MS', '#0f0', '#020'));\n\n\tif (self.performance && self.performance.memory) {\n\t\tvar memPanel = addPanel(new Stats.Panel('MB', '#f08', '#201'));\n\t}\n\n\tshowPanel(0);\n\n\treturn {\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\t\t\tbeginTime = (performance || Date).now();\n\t\t},\n\n\t\tend: function () {\n\t\t\tframes++;\n\n\t\t\tvar time = (performance || Date).now();\n\n\t\t\tmsPanel.update(time - beginTime, 200);\n\n\t\t\tif (time >= prevTime + 1000) {\n\t\t\t\tfpsPanel.update((frames * 1000) / (time - prevTime), 100);\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif (memPanel) {\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update(memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn time;\n\t\t},\n\n\t\tupdate: function () {\n\t\t\tbeginTime = this.end();\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\t};\n};\n\nStats.Panel = function (name, fg, bg) {\n\tvar min = Infinity,\n\t\tmax = 0,\n\t\tround = Math.round;\n\tvar PR = round(window.devicePixelRatio || 1);\n\n\tvar WIDTH = 80 * PR,\n\t\tHEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR,\n\t\tTEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR,\n\t\tGRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR,\n\t\tGRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement('canvas');\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext('2d');\n\tcontext.font = 'bold ' + 9 * PR + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect(0, 0, WIDTH, HEIGHT);\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText(name, TEXT_X, TEXT_Y);\n\tcontext.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n\treturn {\n\t\tdom: canvas,\n\n\t\tupdate: function (value, maxValue) {\n\t\t\tmin = Math.min(min, value);\n\t\t\tmax = Math.max(max, value);\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect(0, 0, WIDTH, GRAPH_Y);\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText(round(value) + ' ' + name + ' (' + round(min) + '-' + round(max) + ')', TEXT_X, TEXT_Y);\n\n\t\t\tcontext.drawImage(\n\t\t\t\tcanvas,\n\t\t\t\tGRAPH_X + PR,\n\t\t\t\tGRAPH_Y,\n\t\t\t\tGRAPH_WIDTH - PR,\n\t\t\t\tGRAPH_HEIGHT,\n\t\t\t\tGRAPH_X,\n\t\t\t\tGRAPH_Y,\n\t\t\t\tGRAPH_WIDTH - PR,\n\t\t\t\tGRAPH_HEIGHT\n\t\t\t);\n\n\t\t\tcontext.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT);\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round((1 - value / maxValue) * GRAPH_HEIGHT));\n\t\t}\n\t};\n};\n\nexport default Stats;\n","import * as THREE from 'three';\nimport ScenesViewer from './ScenesViewer';\nimport AssetLibrary from './loader/AssetLibrary';\nimport { PCPreloadConfigList, MobilePreloadConfigList } from 'CONST/assetsPreloadConfig';\nimport { getEleWidth, getEleHeight, debounce } from 'JS/Utils';\nimport Stats from 'LIB/threejs/libs/stats.module.js';\n\nexport default class MainScene {\n\tconstructor(container, isMobile, toggleConactCallback) {\n\t\tthis.container = container;\n\t\tthis.isMobile = isMobile;\n\t\tthis.preloadConfigList = isMobile ? MobilePreloadConfigList : PCPreloadConfigList;\n\t\tthis.width = getEleWidth(container);\n\t\tthis.height = getEleHeight(container);\n\t\tthis.clock = new THREE.Clock();\n\t\tthis.dpr = window.devicePixelRatio;\n\t\tthis.assetLibrary = new AssetLibrary(isMobile);\n\t\tthis.scene = new THREE.Scene();\n\t\t// Camera\n\t\tconst camera = (this.camera = new THREE.PerspectiveCamera(45, this.width / this.height, 0.1, 1000));\n\t\tcamera.position.set(0, 0, 10);\n\t\t// Renderer\n\t\tconst renderer = (this.renderer = new THREE.WebGL1Renderer({\n\t\t\tantialias: true\n\t\t}));\n\t\trenderer.domElement.id = 'canvasWebGL';\n\t\trenderer.setPixelRatio(this.dpr);\n\t\trenderer.setSize(this.width, this.height);\n\t\trenderer.gammaFactor = 2.2;\n\t\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\t\trenderer.outputEncoding = THREE.sRGBEncoding;\n\t\trenderer.setClearColor(0x000000, 1);\n\t\trenderer.autoClear = false;\n\t\tcontainer.appendChild(renderer.domElement);\n\t\t// Callback\n\t\tthis.toggleConactCallback = toggleConactCallback;\n\t\t// Test\n\t\tthis.stats = new Stats();\n\t\tdocument.body.appendChild(this.stats.dom);\n\t}\n\n\tloadAssets(onProgress, onComplete) {\n\t\tlet assetLibrary = this.assetLibrary;\n\t\t// Todo: const and for\n\t\tthis.preloadConfigList.forEach(config => {\n\t\t\tassetLibrary.addLoadQueue(config.key, config.path, config.type, config.parser, config.opts);\n\t\t});\n\n\t\tassetLibrary.onProgress.bind(onProgress);\n\t\tassetLibrary.onComplete.bind(onComplete);\n\t\tassetLibrary.load();\n\t}\n\n\tinitScene() {\n\t\tthis.scenesViewer = new ScenesViewer(this);\n\t\tthis.update();\n\t\tthis.initEvents();\n\t}\n\n\tentryAnime() {\n\t\tthis.scenesViewer.entryAnime();\n\t}\n\n\tinitEvents() {\n\t\twindow.addEventListener('resize', debounce(this.onWindowResize.bind(this), 100), false);\n\t\tthis.onWindowResize();\n\t}\n\n\tonWindowResize() {\n\t\tthis.width = getEleWidth(this.container);\n\t\tthis.height = getEleHeight(this.container);\n\t\tthis.dpr = window.devicePixelRatio;\n\t\tthis.renderer.setPixelRatio(this.dpr);\n\t\tthis.renderer.setSize(this.width, this.height);\n\t\tthis.scenesViewer.resize(this.width, this.height);\n\t}\n\n\tupdate() {\n\t\tthis.scenesViewer.update();\n\t\trequestAnimationFrame(this.update.bind(this));\n\t\t// Test\n\t\tthis.stats.update();\n\t}\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.loadingAnimeFinished)?_c('section',{staticClass:\"loadingContainer\",class:_vm.isMobile ? 'mobile' : ''},[_c('div',{staticClass:\"loadingSVG\"},[_c('svg',{staticClass:\"svgOutline svgLoading\",attrs:{\"viewBox\":\"0 0 33 33\"}},[_c('polygon',{staticClass:\"svgTriangle\",attrs:{\"fill\":\"none\",\"stroke\":\"#fff\",\"stroke-width\":\"1\",\"points\":\"16,1 32,32 1,32\"}})]),_c('svg',{staticClass:\"svgInner svgLoading\",attrs:{\"viewBox\":\"0 0 33 33\"}},[_c('polygon',{staticClass:\"svgTriangle\",attrs:{\"fill\":\"none\",\"stroke\":\"#fff\",\"stroke-width\":\"1\",\"points\":\"16,1 32,32 1,32\"}})]),_c('svg',{staticClass:\"svgFill\",attrs:{\"viewBox\":\"0 0 33 33\"}},[_c('polygon',{staticClass:\"svgTriangle\",attrs:{\"fill\":\"none\",\"stroke\":\"#fff\",\"stroke-width\":\"1.1\",\"points\":\"16,1 32,32 1,32\"}})])]),_c('div',{staticClass:\"loadingText\"},[_c('h1',{staticClass:\"loadingPercent\"},[_vm._v(_vm._s(((Math.floor(_vm.loadingPercentNum)) + \"%\")))]),_c('p',{staticClass:\"LG\"},[_vm._v(_vm._s(_vm.loadingText))])]),_vm._m(0)]):_vm._e()}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"Tips\"},[_vm._v(\"Use PC\"),_c('s',[_vm._v(\"(2080Ti above)\")]),_vm._v(\" for better experience\")])}]\n\nexport { render, staticRenderFns }","<template>\r\n\t<section :class=\"isMobile ? 'mobile' : ''\" class=\"loadingContainer\" v-if=\"!loadingAnimeFinished\">\r\n\t\t<div class=\"loadingSVG\">\r\n\t\t\t<svg class=\"svgOutline svgLoading\" viewBox=\"0 0 33 33\">\r\n\t\t\t\t<polygon class=\"svgTriangle\" fill=\"none\" stroke=\"#fff\" stroke-width=\"1\" points=\"16,1 32,32 1,32\" />\r\n\t\t\t</svg>\r\n\t\t\t<svg class=\"svgInner svgLoading\" viewBox=\"0 0 33 33\">\r\n\t\t\t\t<polygon class=\"svgTriangle\" fill=\"none\" stroke=\"#fff\" stroke-width=\"1\" points=\"16,1 32,32 1,32\" />\r\n\t\t\t</svg>\r\n\t\t\t<svg class=\"svgFill\" viewBox=\"0 0 33 33\">\r\n\t\t\t\t<polygon class=\"svgTriangle\" fill=\"none\" stroke=\"#fff\" stroke-width=\"1.1\" points=\"16,1 32,32 1,32\" />\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t\t<div class=\"loadingText\">\r\n\t\t\t<h1 class=\"loadingPercent\">{{ `${Math.floor(loadingPercentNum)}%` }}</h1>\r\n\t\t\t<p class=\"LG\">{{ loadingText }}</p>\r\n\t\t</div>\r\n\t\t<p class=\"Tips\">Use PC<s>(2080Ti above)</s> for better experience</p>\r\n\t</section>\r\n</template>\r\n\r\n<script>\r\nimport { gsap } from 'gsap';\r\nexport default {\r\n\tname: 'PreLoader',\r\n\tprops: ['isLoaded', 'loadingPercent', 'isMobile'],\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tloadingPercentNum: 0,\r\n\t\t\tloadingText: 'LOADING...',\r\n\t\t\tloadingAnimeFinished: false\r\n\t\t};\r\n\t},\r\n\tmounted() {},\r\n\twatch: {\r\n\t\tloadingPercent(val, oldVal) {\r\n\t\t\tval *= 100;\r\n\t\t\tgsap.to(this, { loadingPercentNum: val, duration: 1 });\r\n\t\t},\r\n\t\tisLoaded(val, oldVal) {\r\n\t\t\tif (val) {\r\n\t\t\t\t// 1.SVG\r\n\t\t\t\tgsap.to('.svgLoading', { opacity: 0, duration: 0.5 });\r\n\t\t\t\tgsap.to('.svgFill', {\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tduration: 1,\r\n\t\t\t\t\tonComplete: () => {\r\n\t\t\t\t\t\t// LG Text\r\n\t\t\t\t\t\tthis.loadingText = 'LG';\r\n\t\t\t\t\t\tgsap.to('.loadingContainer', {\r\n\t\t\t\t\t\t\topacity: 0,\r\n\t\t\t\t\t\t\tduration: 1,\r\n\t\t\t\t\t\t\tdelay: 0.4,\r\n\t\t\t\t\t\t\tonComplete: () => {\r\n\t\t\t\t\t\t\t\tthis.loadingAnimeFinished = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n// Loading\r\n.loadingContainer {\r\n\tposition: absolute;\r\n\theight: 100%;\r\n\twidth: 100vw;\r\n\tbackground: #000000;\r\n\tcolor: #ffffff;\r\n\ttext-align: center;\r\n\t.loadingSVG {\r\n\t\tposition: absolute;\r\n\t\ttop: 45%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 10vw;\r\n\t\tsvg {\r\n\t\t\tbottom: 0;\r\n\t\t\tright: 0;\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 100%;\r\n\t\t\ttop: 50%;\r\n\t\t\tleft: 50%;\r\n\t\t\ttransform: translate(-50%, -50%);\r\n\t\t\t&.svgInner .svgTriangle {\r\n\t\t\t\tstroke-dasharray: 17;\r\n\t\t\t\tanimation: dash 3.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;\r\n\t\t\t}\r\n\t\t\t&.svgOutline .svgTriangle {\r\n\t\t\t\tstroke: rgba(255, 255, 255, 0.2);\r\n\t\t\t\tfill: none;\r\n\t\t\t\tstroke-width: 1.4px;\r\n\t\t\t}\r\n\t\t\t&.svgFill {\r\n\t\t\t\topacity: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t.loadingText {\r\n\t\tposition: absolute;\r\n\t\tbottom: 15%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, 0);\r\n\t\twidth: 233px;\r\n\t\ttext-align: center;\r\n\t\t.LG {\r\n\t\t\tmargin-top: 50px;\r\n\t\t\tposition: relative;\r\n\t\t\tfont-size: 20px;\r\n\t\t\tletter-spacing: 3px;\r\n\t\t\topacity: 0;\r\n\t\t\ttext-transform: uppercase;\r\n\t\t\tanimation: fadeIn 2.5s forwards;\r\n\r\n\t\t\t&::before,\r\n\t\t\t&::after {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tcontent: '';\r\n\t\t\t\ttop: 0;\r\n\t\t\t\tbottom: 0;\r\n\t\t\t\twidth: 2px;\r\n\t\t\t\topacity: 0;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\tbackground: white;\r\n\t\t\t}\r\n\r\n\t\t\t&::before {\r\n\t\t\t\tleft: 50%;\r\n\t\t\t\tanimation: slideLeft 1s forwards;\r\n\t\t\t}\r\n\r\n\t\t\t&::after {\r\n\t\t\t\tright: 50%;\r\n\t\t\t\tanimation: slideRight 1s forwards;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t.Tips {\r\n\t\tfont-size: 15px;\r\n\t\tmargin-top: 35px;\r\n\t\topacity: 0;\r\n\t\tbottom: 5%;\r\n\t\tposition: absolute;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, 0);\r\n\t\tanimation: fadeInTips 1s forwards;\r\n\t}\r\n}\r\n\r\n.loadingContainer.mobile {\r\n\t.loadingSVG {\r\n\t\twidth: 30vw;\r\n\t}\r\n}\r\n\r\n@keyframes fadeIn {\r\n\tto {\r\n\t\topacity: 1;\r\n\t}\r\n}\r\n\r\n@keyframes fadeInTips {\r\n\tto {\r\n\t\topacity: 0.6;\r\n\t}\r\n}\r\n\r\n@keyframes slideLeft {\r\n\tto {\r\n\t\tleft: -2%;\r\n\t\topacity: 1;\r\n\t}\r\n}\r\n\r\n@keyframes slideRight {\r\n\tto {\r\n\t\tright: -2%;\r\n\t\topacity: 1;\r\n\t}\r\n}\r\n\r\n@keyframes dash {\r\n\tto {\r\n\t\tstroke-dashoffset: 136;\r\n\t}\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreLoader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreLoader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PreLoader.vue?vue&type=template&id=62d4e358&\"\nimport script from \"./PreLoader.vue?vue&type=script&lang=js&\"\nexport * from \"./PreLoader.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PreLoader.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.isOpenConactPanel)?_c('section',{staticClass:\"aboutSection\"},[_vm._m(0),_vm._m(1),_vm._m(2)]):_vm._e()}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"sentence revealAnimation animate\"},[_c('h1',[_vm._v(\"『 趣味でヒーローをやっているものだ 』\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"textContainer animate\"},[_c('h2',[_vm._v(\"Conact\")]),_c('div',[_c('a',{attrs:{\"href\":\"https://twitter.com/WebAMV\",\"target\":\"_blank\"}},[_c('span',[_vm._v(\"Twitter\")])]),_c('a',{attrs:{\"href\":\"https://lg2lugang@gmail.com/\",\"target\":\"_blank\"}},[_c('span',[_vm._v(\"Email\")])]),_c('a',{attrs:{\"href\":\"https://github.com/todaylg\",\"target\":\"_blank\"}},[_c('span',[_vm._v(\"Github\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"textContainer animate\"},[_c('h2',[_vm._v(\"Other\")]),_c('div',[_c('a',{attrs:{\"href\":\"http://todaylg.com/LG-Blog-Gatsby/\",\"target\":\"_blank\"}},[_c('span',[_vm._v(\"Blog\")])]),_c('a',{attrs:{\"href\":\"https://todaylg.com/three-viewer/\",\"target\":\"_blank\"}},[_c('span',[_vm._v(\"Viewer\")])]),_c('a',{attrs:{\"href\":\"https://todaylg.com/three-anime-sketches/index/\",\"target\":\"_blank\"}},[_c('span',[_vm._v(\"Sketches\")])])])])}]\n\nexport { render, staticRenderFns }","<template>\r\n\t<section class=\"aboutSection\" v-if=\"isOpenConactPanel\">\r\n\t\t<div>\r\n\t\t\t<div class=\"sentence revealAnimation animate\">\r\n\t\t\t\t<h1>『 趣味でヒーローをやっているものだ 』</h1>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"textContainer animate\">\r\n\t\t\t<h2>Conact</h2>\r\n\t\t\t<div>\r\n\t\t\t\t<a href=\"https://twitter.com/WebAMV\" target=\"_blank\">\r\n\t\t\t\t\t<span>Twitter</span>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"https://lg2lugang@gmail.com/\" target=\"_blank\">\r\n\t\t\t\t\t<span>Email</span>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"https://github.com/todaylg\" target=\"_blank\">\r\n\t\t\t\t\t<span>Github</span>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"textContainer animate\">\r\n\t\t\t<h2>Other</h2>\r\n\t\t\t<div>\r\n\t\t\t\t<a href=\"http://todaylg.com/LG-Blog-Gatsby/\" target=\"_blank\">\r\n\t\t\t\t\t<span>Blog</span>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"https://todaylg.com/three-viewer/\" target=\"_blank\">\r\n\t\t\t\t\t<span>Viewer</span>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"https://todaylg.com/three-anime-sketches/index/\" target=\"_blank\">\r\n\t\t\t\t\t<span>Sketches</span>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</section>\r\n</template>\r\n\r\n<script>\r\nimport { gsap } from 'gsap';\r\nexport default {\r\n\tname: 'ConactPanel',\r\n\tprops: ['isOpenConactPanel', 'isMobile']\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.aboutSection {\r\n\tcolor: white;\r\n\tposition: absolute;\r\n\ttop: 10%;\r\n\tleft: 10%;\r\n\twidth: 80%;\r\n\theight: 80%;\r\n\ttext-align: center;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tflex-direction: column;\r\n\t.sentence {\r\n\t\tdisplay: inline-block;\r\n\t}\r\n}\r\n\r\n.textContainer {\r\n\topacity: 0;\r\n\th2 {\r\n\t\tdisplay: inline-block;\r\n\t\tborder-bottom: 1px solid rgb(224, 224, 224);\r\n\t}\r\n\tspan {\r\n\t\tcolor: #ffffff;\r\n\t\t// padding: 0px 2vw;\r\n\t\tpointer-events: auto;\r\n\t\tmin-width: 100px;\r\n\t\tdisplay: inline-block;\r\n\t\t&:hover {\r\n\t\t\tcursor: pointer;\r\n\t\t\tcolor: #f0f8ff;\r\n\t\t}\r\n\t}\r\n\t&.animate {\r\n\t\tanimation: textEntry 1s forwards;\r\n\t}\r\n}\r\n\r\n@keyframes textEntry {\r\n\t0% {\r\n\t\topacity: 0;\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t}\r\n}\r\n\r\n.revealAnimation {\r\n\tposition: relative;\r\n\th1 {\r\n\t\tmargin: 0;\r\n\t\topacity: 0;\r\n\t}\r\n\t&.animate {\r\n\t\th1 {\r\n\t\t\tanimation: textFadein 0.1s 0.5s forwards;\r\n\t\t}\r\n\t\t&:before {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 0;\r\n\t\t\tright: 0;\r\n\t\t\theight: 100%;\r\n\t\t\tz-index: 10;\r\n\t\t}\r\n\t\t&:before {\r\n\t\t\tbackground-color: white;\r\n\t\t\tanimation: revealAnimation 1s ease;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@keyframes revealAnimation {\r\n\t0% {\r\n\t\twidth: 0;\r\n\t\tleft: 0;\r\n\t}\r\n\t65% {\r\n\t\twidth: 100%;\r\n\t\tleft: 0;\r\n\t}\r\n\t100% {\r\n\t\twidth: 0;\r\n\t\tleft: 100%;\r\n\t}\r\n}\r\n\r\n@keyframes textFadein {\r\n\t0% {\r\n\t\topacity: 0;\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t}\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConactPanel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConactPanel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ConactPanel.vue?vue&type=template&id=1ab7625d&\"\nimport script from \"./ConactPanel.vue?vue&type=script&lang=js&\"\nexport * from \"./ConactPanel.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ConactPanel.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n\t<div class=\"wrapper\">\r\n\t\t<div id=\"canvasContainer\"></div>\r\n\t\t<div class=\"uiContainer\">\r\n\t\t\t<ConactPanel :isMobile=\"isMobile\" :isOpenConactPanel=\"isOpenConactPanel\"></ConactPanel>\r\n\t\t</div>\r\n\t\t<PreLoader :isMobile='isMobile' :isLoaded='isLoaded' :loadingPercent='loadingPercent'></PreLoader>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport { isMobile } from 'JS/Utils';\r\nimport MainScene from 'WEBGL/MainScene';\r\nimport PreLoader from 'COMPONENT/PreLoader';\r\nimport ConactPanel from 'COMPONENT/ConactPanel';\r\n\r\nexport default {\r\n\tname: 'MainScene',\r\n\tcomponents: {\r\n\t\tPreLoader,\r\n\t\tConactPanel\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tisMobile: isMobile(),\r\n\t\t\tisLoaded: false,\r\n\t\t\tloadingPercent: 0,\r\n\t\t\tisOpenConactPanel: false\r\n\t\t};\r\n\t},\r\n\tmounted() {\r\n\t\tlet containerEle = document.querySelector('#canvasContainer');\r\n\t\tthis.mainScene = new MainScene(containerEle, this.isMobile, this.toggleConactPanel.bind(this));\r\n\t\tthis.mainScene.loadAssets(\r\n\t\t\tpersent => {\r\n\t\t\t\tthis.updateProgress(persent);\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.loadCompelete();\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\tmethods: {\r\n\t\tupdateProgress(persent) {\r\n\t\t\tthis.loadingPercent = persent;\r\n\t\t},\r\n\t\tloadCompelete() {\r\n\t\t\tthis.mainScene.initScene();\r\n\t\t\tconsole.log('Loaded!!');\r\n\t\t\tthis.isLoaded = true;\r\n\t\t\tthis.mainScene.entryAnime();\r\n\t\t},\r\n\t\ttoggleConactPanel(status) {\r\n\t\t\tthis.isOpenConactPanel = status;\r\n\t\t}\r\n\t}\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\nhtml,\r\nbody {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n    position: fixed;\r\n\tbox-sizing: border-box;\r\n\tbackground: #000;\r\n\tuser-select: none;\r\n\toverflow: hidden;\r\n}\r\n\r\na {\r\n\ttext-decoration: none;\r\n}\r\n\r\nbody[cursor='pointer'] {\r\n\tcursor: pointer;\r\n}\r\n\r\n.wrapper {\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tposition: relative;\r\n\toverflow: hidden;\r\n}\r\n\r\n// Hide gui default\r\n.dg.main {\r\n\tdisplay: none;\r\n\topacity: 0;\r\n}\r\n\r\n#canvasContainer {\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: fixed;\r\n\toverflow: hidden;\r\n}\r\n\r\n.uiContainer {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\toverflow: hidden;\r\n}\r\n</style>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=8f136776&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport App from './index.vue';\n\nnew Vue({\n\trender: h => h(App)\n}).$mount('#container');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConactPanel.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConactPanel.vue?vue&type=style&index=0&lang=less&\"","module.exports = __webpack_public_path__ + \"img/STM1.078bcba5.jpg\";","module.exports = __webpack_public_path__ + \"img/Aerith.7d302d84.png\";","module.exports = __webpack_public_path__ + \"img/Cloud.196963e5.png\";","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","module.exports = __webpack_public_path__ + \"img/NGNL1.e9f403ef.jpg\";","module.exports = __webpack_public_path__ + \"img/Diamond2.ffc96de1.jpg\";","module.exports = __webpack_public_path__ + \"img/Diamond1.2bf331ea.jpg\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreLoader.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreLoader.vue?vue&type=style&index=0&lang=less&\"","module.exports = __webpack_public_path__ + \"img/OnePunch1.9f5cc5ed.jpg\";"],"sourceRoot":""}